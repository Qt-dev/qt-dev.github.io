<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Qt's Home]]></title>
  <link href="http://Qt-dev.github.io/feed" rel="self"/>
  <link href="http://Qt-dev.github.io/"/>
  <updated>2014-02-21T14:08:35-08:00</updated>
  <id>http://Qt-dev.github.io/</id>
  <author>
    <name><![CDATA[Quentin Devauchelle]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Week 4 - Day 4 - Confidence, (Lack of) sleep and links]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/02/20/week-4-day-4-building/"/>
    <updated>2014-02-20T08:51:00-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/02/20/week-4-day-4-building</id>
    <content type="html"><![CDATA[<h2>Confidence</h2>

<p>Yesterday, we paired with Ivan. He is awesome! And we completed the blog engine with everything that we need. It now works, has tags, user management, perfect!
The only thing is that it is not beautiful, but we got what we wanted from that. You can see that here : <a href="http://evening-beach-8495.herokuapp.com">Our super blog engine~</a></p>

<p>But then I realized it took us more time than the others. I feel very confident and could explain every line of code in all of that, but then what if I just spent too much time on that?</p>

<p>I feel like Phase 2 is hard on confidence. I complete stuff, learn all the time, and then compare myself.</p>

<p>But then, we got code review. At the end of that, I know that my work is fine. My code is clean, upgradable of course, but not needed upgrades, and not with the things we know so far.<br/>
Another thing that actually helped me was : We took 45 minutes with matthew, and we created our own version of <a href="http://bit.ly">bit.ly</a>. I&rsquo;ll share the link when I have it deployed ;)</p>

<p>So in the end, we took more time on the main challenges&hellip; And that gave us the possibility to finish the rest much faster. So in the end, I am still in the race&hellip; We are ALL! But we need to keep on going.</p>

<h2>(Lack of) Sleep</h2>

<p>First phase was cool. We live nearby, we work until late, but then we go back fast, sleep, and come in late in the morning.</p>

<p>Phase 2 is not like that. The fact that I did not feel really confident about the amount of work ended up making me, and a lot of us, go back home later and later everyday. Yesterday, we got back home at 1AM&hellip;</p>

<p>So in the end, bye bye the 8 hours nights for this week&hellip; But then I need to sleep, because DBC is a marathon, not a sprint. And less sleep &ndash;> less effective the next days. So this weekend, I&rsquo;ll sleep. A lot.</p>

<p>It is my plan, and I will stick to that! If not, I&rsquo;ll get hit very hard by my fiancee&hellip; I am scared.</p>

<h2>Links</h2>

<p>Everything is linked. We are all, the things we do are all, the whole world is just a big net. In DBC, and especially in the hard times we are facing sometimes, it just makes us connect more. I feel like everybody around me is now part of my family. Even the new cohort are like little brothers and sisters I just got.<br/>
I love that. I love that new family, every one of them! (Or maybe not Matthew? I haven&rsquo;t decided yet, he&rsquo;s ok as Glenn)</p>

<p>Plus, small things make me think about that big net. Yesterday was a conference by a developer that works for <a href="http://www.zendesk.com">Zendesk</a>. Zendesk being the tool that I used in my work before DBC&hellip;</p>

<p>Things are related, that&rsquo;s it. I don&rsquo;t believe in randomness, I do believe in links too complicated to be understandable, but not in randomness.</p>

<p>Anyway, back to work now, expect some news tomorrow!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Week 4 - Day 3 - Building, Testing, and deception]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/02/20/week-4-day-3-building/"/>
    <updated>2014-02-20T08:51:00-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/02/20/week-4-day-3-building</id>
    <content type="html"><![CDATA[<h2>Building</h2>

<p>So, yesterday&rsquo;s challenges were : Build apps. In the morning, we had to finish the Craigslist one that we started the day before, and in the afternoon, we had to make a non-authenticated blog.</p>

<p>The teachers have to change a lot from last phase 2 program. We are different, and our phase 1 was so different than previous cohorts&#8217; than in the end, we don&rsquo;t code like our big brothers and sisters at all. While some of the previous cohorts (Thanks to their program/material ) tended to focus a lot on speed, and quantity, we tend to spend a ton of time on specific challenges, to master them to the end. While some would probably go for the &ldquo;Quantity of knowledge&rdquo;, we are going for &ldquo;Mastery&rdquo;. So in the end, while previous cohorts finished 10 challenges by the end of day 3, we finished only 4 but we did learn just as much and mastered a lot of things that previous people did not know about. An example would be Rspec testing. We literally spent all of yesterday testing&hellip;</p>

<p>Anyway, at the end we finished one app, with Johnny : <a href="http://quentin-johnny-anon-blog.herokuapp.com/">Anonymous Blog</a>. It is not beautiful, not responsive, nothing like that, but the idea was not to make beautiful things, but to make a functional blog system that allows you to have posts that can have tags, and tags that can have many posts, with the corresponding pages.</p>

<p>We are about to finish Craigslist so I&rsquo;ll show you that right after.</p>

<h2>Testing</h2>

<p>We tested! For 2 days!</p>

<p>In the beginning, we just started to assert that things we wanted were equal. If we call &ldquo;5 + 5&rdquo;, we ask for it to be equal. That was phase 1.</p>

<p>Then we started playing with some more tests, witnessing teachers/talking about re making Rspec (The testing suite for testing in ruby. Think about it as a toolbox with a LOT of tools).</p>

<p>Now in Phase 2, we have Rspec, we have other tools, and we need that. The syntax is easy, very close to english. For example :</p>

<pre><code class="ruby">expect(5+5).to be 10</code></pre>


<p>And so the hardest part was : figuring out how ENGLISH it was. Is it &ldquo;.to&rdquo;? Is it &ldquo; to&rdquo;? Do I want to test if &ldquo;5+5 =10&rdquo; is true? or if &ldquo;5+5&rdquo; is 10?</p>

<p>That, guys, is what we spent two days working on. We figured out a lot (and for future reference for students : <a href="http://myronmars.to/n/dev-blog/2012/06/rspecs-new-expectation-syntax">You should not use should! but expect is cool</a> and <a href="http://rubydoc.info/github/thoughtbot/shoulda-matchers/master/frames">Shoulda is your best friend if you&rsquo;re testing Sinatra or Rails&hellip; Anything with ActiveRecord, even if it needs should and not expect</a>), but it did take a lot of time.</p>

<p>Now, I feel like I know much more about things like one a quote from one of my favorite books : “You don&rsquo;t have to test everything to destruction just to see if you made it right.”, Neil Gaiman, <a href="http://www.amazon.com/Good-Omens-Accurate-Prophecies-Nutter/dp/0060853980/ref=sr_1_1?ie=UTF8&amp;qid=1392918350&amp;sr=8-1&amp;keywords=good+omens">Good Omens</a>. Testing is good, but can be time devouring if not done right.</p>

<p>But anyway, let&rsquo;s not talk about that more, there is always much to write and read about that, but there are places and times to do so!</p>

<h2>Deception</h2>

<p>Yesterday I was disappointed by <a href="http://www.interflora.fr/">Interflora</a>. If you don&rsquo;t know that brand, it&rsquo;s a flower selling service that is offered in France. It is a chain, you hear a lot about it, and so I thought I would use it when I needed that kind of service.</p>

<p>Yesterday was my fiancee and I&rsquo;s <strong>6th anniversary</strong>. I can&rsquo;t be with her (Obviously&hellip;), so instead, I planned on making the biggest bouquet I could find delivered at her house when she would be coming home on this day. That was a long time plan, I kept the exact money I needed on my french bank account, I did some research to find how to get flowers delivered, and talked to a lot of people about that to never ever forget.</p>

<p>Then, a few days ago when I got the confirmation that I had the money I needed to do so (last week), I took the biggest chain I could find, for safety, I took the biggest bouquet I could find, and make it delivered at 4PM at her house, right after she comes back home from work.</p>

<p>Yesterday, when she woke up, I did not even send her a text. She was, of course, disappointed, but I was planning on that (and am very bad with time differences sometimes)! She thought I had forgotten that fateful day! But then she would be so happy when she would get back home from a long and hard day and find these flowers!</p>

<p>But then&hellip; No flower was delivered. None. I checked the time, checked in with her to see if she had them, check the site to be sure they were delivered, and the site even told me &ldquo;The flower delivery guy has the order&rdquo;, which eventually turned to &ldquo;Your flowers have been delivered&rdquo;&hellip; But none got to her house. So I had to explain everything, my plan fell apart, and today she called them to check about the order and&hellip; Guess what? &hellip; Apparently the girl on the phone told her the delivery guy never got the order.</p>

<p>So in short : I planned, I payed, went for safety over better shops, and in the end I feel just like an ass that did not do anything for our 6th anniversary, but just a couple of texts saying that I love and miss her.</p>

<p>I am so sorry, Thuy, I am very unhappy about that, and I will never stress that enough: <strong>I WILL NEVER USE INTERFLORA AGAIN IN MY LIFE</strong></p>

<p>Time to go back to coding now, see you tomorrow ;)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Week 4 - Day 2 - Testing, Helping, and buying]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/02/19/week-4-day-2-testing/"/>
    <updated>2014-02-19T09:32:14-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/02/19/week-4-day-2-testing</id>
    <content type="html"><![CDATA[<h2>Testing</h2>

<p>Yesterday, we paired with Elliot, a new Banana Slug who is re doing Phase 2. We had 4 challenges&hellip; and ended up not really finishing one. We had a great dynamic, we both learned tons and spent most of the day working on testing with <a href="https://relishapp.com/rspec">Rspec</a> on Sinatra, the tool we&rsquo;re working with at the moment.</p>

<p>The challenge we worked on was making a simplified version of <a href="http://sfbay.craigslist.org/">CraigsList</a>.<br/>
So to do that you need to meet these requirements :</p>

<ul>
<li>The front page creates a list of categories</li>
<li>Each category has many posts</li>
<li>A user can create a post in a category, and/or create a category</li>
<li>A user that created a post gets a key/url that allows him and only him to edit or delete that post</li>
</ul>


<p>For that, we created tests, a lot of them. But then we forgot one of the basic principle : When you finish writing your test, you need to make it pass before working on the next one.</p>

<p>Just for that, we worked and learned a lot but being at the end and having to work on all that from scratch was a mess and we ended up working on other things.</p>

<h2>Helping</h2>

<p>So, I was told I am a patient person. Hell, I was even talk this very morning that I was a Cool person! Also, I already said that I have a bit of experience with the stuff we work with.</p>

<p>From that, I can tell you that I like helping, and spend a lot of my days doing so.</p>

<p>Yesterday, we worked with Elliot, and I actually spent a lot of time trying to solve a lot of problems and explaining what we did to the people who were stuck. People came, people go, came again, and we spent like half of the day working on solving people&rsquo;s bugs. I have no problem with that, and I like to think that I learn much more by doing that than by just coding by myself, but then I also feel bad for Elliot who basically spent half of his day not &hellip; working on solving our problem.</p>

<p>When we thought about stopping with that craigslist challenge, I went around and tried to help the people that I had not seen before. I ended up working on stuff with Golden Bears, and that was fun too (And took less of Elliot&rsquo;s time, so I&rsquo;m even happier about that haha)</p>

<p>In the end, that was a fun day anyway.</p>

<h2>Buying</h2>

<p>I started buying a couple of things. First thing is that I bought socks and underwear. I ended up in Uniqlo this weekend, a brand I really like, and they had sales&hellip; That coupled with the fact that I did not bring enough socks to have at least a 7 days period before I need any laundry made me buy a lot of socks&hellip; and then other stuff on sales haha. Don&rsquo;t worry though, I took advantage of the Dollar being lower than the Euro, and the conversion being a 1 to 1 in everyday&rsquo;s prices.</p>

<p>Another thing I had to buy was a beard trimmer. I was thinking about going to the barbershop (because the US HAS barbershops), but I ended up not having the time, the opportunity, or even the reason since I feel like spending valuable time there would be a waste if I just wanted to trim a bit.<br/>
So instead of that I bought a beard trimmer, and played with it. I spent a lot of time playing with it yesterday. I spent a lot of time playing with it today, and now I love my beard even more.</p>

<p>Now, I also bought other stuff, but then some are surprises so&hellip; brace yourself, news are coming tomorrow too ;)</p>

<p>PS : Today is my fiance and I&rsquo;s 6th anniversary&hellip; I love you Thuy, you make me happy and I will do my best to make that happen for you to&hellip; Everyday of the rest of my life.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Week 4 - Day 1 - New people, New challenges, Personal Projects]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/02/18/week-4-day-1-new-people/"/>
    <updated>2014-02-18T08:50:01-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/02/18/week-4-day-1-new-people</id>
    <content type="html"><![CDATA[<h2>New People</h2>

<p>Welcome to the Golden Bears!<br/>
Yesterday was our Phase 2 first day, but also Phase 1&rsquo;s first day. A load of new people arrived in that small place that is DBC&rsquo;s current office, and so, we had to welcome them!</p>

<p>The idea is that we got to get here at 8-8.30AM. Then, we shouted, gave advices, talked, ate,&hellip; All in all, a very good day!<br/>
The new guys look cool, and it was really nice to see them approach the problems we had a different way. People ended up, from what I saw, working a lot on challenges where we did not really work much, and not care much about the ones we spent a lot of time on. That was refreshing, and fun to discover new bugs, new problems. Different approaches, different paths, I can&rsquo;t wait &lsquo;til they get on harder problems and blow my mind with problems I can&rsquo;t solve&hellip; again!</p>

<p>And among the new people, they have another french dude! Plus, they also have a Korean girl who lived in France&hellip; New people to bother with conversations in random languages!</p>

<h2>New Challenges</h2>

<p>We started phase 2. Phase 2 is more about web development. We play with <a href="http://www.sinatrarb.com">Sinatra</a>, and are starting to make stuff that is actually stuff we can share with people who are not developers and they can use it and even get impressed with that with some luck.</p>

<p>On these first challenges we paired with Jose. We had a great dynamic, no complex, and ended up helping each other into not getting stuck much, and completing the challenges. I feel like I learned a lot, and I really enjoyed that day. Even when I would think I was spending too much time on something, I checked around and found out that we were actually going quite fast. That problem was taking a bit more time than the rest of it, but then we went a bit fast on the other things and so in the end, what was confusing was our own change of pace more than the real speed at which we were going at that moment.</p>

<p>Anyway, at the end of the day I learned, I worked, finished what I wanted, and if I had to sum it up&hellip; it was a great day.</p>

<h2>Personal Projects</h2>

<p>Now we can work on stuff that we can show to &ldquo;normal&rdquo; people. But then we&rsquo;re also using some stuff that I already know. I am not nearly good enough at all of these, but I do have some experience on some of these topics, and could just use that and be fine with that. But then I am not here to take the easy path. I am here because I want to learn.</p>

<p>To do so, I figured (= People told me I should&hellip; ) I&#8217;ld start working on some personal projects. I have ideas, things to do, and so why not learn by pushing even further and work on that, independently of the things we work on.</p>

<p>I&rsquo;ll try to work on blog articles to explain what I do, and share as much as I can. First day&rsquo;s work was quite long so I ended up not being able to do much, but expect more once I have more time!</p>

<p>Also, phase 2 is full of &ldquo;Portfolio Projects&rdquo;. We&rsquo;ll have a lot of them, to be delivered on sundays. I&rsquo;ll share every one of them, and try to explain the thought process every time I work on one, so that&rsquo;ll be another thing to look for!</p>

<p>Anyway, time to get back to coding, see you guys tomorrow!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Week 3 - Day 5 - Party~]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/02/16/week-3-day-5-party/"/>
    <updated>2014-02-16T14:37:26-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/02/16/week-3-day-5-party</id>
    <content type="html"><![CDATA[<p>&lsquo;twas the day before the end of the phase. People were happy, exhausted, and alcohol and songs mixed up to help the moods enlighten.<br/>
Week 3 Day 5, everybody has had his assignment. The outcome of these assignments is just an advice, then people had time to make their choices. Some of our cohort (2 I think, but we&rsquo;ll get the confirmation on monday) chose to go back to work on the same phase again, not feeling ready for the next one yet yet. Most chose to go on to the next level of difficulty. And That applies for phase 1 as for phase 2.</p>

<p>One thing to know is that there are 2 differences between a phase and the next one.<br/>
The first difference is : The next one is always more difficult that the current one. It starts higher, has a higher rhythm, everything will be harder.<br/>
The second one is : The next phase will get harder much faster that the current. You start higher, and you&rsquo;ll have more work, to do in less time. More projects, and you&rsquo;ll have to learn things faster, and better.<br/>
Behold, fellow students, winter is not coming, Mayhem is.</p>

<p>Now, on the last friday of each phase, everybody knows where they&rsquo;re going, phase 1, phase 2, phase 3. Everybody finished their projects, presented what they wanted, and now they just have to &ldquo;wait&rdquo; for monday. So on this friday, we get beer, pizzas, mics, music on the big screen, and we partayyyyy~</p>

<p>Wait is a big word though, everybody who was in this program will tell you that. New material, new studies and all that are on the next monday so on this weekend, people are stressed out and tend to study as much as they can about the new stuff we&rsquo;ll have to deal with on the next monday.</p>

<p>For me, I spent one day discovering stuff. I went to Target, Whole Foods. I went to the Chinese New year&rsquo;s parade in San Francisco. And now, I am studying a bit about Sinatra and stuff. Things are going well, but I prefer resting before the mayhem. It&rsquo;ll get crazy whatever I do, so I might as well just rest before that ;)</p>

<p>Anyway, see you on tuesday for news about monday&hellip; And the new cohort! And Welcome to the Golden Bears!</p>

<p>(PS : Marching bands are AWESOME! :
<img src="http://i.imgur.com/2Tl0g0Ll.jpg" alt="A nice picture of me in there!" />
)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Making a new faker gem]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/02/14/making-a-new-faker/"/>
    <updated>2014-02-14T20:36:16-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/02/14/making-a-new-faker</id>
    <content type="html"><![CDATA[<p>Let&rsquo;s me sum some stuff up first before I start :</p>

<ul>
<li>Gem : A Gem is a &ldquo;library&rdquo;, a pack of code, in the programmatic language we call Ruby, that enables us to use functions not built in the languages without having to rewrite the code. When one feels he has enough code to share, he can wrap it up in a &ldquo;Gem&rdquo; that will be easily installable and usable by the other Ruby programmers.</li>
<li>Faker : Faker is a gem that basically gives you random data. Let&rsquo;s say you want to make a huge database and want to test the load for when you have more than 1000 users. Instead of writing either 1000 times the same name or use 1000 names you write one by one, Faker will generate a random one for each of these entries. Pretty useful.</li>
</ul>


<p>But then, Faker generates what it has been built for. Generating team names, or even slogans, are not what it has been made for. So as a 2 days project with my fellow boots of Phase 1 DevBootcamp we created one that made the things we want. You can check the code here : <a href="https://github.com/Qt-dev/cool-faker">Github</a>, and more info on how to download the gem on : <a href="https://rubygems.org/gems/cool_faker">Rubygem</a>.</p>

<p>Basically, we used <a href="http://bundler.io/v1.5/rubygems.html">bundle</a> to make the gem architecture, the files we needed. Then, we took a look at how Faker was built and decided to go around that same way, with our data stocked in a yaml file, and using the <a href="http://ruby-doc.org/stdlib-2.1.0/libdoc/yaml/rdoc/YAML.html">yaml</a> module to load it and get the data we wanted in ruby.</p>

<p>And we end up with a gem that has 4 different functions :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">CoolFaker</span><span class="p">:</span><span class="ss">:Character</span><span class="o">.</span><span class="n">name</span>
</span></code></pre></td></tr></table></div></figure>


<p>generates a random Character name from a famous movie, or tv show. The titles include The Lord of the Ring, Superman, Starwars, friends, or futurama.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">CoolFaker</span><span class="p">:</span><span class="ss">:Character</span><span class="o">.</span><span class="n">name_from</span><span class="p">(</span><span class="n">movie_or_tv_show</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>generates a random name from the movie or tv show that you called.
Your options are :</p>

<ul>
<li>friends</li>
<li>entourage</li>
<li>sex_and_the_city</li>
<li>batman</li>
<li>startrek</li>
<li>superman</li>
<li>star_wars</li>
<li>the_lord_of_the_rings</li>
<li>napolean_dynamite</li>
<li>snow_white</li>
<li>back_to_the_future</li>
<li>the_wizard_of_oz</li>
<li>toy_story</li>
<li>the_simpsons</li>
<li>futurama</li>
<li>monty_python</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">CoolFaker</span><span class="p">:</span><span class="ss">:Team</span><span class="o">.</span><span class="n">slogan</span>
</span></code></pre></td></tr></table></div></figure>


<p>generates a random slogan from a 587 quotes database</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">CoolFaker</span><span class="p">:</span><span class="ss">:Team</span><span class="o">.</span><span class="n">name</span>
</span></code></pre></td></tr></table></div></figure>


<p>generates a team name from a list of adjectives and a list of animal names. Expect some funny names, gender-confused pandas is a good one ;)</p>

<p>With all that, we ended up making the gem with a simple</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="n">build</span> <span class="n">cool_faker</span><span class="o">.</span><span class="n">gemspec</span>
</span></code></pre></td></tr></table></div></figure>


<p>And then send it to rubygems.org, and here we go.</p>

<p>All in all, we ended up shipping a gem without knowing about gem building/shipping, building dozens of tests without knowing about rspec&hellip; a good 2 days of intense learning, a lot of fun, and we end up with an usable tool. I&rsquo;m pretty happy about it!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Week 3 - Day 4 - Group project and good news]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/02/14/week-3-day-4-group-projects/"/>
    <updated>2014-02-14T09:41:20-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/02/14/week-3-day-4-group-projects</id>
    <content type="html"><![CDATA[<h2>Group Project</h2>

<p>Yesterday we started a new group project. This time, it&rsquo;s a 2 days stretch. You can follow how it&rsquo;s going on <a href="https://github.com/Qt-dev/cool-faker">Github</a>.</p>

<p>The idea is that we are building an open-source project. More specifically, we are building a Ruby Gem (A code library, a set of tools for people who use ruby) that will generate random people names, team names, and useful info like that from a database of funny and famous words/names/quotes. The idea is that there is a gem called &ldquo;Faker&rdquo;, and we are building the cool version of this one, with Armando, Jamie, and Nicholas.</p>

<p>So far, it&rsquo;s doing good! I got my voice back so I can participate much more in whiteboarding and all that, we planned everything decently and managed to get an MVP (Minimum Viable Product, the smallest thing you could build on your idea) in half the time. We&rsquo;re pushing for more options and some kind of implementation to show nice usage of that gem.</p>

<p>It&rsquo;s exciting to be working on some tool that may very well be used by others all around the world. Plus, learning how to make gems is a very interesting thing. I think that when I have time later, I&rsquo;ll try to make some gems just for the sake of helping around. Open-source is awesome!</p>

<h2>Good news</h2>

<p>Among the good news :</p>

<ul>
<li><p>I may see my fiancee before I come back. This is by far the best news I could ever had heard. I miss her, and knowing that I may see her sooner than I expected is just the best thing that could have happened.</p></li>
<li><p>I had a beer with Jonathan and got more info about after Dev Bootcamp. That was such a relief. Coming here as a frenchman, I just had no idea how the job market was, and how things were supposed to happen after that. I kinda get ideas from here and there, but finally being able to have some feedback from a guy who has the same experience, and comes from the same place, is really a relief. Now I just have to continue giving my best &lsquo;til the end of these 9 weeks.</p></li>
<li><p>I&rsquo;m going to Phase 2! I got my assessment and it went ok. I overthought part of it so I wouldn&rsquo;t say I did perfectly, but with the goal being : Assess whether I know Phase 1 material or not, I did ok for that. That is perfect! So now it&rsquo;s time to learn even more!</p></li>
</ul>


<p>Anyway, going back to the project&hellip; See you tomorrow!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Week 3 - Day 3 - EE Cooldown, ActiveRecord and My first solo day]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/02/13/week-3-day-3-ee-cooldown/"/>
    <updated>2014-02-13T08:41:13-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/02/13/week-3-day-3-ee-cooldown</id>
    <content type="html"><![CDATA[<h2>Engineering Empathy Cooldown</h2>

<p>Two days ago was our last Engineering Empathy session of Phase 1. Like the other cohort told us : &ldquo;You thought the first session was heavy? Wait &lsquo;til you see session 3&rdquo;.</p>

<p>First week was &ldquo;The superego&rdquo;, and the exercise that we got was &ldquo;Share what your inner voice tells you&rdquo;. This week was &ldquo;Dive deeper in what you let people know about you&rdquo;&hellip; And so we sat in circle to tell people stuff, while starting every sentence with &ldquo;If you really knew me&rdquo;. Now let me tell you guys&hellip; There were tears, hugs, revelations, but no shocked reaction, no judgement, nothing like that. And everything told in this room stays in this room.</p>

<p>Diving deeper than the usual in what you tell people is an exercise that does make us grow, but that also hits you hard at the moment you do it. And listening to all of the others&#8217; is not even easier. I think I can safely say that I will keep that day in my mind for a very very long time.</p>

<h2>ActiveRecord</h2>

<p>ActiveRecord is the design pattern I told you about yesterday. In Rails, the most well known web framework for Ruby, this design pattern is implemented in its own. What it does, in short, is mapping a database with an object. Columns of the database become attributes of the objects, you can create objects and save them to the db, or get objects from an entry in the db. Quite easy and practical!</p>

<p>Yesterday, we worked on that for the whole day. The morning was the introduction, and the afternoon the application. I&rsquo;ll say that it was a pretty good day, I learned a lot, and ActiveRecord is cool&hellip; Wait&hellip; Better than that : ActiveRecord is coolER than SQL!</p>

<h2>My first solo day</h2>

<p>Wednesdays are optional solo days. That means that every other day, we have to pair or group with more people, but on wednesdays, we choose our pairs/groups. I did not solo until then, but I thought that to save my voice I&#8217;ld try and do so yesterday.</p>

<p>In the end, I did finish the exercises, which was my goal. I had to go to other people soloing a couple of times, to get my mind off of the problems that were blocking me, and to help me figure out solutions sometimes, but I did it and I am pretty happy about it.</p>

<p>The beginning was hard and I just &hellip; felt like I did not know where I was going. But I got on it after I expressed my incomprehension a first time, and then I just worked, with a decent speed.</p>

<p>I don&rsquo;t know if I&rsquo;ll do that again, probably not next week, but probably another time. It was a good day but I prefer picking my pairs in the people I do well with (Looking at you Irene!).</p>

<p>Anyway, today is assessment and group project&hellip; time to have fun !</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Week 3 - Day 2 - More SQL, Testing, Cookies and Syrup]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/02/12/week-3-day-2-more-sql/"/>
    <updated>2014-02-12T08:39:34-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/02/12/week-3-day-2-more-sql</id>
    <content type="html"><![CDATA[<h2>More SQL</h2>

<p>Yesterday was another day when we used SQL, apparently the last (Yay!). We implemented our own version of <a href="http://en.wikipedia.org/wiki/Active_record_pattern">ActiveRecord</a>, a tool used in Rails that we will, apparently, use all the time and that will be the one talking with the base. But to use your tools correctly you first have to learn how they were built&hellip; And so that is what we did.</p>

<p>I paired with Erin for this day and it was really great. We had a good dynamic and we ended up finishing everything without any real problem going on. All in all, it was a great day for Quentin in DBC!</p>

<h2>Testing</h2>

<p>Shadi is back! So testing is back too ;)<br/>
He explained how to make our own version of Rspec, the testing suite for Ruby, and then handed us a series of tests for the exercises we had for the day. Things are getting complicated pretty fast, but I love it !</p>

<p>Testing is getting trickier but soon enough we&rsquo;ll get into some deep Rspec testing and for the newcomers : TESTING IS IMPORTANT! TEST ALL THE TIME!</p>

<h2>Cookies and Syrup</h2>

<p>So, I came here thinking americans ate junk food and only junk food. Such a disappointment to be in a house, in a program, and in a city where it is absolutely not the case!<br/>
I ended up being on some kind of sugar withdrawal in a few days, that is absolutely not the thing I would have suspected.</p>

<p>So, to compensate that, I buy cookies! And then, once or twice a day, take my usual bite. But then, I am now seen as some sort of cookie monster for eating a lot more than any other around&hellip; So strange.</p>

<p>As for the syrup, small but funny story : Ivan bought syrup, I took some (The throat is not 100% ok yet), then I got incredibly sleepy, and slept. The bad part is that it was 9AM and I was fighting sleep in the middle of a very interesting lecture on Testing.<br/>
The conclusion I got from that is : Read the fucking manual. Don&rsquo;t take syrup without reading all about it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Week 3 - Day 1 - SQL, Games, and Assessments]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/02/11/week-3-day-1-sql/"/>
    <updated>2014-02-11T08:49:38-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/02/11/week-3-day-1-sql</id>
    <content type="html"><![CDATA[<h2>SQL</h2>

<p>In the world of development, we could say that you have plenty of choices when picking your tools. Among these tools are hundreds, if not thousands, of languages. Some are pretty specifically used, even though they may not have been made for, some are pretty &ldquo;fast&rdquo; while others are &ldquo;not&rdquo;&hellip; But all in all, we can say that a hammer is a hammer. No matter the brand or the specs, the hammer will fulfill his role and that&rsquo;s it.</p>

<p>Anyway, yesterday we used SQL for the second time in phase 1. It is a language used to talk to a specific type of database (Any derivation of SQL), which may very well be one of the most common database type in the world, and that has been the case for more than 20 years. The language used to do so has been around for almost the same time too&hellip;<br/>
I paired with Tim, a very nice and tall guy, and we ended up doing as much as we could for the day. We learned tons, we played a bit, and it was fun. All in all, a good day, even if we spent the day on SQL&hellip;</p>

<h2>Games</h2>

<p>So, Web Development, and maybe even particularly in Dev Bootcamp, is a world of hard work combined with games. My opinion is that we party, we play, we develop games even, to cope with the rest of the hard day. A lot of brain-twisting challenges and very not fulfilling days spent on solving that bugs that would have taken 2 minutes to solve if you had seen that semi-colon earlier will do that to you and may ask for harder entertainment.</p>

<p>In DBC, we play. There are games all around, the Giant Djenga falls a couple of times a day, we did a Hack-a-thon this weekend (A coding contest where teams build stuff and compare at the end of the day. All with beer, pizzas, and a lot of laughter), and all in all, people are playful.</p>

<p>Yesterday we played Magic The Gathering with a couple of boots. I did not win but I loved the game. A long game, hard, where you have to think before you do stuff. It had been a long time and now I just regret I did not bring my cards myself ;)</p>

<h2>Assessments</h2>

<p>DBC is not about grading students. It is not the style of the house. But they do have to test us to make sure we can understand the next phase. So, to do that they assess us at the end of every phase.</p>

<p>This week is the end of the first Phase. Teachers will get with us for a short amount of time on Thursday and will review some of our code at this point. At this moment, no more help, just some control of your knowledge. At the end of that, we can be given one of 3 different options :</p>

<ul>
<li>Your level is high enough, welcome to Phase 2</li>
<li>You may want to spend 3 more weeks on Phase 1, just to make sure you get it all</li>
<li>Are you really sure you are learning anything? If not, DBC may not be the best thing for you&hellip;</li>
</ul>


<p>Now, let&rsquo;s hope for mine being the first one! I&rsquo;ll do my best anyway.<br/>
Small info for the people in the next cohorts : We chose our assessments. The output may be the same but you may not get the same.</p>

<p>Anyway, lecture is about to start again, let&rsquo;s go. Thank you for reading and see you tomorrow!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Week 2 I Am Still Alive]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/02/09/week-2-i-am-still-alive/"/>
    <updated>2014-02-09T00:00:00-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/02/09/week-2-i-am-still-alive</id>
    <content type="html"><![CDATA[<p>Apparently, getting sick is a trend among DBC cohorts. When you get here, expect to get sick. Bad weather this week, and me being very stupid with the weak points I know I have just made me get sicker than I do usually.<br/>
So, I ended up feverish, sleeping more or less the whole day&hellip; for 2 days, in DBC, waking up 5 minutes at a time, just enough to get some work done so that I don&rsquo;t feel too far behind, and then go back to sleep. Then I woke up on friday but had no more voice&hellip;<br/>
All in all, a good week of fun times.</p>

<p>In other news, we went through some SQL introduction. We will be using Postgres mostly. Now I just have to figure out if my experience with MySQL will be a good or a bad thing.
Different implementations of SQL can save you some time to get into the syntax, but then the small differences are what can just be the tricky things that make you get in so many bugs. Only time will tell.</p>

<p>Friday was the first group project, and we did a Tournament Manager. Again, I couldn&rsquo;t speak and was a bit dizzy so I ended up not being able to give my 100% and I hate that&hellip; Yesterday was the first DBC-Alumni hackathon and I was still not close enough to awake-ish to be able to participate. Damn throat&hellip;</p>

<p>Anyway, sorry to my pairs this week for having my mind pretty far off the planet, sorry to my friends who I may make sick, to those who took time to help me get better when they clearly had better things to do, and to the people who may be reading this blog and had no food for thoughts for 4 days.</p>

<p>But don&rsquo;t worry, I&rsquo;m back, I&rsquo;m good now, and hungry for knowledge, experience, and opportunities to show the world what I&rsquo;m made of!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Week 2 - Day 2 - Oop, Friends & Brothers, Battleship & Sudoku]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/02/05/week-2---day-2---oop-friends-brothers-battleship-sudoku/"/>
    <updated>2014-02-05T08:51:00-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/02/05/week-2&#8212;day-2&#8212;oop-friends-brothers-battleship-sudoku</id>
    <content type="html"><![CDATA[<h2>OOP</h2>

<p>Development is a wide topic to learn. New ways to do everything a developer need to do appear everyday. But then, the practices, the basis behind all of these new tools is slow and moves at a steady pace.<br/>
You can take it as :<br/>
&ndash; The tools are waves.<br/>
Thousands land on your shores everyday. None is exactly the same as another, every one of them is different, and to a surfer, a fisherman, or anybody who could make us of them, every one of them could be a treasure or a pain.<br/>
&ndash; The practices are ties.<br/>
They also come, but at a very slow pace. They too are very different, and affect anybody much more than waves, but because of that slow pace, we tend to focus less on that.</p>

<p>Well, today was the second day of introduction to Object Oriented Programming. One could probably spend hours writing about such a notion, but I will stick to a one sentence explanation.</p>

<p><a href="http://en.wikipedia.org/wiki/Object-oriented_programming">Object Oriented Programming</a> is a way to work in development by modeling blocks of code in what people call an &ldquo;Object&rdquo;. Wikipedia, among others, explains that much more easily than I do, I encourage you to get there to check what it is about. ;)<br/>
Plus, I don&rsquo;t have much interesting things to say about it so&hellip; I won&rsquo;t say much!</p>

<h2>Friends &amp; Brothers</h2>

<p>Yesterday, I paired with Jamie, a nice american-name, american-accent girl who does not look like her profile picture and who does NOT like country music (Hehe&hellip; Sorry for the private joke). In all honesty, it went well, and if it had been another person, I may have spent a bad time. The challenges were about things that I could not say I master, but an introduction is an introduction. We talked a lot, learned to know each other.<br/>
I find that extremely important when you spend most of the time with some people and you have to challenge, and spend most of your time in total freakout mode.</p>

<p>That being said, another part of the day was a bit harder. Dev Bootcamp makes you meet people that have been selected after a particular selection. Only 10% of the people make it apparently. Of course, we are selected because we have a specific set of skills, a particular mindset, and Karim and all the others in charge of admission see things in us that make them think we can make it.</p>

<p>Then, we get grouped with others with the same characteristics, and for 9 weeks, you work with them, play with them, more or less live with them, 100% of the time. During these 9 weeks, you are challenged everyday, stressed out to a point where most would break, and most DO break. Your challenge, just like the others, is to learn what took years or even decade to master to many. As <a href="https://github.com/amgando">Sherif</a> said, that is insane. We are insane for trying that, but then we have been selected because we are, and only that combined insanity of so many people can help us make it at the end.</p>

<p>In our cohort, we even took it so far as to get a house for 9 of us. If spending most of our times of struggle was not enough, we now spend 100% of our time together.</p>

<p>I may sound overdramatic with that explanation, but my point is that your only way to win at this is brotherhood( + sisterhood, however you say that). We are one, and must stay one. All of us must succeed at the end, and if one of us breaks, we all need to do our best to &ldquo;repair&rdquo; him asap to get on the next step.</p>

<p>Yesterday, Stephen had a bad time. Pressure got the best of him for a part of the afternoon. It was not the challenges, not something that happened yesterday, but something that grew in his head that ended up getting to him.<br/>
But what happened after that is the illustration of that idea that I am trying to give you : We gathered, and make it so that it never happens again. Stephen is part of us, the entity that we have become. We can&rsquo;t succeed without him, and will not let him behind. In the end most of us went to sleep at 12AM, after long talks, hugs, and mental-screwdriving.</p>

<p>To whoever want to join the bootcamp with any other idea that the one I am describing in here : You shall not pass. This is teamwork, and without that, none of you will pass. That is a fact, well known by those who succeeded as well as those who did not.<br/>
You will NEED brothers and sisters.</p>

<h2>Battleship &amp; Sudoku</h2>

<p>I already took too much of your time so I will try and be fast on this one but : Yesterday somebody pointed me in a new direction for sudoku solving. It is called <a href="http://en.wikipedia.org/wiki/Dancing_Links">Dancing Links</a>. I won&rsquo;t explain in details, especially since I don&rsquo;t think I have a good enough grasp on this, but my goal here is to try and solve the 170 puzzles I solved in 8.5 seconds, but in less than a second this time. I&rsquo;ll tell you more when I can.</p>

<p>And about Battleship : A few of us finished the challenge that said we had to make a battleship game in Ruby. We thought we could share that knowledge, so we got an idea and we are organizing a Battleship contest. We will build a core game, and a way for people to develop their players behaviors. We will be around the whole way and help those who could not finish it at first. Then after that we will just compete&hellip; But then again, we don&rsquo;t have the rules yet so&hellip; See you tomorrow!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Week 2 - Day 1 - A new partner, Experience vs Mastery, Sudoku solving]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/02/04/day-6---an-new-partner-experience-vs-mastery-sudoku-solving/"/>
    <updated>2014-02-04T08:59:00-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/02/04/day-6&#8212;an-new-partner-experience-vs-mastery-sudoku-solving</id>
    <content type="html"><![CDATA[<h2>A new partner</h2>

<p>Sometimes, you meet people and you feel that it is just right. Yesterday I was to pair with Irene. There are not a lot of people I did not work with, but Irene was one of them. I was looking forward to pair with her, her experience with web dev, and the examples of work she had accomplished  is just impressing to me (Like this for instance : <a href="http://www.ireneyiu.com">Iren
So, we paired and it was a very fulfilling pairing session, in terms of partnership mainly. e&rsquo;s Site</a>)). Plus, so far I only heard nice things about her! In the end, I just loved my day, but you&rsquo;ll see more about that in the next paragraphs. Plus, she knows a bit of french (Every time she tries some french words I realize she knows even more than I thought, very impressive).  Some would say that I should not have been intimated, or even go as far as saying things about great minds thinking alike&hellip; But I don&rsquo;t think so.</p>

<h2>Experience vs Mastery</h2>

<p>For me, people make experience when working the right way, learning, experimenting, on one particular topic. There is no limit to how far you could go in such a topic, and broadening your learning will always take you to strange places, more skills, more experience, and for me, more fun!</p>

<p>Now, I do have some skills. I won&rsquo;t brag about it, but I don&rsquo;t see any reason to have some false modesty. I have, indeed, been playing with computers for 27 good years so far. I have been developing, at a slow pace for 2 years now. My job has also been to spot and maybe fix bugs in the program my company was making for the lat 2 years.<br/>
But all that does not make me a genius. The only thing it gets me is experience. No mastery, no great mind, nothing like that.<br/>
Irene has been doing some web development for a while, and that also does not make her a genius. She is, however, much more experienced than I am in web development, and web design. If you take Stephen, he is much more experienced in video games, and Armando in asian cuisine!<br/>
In the end, people have experience, and every experience is different. There is no shame in having none in one topic, and lack of experience should just push you to want to learn more.</p>

<p>In the end, I was too impressed by Irene, and I should not have, but we also both had that feeling that people tend to put us on pedestals because of some of our experience, sometimes. She was apparently just as intimidated, and in a way I think that helped us connect much more easily. All in all&hellip; Good times and a awesome pairing session, Sacrebleu!</p>

<h2>Sudoku!</h2>

<p>So, I made code that solves sudokus. Hunter had been working on an algorithm thought by <a href="http://en.wikipedia.org/wiki/Peter_Norvig">Peter Norvig</a>, former director of search quality at Google. As with the experience I was talking about in the 2nd paragraph, Hunter has much more than me in math and algorithm thinking and design.</p>

<p>The idea is that :<br/>
&ndash; You first fill in every cell that has only one possible value.<br/>
&ndash; You then take all the boxes, rows, and columns, and try to find if any possible values can take only one location in one of these groups, and then set it to this cell.<br/>
&ndash; If you did not find anything, just guess one number, taking all the cells with the smallest number of possible values, and fix them one by one, before calling the first step again. If it did not work, you get back on this part, restore the board, and fix the next one.</p>

<p>I could spend hours talking about that, but in the end&hellip; I solve 170 puzzles, among which 95 &ldquo;hards&rdquo;, and the 11 harvests, all that in 8.5 seconds.</p>

<p>If you want any more info, don&rsquo;t hesitate to ask. I think I&rsquo;ll be showing how I did to my cohort very soon anyway.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Day 5 - Week review, Sudoku day!]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/02/01/day-5---week-review-sudoku-day/"/>
    <updated>2014-02-01T12:18:00-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/02/01/day-5&#8212;week-review-sudoku-day</id>
    <content type="html"><![CDATA[<h2>Week review</h2>

<p>Ok so, it was the last day of the week, everybody is pretty messed up thanks to the huge amount of content, to the Engineer Empathy, etc&hellip;</p>

<p>Yesterday, we started with a review session with Sea Lions, the cohort prior to us who&rsquo;s on the bootcamp with us. During that session, what came out was :</p>

<ul>
<li>Sea lions are happy to be around us</li>
<li>Week 1 of Phase 2 was awesome</li>
<li>Week 1 of Phase 1 was awesome, even though it was a bit overwhelming</li>
<li>Engineer Empathy affected every one of us, big time</li>
</ul>


<p>I could explain more right now but I think I&rsquo;ll just do a quick recap during the weekend if I can.</p>

<h2>Sudoku day!</h2>

<p>So, today was the last day of this first week of DBC. One of the &ldquo;initiation rituals&rdquo; of that first week seems to be that first friday theme : Sudoku. The idea is that we worked hard all week on challenges here and there, and on this friday they gave us the &ldquo;Ultimate challenge of the week&rdquo;. For this challenge, you have 2 assignments :</p>

<ul>
<li>In the morning, you have to write code that reads a sudoku data line, then builds a grid and solves it without guessing.</li>
<li>For the rest of the day&hellip; Implement guessing!</li>
</ul>


<p>I was to pair with Nic, a guy who chose to redo phase 0 to make sur he got all the knowledge he could get from it. But then, Nic already completed that challenge on the last cohort. So the rules we went for were :</p>

<ol>
<li>We don&rsquo;t check any of the code he did before</li>
<li>His thoughts may very well just end up being guided by what he already did, so I found the suggestions, he would just comment, agree, debate, etc&hellip;</li>
</ol>


<p>Let me tell you guys : That went well! We ended up implementing an object-oriented piece of code that actually ran faster (50%) than the one he had last year!</p>

<p>If you want more info on that :</p>

<p>We created a cell object that had the value for that cell, and all the info about its position as its attributes. This way, a simple <a href="http://www.ruby-doc.org/core-2.1.0/Array.html-i-select"></a> call and we got all the cells in this array, in this row, or in this column.</p>

<h2>Geek talk : My take on people&rsquo;s solutions</h2>

<p>People actually implemented the same algorithm over and over again. To sum it up I&#8217;ld say :</p>

<ul>
<li>Select a cell</li>
<li>Get the values of the non-empty cells in the same row, column, and box</li>
<li>Subtract the values you found from an array of the possible values (1 to 9)</li>
<li>If there is only one remaining possible value, assign it to that space</li>
<li>Do it again until all the spaces are taken</li>
</ul>


<p>That was common for every one of us that I saw. But then the huge difference was : The data structure. You had to make a choice there that would make the code change big time, but let me explain that :<br/>
This data structure can be put in one of 3 different groups.</p>

<ol>
<li>Nested array. You make arrays in an array, and so you get a 2D array</li>
<li>Something hybrid from 1 and 3</li>
<li>Cells as an object that you put in an array</li>
</ol>


<p>Obviously, the 1 is the easiest way to go to put and get the data, right? And the last one may just end up being the most complicated one (What do I need my object to know? How do I create it? And how do I call the attributes of that object? Do I calculate them on the go? &hellip;).</p>

<p>Now, the interesting part is that, for this problem, the easiest the data structure, the hardest the rest of your code will be. Because when you have a nested array, how do you call a block? How about a column? How do you check if all the blank spaces have been filled? Do you do some kind of nested loop to go through your nested arrays?</p>

<p>But then if you chose the 3, this <a href="http://www.ruby-doc.org/core-2.1.0/Array.html-i-select"></a> method just ends up selecting whatever you need in one line.</p>

<p>In the end, since the rest of the code was basically the same, the main difference was there.</p>

<p>If you check the code of people in the cohort, most of the people chose something around 2. Some were pushing in the direction of 3, some in the direction of 1, but mostly doing 2.</p>

<p>One did go through with 0 (Way to go Armando and Chermaine!), and one did actually do something that could be a &ldquo;0&rdquo; in my list : A simple array. You calculate the row,column and box from the index every time you need one of them.</p>

<p>Anyway, that was what I found and I would be happy to share more if you have any more question!</p>

<p>I&rsquo;ll just end this post with this very profound quote :
&ldquo;Today was a good day&rdquo;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Day 4 - Games! and Solutions!]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/01/31/day-4---games-and-solutions/"/>
    <updated>2014-01-31T07:37:06-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/01/31/day-4&#8212;games-and-solutions</id>
    <content type="html"><![CDATA[<h2>Games</h2>

<p>Yesterday was a day when we had to start and implement games. We went from a simple piglatin creator to a boggle board solver.<br/>
For this day, I had to pair with Eric. Eric is nice, and fun. But then I just navigated, pointed the pair to a place where the waters were much too deep, and we ended up just trying to figure some things that we&rsquo;re supposed to care about in a few weeks out. That was not pretty, we learned a lot but ended up not finishing the exercises when others did / we had to get to the next one.</p>

<p>No biggie though, we ended up just climbing back and finishing the exercises, or at least most of them, in due time.<br/>
I do feel sorry for pushing the pair into places we should not have been, and so maybe take time off or learning some valuable info that we should have at that point, but I hope I made it up by being extra precise and helpful if I could for the next part&hellip; I&rsquo;ll have to see that with Eric I guess! Feedback, here we are.</p>

<h2>Solutions</h2>

<p>It was the day I got a few solutions.</p>

<p>First solution : We solved that f**king problem, Rao is really awesome!<br/>
Check the other blog posts if you want to know what I&rsquo;m talking about!</p>

<p>Other solutons : The exercises were not all very hard, they just needed to be taken the exact right way, or you&#8217;ld just get lost in deep non-understandable stuff that take too much time. We code from 8AM to 11PM, and have 9 books to read&hellip; All that by the end of the week. Let&rsquo;s just not take that path.</p>

<p>Anyway, I said I navigated, pushed the pair to a wrong place that just got us stuck. While doing that, I like to take small times off that coding, review what the others are doing, and try to help others. In my mind, finding the solution for somebody&rsquo;s challenges just makes me trigger some kind of chain events that take me to the point when I can solve mine.<br/>
So that&rsquo;s what I did. That did not really helped me work things out on the problems we were having, not at the end at least, but that helped me figure out exercises in advance by helping people that were on 2 while I was on 1.</p>

<p>And THAT helped a lot. In the end, when we got back to our exercise, we just have to recapitulate, check the things I told the others about, and if we agreed on that : Implement. Thanks to that, exercises that could have taken hours to solve just took a few minutes and nothing else!</p>

<p>Anyway, today is Sudoku day. Apparently we have to make a sudoku board creator, and a sudoku game solver&hellip; That&rsquo;s gonna be fun! See you after that!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Be careful with Ruby's assignment methods]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/01/31/be-careful-with-rubys-assignment-methods/"/>
    <updated>2014-01-31T00:59:00-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/01/31/be-careful-with-rubys-assignment-methods</id>
    <content type="html"><![CDATA[<h2>The context</h2>

<p>So, I am in Dev Bootcamp. Yesterday, while trying to implement a customized class, I tried to make ruby respond to :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">myClass</span><span class="o">[</span><span class="n">index</span><span class="o">]=</span><span class="s2">&quot;new_value&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>My buddy and I were trying to get used to Test-Driven Development (<a href="http://fr.wikipedia.org/wiki/Test_Driven_Development">If you want more info&hellip; Thanks Wikipedia!</a>). So I had a very simple test method that tested if 2 things were equal.<br/>
I was testing that this code would return true, just to make sure the whole code of my method was executed.</p>

<p>Come this test, we found out that it wanted a method called &ldquo;[]=&rdquo;, so we did. Our method looked something like :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">[]=</span> <span class="n">index</span><span class="p">,</span><span class="n">new_value</span>
</span><span class='line'>  <span class="c1">#Do some stuff</span>
</span><span class='line'>  <span class="kp">true</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>The problem</h2>

<p>So, we got this method, this test, so far so good. Now, we launch the test to check if the result to that first expression is true and&hellip; No. The test said that this method just ended up returning the value that we were passing it (In this case &ldquo;new_value&rdquo;).</p>

<p>Maybe that method was not doing what it should, so we used the Debugger gem (<a href="http://rubydoc.info/gems/debugger/1.6.5/frames">Docs</a>). With that we just checked step by step what it would be doing.<br/>
&ndash;  First : It is calling the method. The debugger throws us right there in the middle of the method.<br/>
&ndash;  Second : It is actually doing what we want. The data is changed, and it goes through the last line that returns true.<br/>
&ndash;  Third : It does not care about that because on the very next step, the trace you have of this method and what it returns already became &ldquo;new_value&rdquo;</p>

<p>We then asked more experienced boots, and came up with a test where we&#8217;ld be calling the method like this :<br/>
<code>ruby myClass.[]=(index,"new_value")</code>
Conclusion of this test : SUCCESS!<br/>
This calls the method without any problem, and that is done exactly how we want.</p>

<p>So at that point are conclusions were :<br/>
&ndash; The method is called<br/>
&ndash; The method does what it should, even the return<br/>
&ndash; Its behavior changes when we call it with ruby&rsquo;s &ldquo;shortcut&rdquo;, or syntaxic sugar (<a href="http://rubylearning.com/satishtalim/ruby_syntactic_sugar.html">More info</a>) and we end up having the return value disappearing, and the second argument becoming that return value.</p>

<h2>Assignments methods</h2>

<p>Let&rsquo;s pause on that particular problem for a second to talk about assignment methods.</p>

<p>Assignment methods can be used to assign a value to a particular item, like the name says. But in Ruby, everything is object. So assignment methods are actually methods, simple ones defined just like an initialize. What differenciate them mostly is :<br/>
&ndash; An assignment method can has any number of spaces before its = when it is called.<br/>
&ndash; When you call it with the &ldquo;shortcut&rdquo;, the behavior will be neglected and replaced.</p>

<p>Now, the important thing&hellip; Let me rephrase that : The <blink>IMPORTANT</blink> thing is how ruby selects what is and what is not an assigment method.</p>

<p>The answer is : It takes the last character of the name of the method, and checks if it is an equal.<br/>
If it is, your method will be considered an assignment method.</p>

<p>If we take our problem, the method can clearly be detected as an assignment method. That means that it can be called with spaces between the brackets and the = sign, and even more because ruby has a special shortcut for the methods with such a name (The one we used).<br/>
That also means that the behavior will be transformed.</p>

<p>Well, do you want to guess what behavior is the principal one concerned by that statement? You&rsquo;re right, it&rsquo;s the return. The rubydoc tells us that using an assignment method, so the shortcut we are talking about, will always return the argument.</p>

<p>So, our code did work. It did do what we wanted it to do. But unless we wanted to redefine primitive ruby behavior by diving in Ruby&rsquo;s source, there is no way we can make an assignment method return anything else than the thing on the right.</p>

<p>So, guys, be REALLY careful when you call your method with an =. That may help you in some parts, but it may also leave you and your friends, coworkers, teachers craving for answers ;)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Day 3 - Data structures/types, testing, and a brain-teaser]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/01/30/day-3---data-structurestypes-testing-and-a-brain-teaser/"/>
    <updated>2014-01-30T08:13:00-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/01/30/day-3&#8212;data-structurestypes-testing-and-a-brain-teaser</id>
    <content type="html"><![CDATA[<h2>Data Structures/types</h2>

<p>Yesterday was the optionnal solo day, the day when we choose if we pair or not and work on some challenges. The code of the day was about Data Structures. I wont go as far as to try and explain all of that in detail in this blogpost but the idea is that you have all these data types in languages.<br/>
For example, a String is a chain of characters. It has a length, characters at specified index, and methods to compare Strings together, to change some character, and all the other operations you would want to do on such an object.<br/>
Once you get that far, it is what you call Abstract Data Structure. Then you implement it into a Data type, or a Data structure, according to if this ADT is a chain of separable elements, or an element in itself.</p>

<p>So, in short, we spent most of the day working to understand that 100%<br/>
And if you are curious about if I chose to work alone, I did not. I chose to work with the &ldquo;Brother from another mother&rdquo;, Armando.</p>

<h2>Testing</h2>

<p>In our lunch talks, Shadi introduced us to Test-driven development. The idea is that when you have an idea about what you want to do, and no matter how strong the feeling that you can code that is, you will just write tests to verify all that first.<br/>
Your algorithm will not work (Duh&hellip; You did not write any code yet), but you then just launch your script, and jump from error to error, deciphering and correcting them on the way, one by one, never thinking about the big picture. Then when you finish that, you check if the code does exactly what you want. If not, you write more specific tests.</p>

<p>Contrary to popular beliefs, people are really bad at multitasking, and so doing that allows you to complete simple tasks one by one, without multitasking, and empowering your debugging skills on the way.</p>

<p>So, Test driven development, I love you. (Not as much as my fiance of course, but we&rsquo;re getting close)</p>

<h2>A brain teaser</h2>

<p>So, we worked on data structures, while using test-driven-development. While doing that we ended up redefining a method whose syntax is recognized and transformed by ruby&rsquo;s Syntaxic sugar :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">[]=</span> <span class="p">(</span><span class="n">index</span><span class="p">,</span> <span class="n">data</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>which transforms into :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">thing</span><span class="o">[</span><span class="mi">3</span><span class="o">]</span> <span class="o">=</span> <span class="mi">4</span>
</span></code></pre></td></tr></table></div></figure>


<p>So far so good.<br/>
Now, the problem we find is that in Ruby, even if you make that method return something, the second expression, the after-SS one, is returning 4.<br/>
I will tell you more when I realize what happens and why, but let&rsquo;s say other cohorts did not know, coaches did not know, Sherif did not know, and we have to know&hellip; So let&rsquo;s hunt for that!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Day 2 - Cries, laughters, and code]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/01/29/day-2---cries-laughters-and-code/"/>
    <updated>2014-01-29T08:00:00-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/01/29/day-2&#8212;cries-laughters-and-code</id>
    <content type="html"><![CDATA[<h2>Cries</h2>

<p>So today we started Engineer Empathy courses. The idea of this course seems to be that the better you are with yourself and the better your ability to work with others, the better engineer you will become.<br/>
Now, just like everything else in this program, EE is freakingly intense.<br/>
Yesterday we had a session about the Superego and how to recognize attacks from it and defend.
That does not sound much but&hellip; I just ended up almost in tears thinking about strange attacks against myself. Sometimes we just don&rsquo;t really think about the things we put ourselves through, but then when these come back, that&rsquo;s when you have a bad time. Well, let me tell you that people who are crazy enough to join Dev Bootcamp have a lot of</p>

<p>Now if that was not intense enough, I had decided to run a bit too far 2 days ago and so now I just look like a 3rd age dude having a hard time walking all around. That brings some tears too haha.</p>

<h2>Laughter</h2>

<p>Today they gave us a pairing buddy for the whole day. Mine was &hellip; Matthew!<br/>
I spent most of the day enjoying what I was doing, at least for the fact that I was doing it with somebody I appreciate and really have fun with. We joked all around, and even though some may say that it is quite counterproductive, we finished the challenges right at the same time as others, and I got the feeling we learnt exactly enough!</p>

<h2>Code</h2>

<p>So, today we spent the morning reviewing the code some used to complete the challenges of yesterday. We ended up comparing hashes + #each with no data + if (The if waterfall seems to be faster&hellip;), and all that with or without recursion. In the end, we can say that in this small exercise, recursion was a waste of time, and not maintainable, hashes + #each keeps the code organized so maintainable, but then the If waterfall was just horrible to watch but a bit more efficient&hellip; The world of code is a strange place, guys&hellip;</p>

<p>In the afternoon we worked on sorting algorithm. After a bit of time going crazy over explanations not explaining much and hurting our brains and souls, Rao, a coach with a nice and funny meow-like name gave us some more options and we found out how to do all that. We implemented the merge sorting algorithm and that did not take us much time from here. The funny surprise though was that at the end, we cleared the 3 170k words files in around 1.5 seconds each&hellip; While every other algorithm just took at least 10 minutes. Some even calculated that theirs could last for a day just sorting one of the files. Algorithms are crazy and are to be known!</p>

<p>Now, time to go back and code guys, see ya!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[So it begins...]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/01/28/so-it-begins/"/>
    <updated>2014-01-28T07:53:00-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/01/28/so-it-begins</id>
    <content type="html"><![CDATA[<p>I won&rsquo;t go as far as to tell everything since the last post. Challenges went by, I continued pairing with Armando, working at my strange company that just ended up closing, and then the closer I got to my 8000 miles travel, the busier I got&hellip;</p>

<p>Plus, I just ended up taking all the time I could get to see my fiance.
And let me tell you guys : That was worth it, and a very good idea !</p>

<p>Then, 3 days ago I arrived in SF. I just had time to discover simple things here and there, get an account at the bank, a mobile line, and all the things you need for a simple life nowadays.</p>

<p>Now, up to the main topic :</p>

<h2>The program started</h2>

<p>So, yesterday, we were expected at Dev Bootcamp, just at the entrance of Chinatown, for 9AM. We met the last remaining people of the cohort that we had not met before, and waited there, anxiously waiting.
At 9AM sharp, shouts and claps started right behind that little door we had not passed yet&hellip;</p>

<p>They opened the doors, and things went wild.
I won&rsquo;t go as far as to explain everything in details, but for this first post in a while I&rsquo;ll just sum it up as :</p>

<ul>
<li>People are awesome. Teachers, Coaches, other students, other cohorts, everybody!</li>
<li>We should be expecting 60-80 hours weeks, and even there we probably won&rsquo;t get over everything anyway.</li>
<li>Sherif, one of our teachers, is really eloquent&hellip; You can hear pure knowledge come out of his mouth&hellip; That&rsquo;s insane</li>
<li>Sherif told us repeatedly : We are insane for thinking it is doable. But the common insanity is what bounds us and may end up making it possible.</li>
<li>We are guinea pigs. The program we will be living will be a bit different than the others, but then I&rsquo;ll explain that later.</li>
</ul>


<p>All in all, I can say that we are joining a program that shows us how to work and let us do the job and find about what to do and how, assess our learning,&hellip;
We are basically the ones making it possible. Teachers guide us, but that is all.</p>

<p>Now, time to head up to DBC again, cheers!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[(unknown post type)]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/01/10/unknown-post-type/"/>
    <updated>2014-01-10T12:50:35-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/01/10/unknown-post-type</id>
    <content type="html"><![CDATA[<p>missing body</p>
]]></content>
  </entry>
  
</feed>
