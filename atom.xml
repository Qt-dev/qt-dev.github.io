<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Qt's Home]]></title>
  <link href="http://Qt-dev.github.io/atom.xml" rel="self"/>
  <link href="http://Qt-dev.github.io/"/>
  <updated>2014-07-03T11:47:06+02:00</updated>
  <id>http://Qt-dev.github.io/</id>
  <author>
    <name><![CDATA[Quentin Devauchelle]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    
    <title type="html"><![CDATA[ReactJS - How to make a collapsible content panel]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/07/01/reactjs-how-to-make-a-collapsible-content-panel/"/>
    
    <updated>2014-07-01T11:50:02+02:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/07/01/reactjs-how-to-make-a-collapsible-content-panel</id>
    
    <content type="html"><![CDATA[<h2>Before we start</h2>

<p>This is a small and easy guide about something you can do easily with React and CSS3.</p>

<p>First, a few things you need to know about before we start :</p>

<ul>
<li><a href="http://facebook.github.io/react/">ReactJS</a> &ndash; <em>Beginner</em></li>
<li><a href="http://www.w3schools.com/css/css3_transitions.asp">CSS3 Transitions</a> &ndash; <em>Beginner</em></li>
</ul>


<h2>How-to</h2>

<p>What we are building is something like this <a href="http://jqueryui.com/accordion/">JQuery UI plugin</a>.<br/>
We have content, and titles. When the user clicks on a title, it opens the accordion below while closing the others.</p>

<h3>React modelisation</h3>

<p>Let&rsquo;s start with the simple HTML content that we want to have (For React very beginners) :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;container&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;section-1&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;h2</span> <span class="na">class=</span><span class="s">&quot;section-title&quot;</span><span class="nt">&gt;</span>Section 1<span class="nt">&lt;/h2&gt;</span>
</span><span class='line'>      <span class="nt">&lt;p</span> <span class="na">class=</span><span class="s">&quot;section-content&quot;</span><span class="nt">&gt;</span>Our content for the section 1<span class="nt">&lt;/p&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;section-2&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;h2</span> <span class="na">class=</span><span class="s">&quot;section-title&quot;</span><span class="nt">&gt;</span>Section 2<span class="nt">&lt;/h2&gt;</span>
</span><span class='line'>      <span class="nt">&lt;p</span> <span class="na">class=</span><span class="s">&quot;section-content&quot;</span><span class="nt">&gt;</span>Our content for the section 2<span class="nt">&lt;/p&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;section-3&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;h2</span> <span class="na">class=</span><span class="s">&quot;section-title&quot;</span><span class="nt">&gt;</span>Section 3<span class="nt">&lt;/h2&gt;</span>
</span><span class='line'>      <span class="nt">&lt;p</span> <span class="na">class=</span><span class="s">&quot;section-content&quot;</span><span class="nt">&gt;</span>Our content for the section 3<span class="nt">&lt;/p&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/div&gt;</span>
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>This is not a file we are making, but this is what we will try to model with React.</p>

<p>So, first things first, let&rsquo;s put the content in a simple json object (there are many ways to get data to build react components but we&rsquo;ll talk about that in another post).</p>

<p><em>backendData.js</em></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">backendData</span> <span class="o">=</span> <span class="p">[</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="s2">&quot;title&quot;</span><span class="o">:</span><span class="s2">&quot;Section 1&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;content&quot;</span><span class="o">:</span><span class="s2">&quot;Our content for the section 1&quot;</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="s2">&quot;title&quot;</span><span class="o">:</span><span class="s2">&quot;Section 2&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;content&quot;</span><span class="o">:</span><span class="s2">&quot;Our content for the section 2&quot;</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="s2">&quot;title&quot;</span><span class="o">:</span><span class="s2">&quot;Section 3&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;content&quot;</span><span class="o">:</span><span class="s2">&quot;Our content for the section 3&quot;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Then, we build our components for the ground up. First, the section component we&rsquo;ll instantiate:</p>

<p><em>section.jsx</em></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm">* @jsx React.DOM</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="cm">/* section.jsx */</span>
</span><span class='line'><span class="nx">Section</span> <span class="o">=</span> <span class="nx">React</span><span class="p">.</span><span class="nx">createClass</span><span class="p">({</span>
</span><span class='line'>  <span class="nx">render</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">(</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="nx">div</span> <span class="nx">className</span><span class="o">=</span><span class="p">{</span><span class="s2">&quot;section&quot;</span> <span class="o">+</span> <span class="k">this</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">key</span><span class="p">}</span><span class="o">&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="nx">h2</span> <span class="nx">className</span><span class="o">=</span><span class="s2">&quot;sectionTitle&quot;</span><span class="o">&gt;</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">title</span><span class="p">}</span><span class="o">&lt;</span><span class="err">/h2&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="nx">p</span> <span class="nx">className</span><span class="o">=</span><span class="s2">&quot;sectionContent&quot;</span><span class="o">&gt;</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">content</span><span class="p">}</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="err">/div&gt;</span>
</span><span class='line'>    <span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure>


<p>(I decided to put the data given by my &ldquo;back-end&rdquo; in a single JS object. Single responsibility, DRY code, let&rsquo;s say I have reasons)</p>

<p>Then, we make the container component, that creates nested sections with our data:</p>

<p><em>container.jsx</em></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm">* @jsx React.DOM</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="nx">Container</span> <span class="o">=</span> <span class="nx">React</span><span class="p">.</span><span class="nx">createClass</span><span class="p">({</span>
</span><span class='line'>  <span class="nx">buildSections</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">sectionList</span><span class="p">){</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">sections</span> <span class="o">=</span> <span class="nx">sectionList</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">section</span><span class="p">,</span> <span class="nx">index</span><span class="p">){</span>
</span><span class='line'>      <span class="cm">/* Remember to add a &#39;key&#39;. React wants you to add an identifier when you instantiate a component multiple times */</span>
</span><span class='line'>      <span class="k">return</span> <span class="o">&lt;</span><span class="nx">Section</span> <span class="nx">key</span><span class="o">=</span><span class="p">{</span><span class="nx">index</span><span class="p">}</span> <span class="nx">data</span><span class="o">=</span><span class="p">{</span><span class="nx">section</span><span class="p">}</span> <span class="o">/&gt;</span>
</span><span class='line'>    <span class="p">})</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">sections</span><span class="p">;</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="nx">render</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">sections</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">buildSections</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">data</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">(</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="nx">div</span> <span class="nx">className</span><span class="o">=</span><span class="s2">&quot;container&quot;</span><span class="o">&gt;</span>
</span><span class='line'>        <span class="p">{</span><span class="nx">sections</span><span class="p">}</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="err">/div&gt;</span>
</span><span class='line'>    <span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure>


<p>So far so good, we get pretty much exactly the html code above if we instantiate our page with something like this :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">React</span><span class="p">.</span><span class="nx">renderComponent</span><span class="p">(</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">Container</span> <span class="nx">data</span><span class="o">=</span><span class="p">{</span><span class="nx">backendData</span><span class="p">}</span> <span class="o">/&gt;</span><span class="p">,</span>
</span><span class='line'>  <span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s1">&#39;body&#39;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>
</span><span class='line'><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now on to setting up our closed/open states</p>

<h3>Closed/Open states</h3>

<p>First, let&rsquo;s hide the sectionContents with some simple CSS.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nc">.sectionContent</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">overflow</span><span class="o">:</span> <span class="k">hidden</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>The only thing to note here is that we will be using heights, from 0 to &hellip; what we need. So, to do so, we need to make it so that the overflow is hidden instead of toggling <code>display:none</code>and <code>display:block</code></p>

<p>Now, let&rsquo;s trigger these changes in our components :</p>

<p><em>section.jsx</em></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm">* @jsx React.DOM</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="nx">Section</span> <span class="o">=</span> <span class="nx">React</span><span class="p">.</span><span class="nx">createClass</span><span class="p">({</span>
</span><span class='line'>  <span class="nx">getInitialState</span><span class="o">:</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">open</span><span class="o">:</span> <span class="kc">true</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="nx">toggleContent</span><span class="o">:</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">setState</span><span class="p">({</span>
</span><span class='line'>      <span class="nx">open</span><span class="o">:</span> <span class="o">!</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">state</span><span class="p">.</span><span class="nx">open</span><span class="p">)</span>
</span><span class='line'>    <span class="p">})</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="nx">getContentToggleHeight</span><span class="o">:</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">state</span><span class="p">.</span><span class="nx">open</span><span class="p">){</span>
</span><span class='line'>      <span class="k">return</span> <span class="s2">&quot;3em&quot;</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="s2">&quot;0&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="nx">render</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">contentStyle</span> <span class="o">=</span> <span class="p">{</span> <span class="nx">height</span><span class="o">:</span> <span class="nx">getContentToggleHeight</span><span class="p">()</span> <span class="p">};</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">(</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="nx">div</span> <span class="nx">className</span><span class="o">=</span><span class="p">{</span><span class="s2">&quot;section section&quot;</span> <span class="o">+</span> <span class="k">this</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">key</span><span class="p">}</span><span class="o">&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="nx">h2</span> <span class="nx">className</span><span class="o">=</span><span class="s2">&quot;sectionTitle&quot;</span> <span class="nx">onClick</span><span class="o">=</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">toggleContent</span><span class="p">}</span> <span class="o">&gt;</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">title</span><span class="p">}</span><span class="o">&lt;</span><span class="err">/h2&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="nx">p</span> <span class="nx">className</span><span class="o">=</span><span class="s2">&quot;sectionContent&quot;</span><span class="o">&gt;</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">content</span><span class="p">}</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="err">/div&gt;</span>
</span><span class='line'>    <span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure>


<p>In here, assign a height based on the state of our component to our sectionContent. I chose 3em pretty randomly because I like fixed things, you can decide to calculate the height you need instead. The inherit and auto don&rsquo;t work well with transitions, but they will work if you don&rsquo;t need them. This state is changed when you click on the title. It triggers the toggleContent function that inverts the closed state.</p>

<p>So, now we have a closed and a open state. We toggle between them based on the state of our Section component, defined by how many times we clicked on that title.</p>

<p><strong><em>If you are looking for a way to make tabs open all at once, stop here. If you&rsquo;re looking for that JQueryUI style One tab only thing, keep on to the next part</em></strong></p>

<h3>Closing all of them when one is open</h3>

<p>Single responsibility principles tells us our Sections don&rsquo;t know about the other sections. That means our section cannot tell the others to close. The container, however, knows about all of the sections&hellip;</p>

<p><em>container.jsx</em></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm">* @jsx React.DOM</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="nx">Container</span> <span class="o">=</span> <span class="nx">React</span><span class="p">.</span><span class="nx">createClass</span><span class="p">({</span>
</span><span class='line'>  <span class="nx">getInitialState</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">sectionList</span><span class="p">){</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">{</span> <span class="nx">openSectionIndex</span><span class="o">:</span> <span class="o">-</span><span class="mi">1</span> <span class="p">}</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="nx">buildSections</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">sectionList</span><span class="p">){</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">sections</span> <span class="o">=</span> <span class="nx">sectionList</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">buildSection</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">sections</span><span class="p">;</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="nx">buildSection</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">section</span><span class="p">,</span> <span class="nx">index</span><span class="p">){</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">openStatus</span> <span class="o">=</span> <span class="p">(</span><span class="nx">index</span> <span class="o">===</span> <span class="k">this</span><span class="p">.</span><span class="nx">state</span><span class="p">.</span><span class="nx">openSectionIndex</span><span class="p">);</span>
</span><span class='line'>      <span class="cm">/* Remember to add a &#39;key&#39;. React wants you to add an identifier when you instantiate a component multiple times */</span>
</span><span class='line'>      <span class="k">return</span> <span class="o">&lt;</span><span class="nx">Section</span> <span class="nx">key</span><span class="o">=</span><span class="p">{</span><span class="nx">index</span><span class="p">}</span> <span class="nx">data</span><span class="o">=</span><span class="p">{</span><span class="nx">section</span><span class="p">}</span> <span class="nx">toggleOne</span><span class="o">=</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">toggleOne</span><span class="p">}</span> <span class="nx">open</span><span class="o">=</span><span class="p">{</span><span class="nx">openStatus</span><span class="p">}</span> <span class="o">/&gt;</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="nx">toggleOne</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">id</span><span class="p">){</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">state</span><span class="p">.</span><span class="nx">openSectionIndex</span> <span class="o">===</span> <span class="nx">id</span><span class="p">){</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">setState</span><span class="p">({</span><span class="nx">openSectionIndex</span><span class="o">:</span> <span class="o">-</span><span class="mi">1</span><span class="p">});</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">setState</span><span class="p">({</span><span class="nx">openSectionIndex</span><span class="o">:</span> <span class="nx">id</span><span class="p">});</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="nx">render</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">sections</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">buildSections</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">data</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">(</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="nx">div</span> <span class="nx">className</span><span class="o">=</span><span class="s2">&quot;container&quot;</span><span class="o">&gt;</span>
</span><span class='line'>        <span class="p">{</span><span class="nx">sections</span><span class="p">}</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="err">/div&gt;</span>
</span><span class='line'>    <span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now, we actually play with the state of the parent component. It keeps track of the id of the tab that is open, and starts with -1.</p>

<p>We pass the toggleOneSection callback to the child component (the section), it takes an id (the id of the thing we want to toggle), and it sets the openSectionIndex of the state accordingly to our argument, or back to nothing (-1).</p>

<p>We then build sections with an &ldquo;open&rdquo; prop, a boolean that will be the thing that is used to get the class of our sectionContent, instead of the Section&rsquo;s state. React building the page on the go, from the javascript, in the way of a simple diff, the children will just be changed instead of generated again, which will trigger whatever we have on them (listeners, animations, etc&hellip;).</p>

<p>Now to the section :</p>

<p><em>section.jsx</em></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm">* @jsx React.DOM</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="nx">Section</span> <span class="o">=</span> <span class="nx">React</span><span class="p">.</span><span class="nx">createClass</span><span class="p">({</span>
</span><span class='line'>  <span class="nx">toggleContent</span><span class="o">:</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">toggleOne</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">key</span><span class="p">)</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="nx">getHeight</span><span class="o">:</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">open</span><span class="p">){</span>
</span><span class='line'>      <span class="k">return</span> <span class="s2">&quot;3em&quot;</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="s2">&quot;0&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="nx">render</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">style</span> <span class="o">=</span> <span class="p">{</span> <span class="nx">height</span><span class="o">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">getHeight</span><span class="p">()</span> <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">(</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="nx">div</span> <span class="nx">className</span><span class="o">=</span><span class="p">{</span><span class="s2">&quot;section section&quot;</span> <span class="o">+</span> <span class="k">this</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">key</span><span class="p">}</span><span class="o">&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="nx">h2</span> <span class="nx">className</span><span class="o">=</span><span class="s2">&quot;sectionTitle&quot;</span> <span class="nx">onClick</span><span class="o">=</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">toggleContent</span><span class="p">}</span> <span class="o">&gt;</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">title</span><span class="p">}</span><span class="o">&lt;</span><span class="err">/h2&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="nx">p</span> <span class="nx">className</span><span class="o">=</span><span class="s2">&quot;sectionContent&quot;</span> <span class="nx">style</span><span class="o">=</span><span class="p">{</span><span class="nx">style</span><span class="p">}</span> <span class="o">&gt;</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">content</span><span class="p">}</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="err">/div&gt;</span>
</span><span class='line'>    <span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure>


<p>As I said above, getContentToggleClass now uses the props instead of the state, and I got rid of the other state functions.
The toggleContent internal callback now call the callback we called in the props, with that key that we gave it at the very beginning.</p>

<p>Now, up to animations</p>

<h3>Animations</h3>

<p>This is the very easy part. To trigger the animations, we just put a &ldquo;transition&rdquo; on the container selector, in the css.</p>

<p><em>style.css</em></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nc">.sectionContent</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">overflow</span><span class="o">:</span> <span class="k">hidden</span><span class="p">;</span>
</span><span class='line'>  <span class="o">-</span><span class="n">webkit</span><span class="o">-</span><span class="n">transition</span><span class="o">:</span> <span class="k">height</span> <span class="m">0.3s</span> <span class="n">ease</span><span class="o">-</span><span class="n">in</span><span class="p">;</span>
</span><span class='line'>  <span class="o">-</span><span class="n">moz</span><span class="o">-</span><span class="n">transition</span><span class="o">:</span> <span class="k">height</span> <span class="m">0.3s</span> <span class="n">ease</span><span class="o">-</span><span class="n">in</span><span class="p">;</span>
</span><span class='line'>  <span class="o">-</span><span class="n">o</span><span class="o">-</span><span class="n">transition</span><span class="o">:</span> <span class="k">height</span> <span class="m">0.3s</span> <span class="n">ease</span><span class="o">-</span><span class="n">in</span><span class="p">;</span>
</span><span class='line'>  <span class="o">-</span><span class="n">ms</span><span class="o">-</span><span class="n">transition</span><span class="o">:</span> <span class="k">height</span> <span class="m">0.3s</span> <span class="n">ease</span><span class="o">-</span><span class="n">in</span><span class="p">;</span>
</span><span class='line'>  <span class="n">transition</span><span class="o">:</span> <span class="k">height</span> <span class="m">0.3s</span> <span class="n">ease</span><span class="o">-</span><span class="n">in</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>This tells the interpreter that when the height changes, it has to take 0.3s to transition into the new height, with ease-in giving it a slow start for a cleaner interface (just a matter of preferences on this one).</p>

<p>And we now have our accordion menu.</p>

<h2>Conclusion</h2>

<p>You now have a clean accordion menu. I tend to add a few styling thing that I consider the bare minimum on that like :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nc">.sectionTitle</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">display</span><span class="o">:</span> <span class="k">block</span><span class="p">;</span>
</span><span class='line'>  <span class="k">cursor</span><span class="o">:</span> <span class="k">pointer</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>But that&rsquo;s just me. Also, you don&rsquo;t need to use H2s, you can use whatever you want, links work too but remember to preventDefault if you use them.</p>

<p>Let me know what you thought about that guide, I may have missed things here and there, and thank you for reading!</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[A Letter to DBC]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/05/11/letter-to-dbc/"/>
    
    <updated>2014-05-11T13:28:07+02:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/05/11/letter-to-dbc</id>
    
    <content type="html"><![CDATA[<p>I am writing this in the plane from San Francisco to Paris (actually Newark to Paris but who cares about layovers).</p>

<p>I am leaving for a bit, but I will be back. I usually make my posts in &frac34; parts, to talk about specific topics, but today, this is a letter to the people I met in SF.</p>

<p>First, I want to say that I love you. I love you all, the ones I spent a lot of time with as much as the ones I wish I spent more time with, the ones I slept in the same bed with, the ones I never knew the names, all of you.</p>

<p>3 months ago, I was coming to San Francisco and I knew none of you guys. I knew nothing about anybody else&rsquo;s history, almost nothing about the US, about San Francisco, and actually not much about myself. It feels like you guys taught me so much about all of this.<br/>
And now, thanks to you, I would not say that I know much more about all of that, but what I can say is that I now know that I don&rsquo;t know much, but that if I am interested in getting answers, I can make it happen.</p>

<p>In these 3 months, I met all of you guys. TV Star, writer, designer, fresh out of school or with a ton of experience, all of you are just incredible. One could thing I make a general statement about a group full of very different individuals, but I can assure you that I am not. Every single person that I met during these 3 months is incredible. Everybody a different way, with different traits, good sides and bad sides, but all of them are incredible. All.Of.You.</p>

<p>But let me split all of you guys in smaller categories to prevent too many generic statements.</p>

<h3>To the DBC Staff</h3>

<p>If I could tell you just one thing, that would be : Thank you for everything.</p>

<p>What you do is great, and I am not talking about code, but about the human experience that you set up, and make us experience. Coming here, I thought I would get a lot of coding experience, but more than coding, what I got was an incredible life experience. As if being around people like <strong>Karim Bishay</strong>, <strong>Sherif Abushadi</strong>, or <strong>Steven Harms</strong>, for example, was not enough, the program is made so that every part of the staff contributes to making you learn so much about how to approach everything.</p>

<p>And the funny thing is that you actually get out with more questions that you came in, but you can now realize that questions are what will take you further. Wondering about them, asking them, and searching for the answers will give you so much more than just having the answer. I realize that now, but 3 months ago, that would probably not have been the case.</p>

<p>And I know some names come up much more than others, but people like Keren and Sam, Brandon, or the people that I never asked the name of (oops, sorry) are just as important. You may get through DBC and not realize that, but if any of them was any different, your experience would also be completely different.</p>

<h3>To the alumnis/previous cohorts</h3>

<p>Whether you are a coach of not does not matter, you guys rock. Seeing what people did before us has been an inspiration all throughout these 3 months. And just the fact that most of the people are so accessible, so open-minded, and even years after going through the program, are sill that friendly with former boot, is something that I don&rsquo;t think I experienced before. And now, I will do my best to perpetuate this tradition!</p>

<p>As for the coaches&hellip; Thank you. In my opinion, spending days on Three.js with <strong>Salar</strong> is just as valuable as finding the solution to that hard problem you&rsquo;ve been given. In the end, what makes us good is not the challenges we finish, but the fact that we like to wander around and discover everything we can.</p>

<p>Never stop learning and redistributing that knowledge. This is what makes us great, this is what make you great, this is also what makes the program and the whole experience that valuable.</p>

<h3>To the cohorts after us</h3>

<p><strong>Golden Bears</strong>, thank you for being my confidents, give me that feeling of that a big brother has when he sees his younger siblings grow. You are much better than what many of you could think, just keep up the good work, gather, and built great things!</p>

<p><strong>Fiery Skippers</strong>, when I am writing this, you just graduated (yup, 2 weeks for a post). Congratulations, I never ever doubted that you would do great. You guys have an incredible group dynamic that will take you so far&hellip; I envy you just as much as I thank you. Now blow everybody&rsquo;s mind, you have to!</p>

<p><strong>Pocket Gophers</strong>, I don&rsquo;t know you as much as I wish I would. I met you guys when I already knew I had to leave. But the things I saw in your cohort from the small window I had make me think you are bound to be great. I have a lot of faith in what you can do, and I can&rsquo;t wait for you to graduate, to see what happens.</p>

<p><strong>The Red admirals</strong>, I &hellip; genuinely don&rsquo;t know you, except 2 of you that I met at our graduation party&hellip; But I wish you a lot of fun and learning!</p>

<h3>To my cohort, the Banana Slugs</h3>

<p>I love you guys! I came from far away, first time in the US, no time to adapt, but from the very first day I felt at home among you guys. I slept in the same bed as some of you, same floor as others, same couch as (many) even more of you. I lived with 9 of you guys, I worked with most of you guys, and I have only good things to say about every one of you. When the worse thing you can say about somebody is &ldquo;He wants to get things done asap&rdquo;, I consider that a good thing, right? ;)</p>

<p>I thank you all for welcoming me, sharing with me, being great altogether, and making me feel good about myself! I love you guys and I will be available for every one of you, as long as I can.</p>

<p><strong>SLUGS LIFE~~</strong></p>

<h3>Special mentions</h3>

<p><strong>Armando</strong>, my new brother, I love you. Even now that we are far away, you are still changing my life everyday. I am reading your book, making life changes from stuff you said, you are everywhere. Damn you big brother ;)</p>

<p><strong>Christine</strong>, damn you for being that awesome! I felt bad when I did not know what was up with you, I cried with you, I even made you taste french food (not that good though)! I feel like you will do great things. You are so much better than me >.&lt;<br/>
Now be great, and be happy. We talked about it before, but even more than &ldquo;you deserve it&rdquo;, think about it as &ldquo;you have a duty to do so&rdquo;.</p>

<p><strong>Drew</strong>, I wish I had spent more time with you. I really feel a great connection with you, and at times I felt like you were losing hope, losing part of that motivation&hellip; You should not. I believe you can do great things, and I am and will be available for you whenever you will need it.</p>

<p><strong>Sherif Abushadi</strong>, thank you for being you. My new goal in life is to give that same feeling you&rsquo;re giving people around you one day. You have to feel that one day!</p>

<p><strong>Karim Bishay</strong>, thank you for that new vision of life you brought me with these EE sessions. I was interested in Empathy before, but now I actually know how to share it. Thank you.</p>

<p><strong>Steven Harms</strong>, thank you for all that knowledge. I felt like I learned as much in DBC than outside of it when we got these lunches. I love the way you teach, the way you share what you know, and I will work to get back to get lunch again!</p>

<p><strong>Rao</strong>, meow. Meow meow meow meoooooow meoow. Meow meow meow Mouw.</p>

<p><strong>Salar</strong>, thank you for being awesome. Keep on being awesome like that. I am looking forward to the day I can work with you!</p>

<p><strong>Ben, Pocket Gopher</strong>, I did not spend half as much time as I wanted with you. I feel like you are an incredible person, and I want to learn everything about your life. Let&rsquo;s meet again when you get more time!</p>

<p><strong>Matthew and Johnny</strong>, thank you for being around. I felt so good around you and I will feel good again when I am back. I consider you like my little brothers. Overachieving brothers that will end up ruling the world, haha.</p>

<p><strong>Stephen</strong>, man, I love you too&hellip; But you keep me so worried all of the time. Please take care of yourself, and keep on being great. Don&rsquo;t listen to that voice in your head, &lsquo;haters gonna hate&rsquo; ;)</p>

<p>Not sure how to finish that letter, but I&rsquo;ll go with : Keep on being awesome, people, I love you, you changed me.</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Where I was, where I am, where I am going]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/05/11/where-i-was/"/>
    
    <updated>2014-05-11T12:52:26+02:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/05/11/where-i-was</id>
    
    <content type="html"><![CDATA[<h2>Where I was</h2>

<p>Well, I was in DBC, in case you did not know. I published today <a href="http://qt-dev.tumblr.com/post/85410637038/a-letter-to-dbc">this letter to the people I met there</a>.</p>

<p>In short, I was a technical support guy, playing with development, not really sure about anything he was doing. Then I went to Dev Bootcamp, learned a lot about code and about life in general. At the end, I did not find a company that would be willing to work with me on immigration stuff so I could not stay in the US.</p>

<p>I had played with PHP, Android Development, Java (it does go with Android Dev, doesn&rsquo;t it?), Python, and some simple Javascript.
In DBC I then played with more (and MUCH better) Js, with Ruby, and with frameworks like Sinatra, Rails, Backbone, Flask (In order of how much I used them there).</p>

<h2>Where I am</h2>

<p>I could not stay so &hellip; I am back in France. I have been around for a bit more than a month now.</p>

<p>I decided to spend a lot of time studying/coding while I was looking for opportunities in countries I could go more easily than the US, or a very very good opportunity in France.</p>

<p>The project I spend most of my time on is : <a href="https://github.com/Qt-dev/server-admin">Server Admin</a>, a server management page for TV shows/movies downloading servers (for us that are far from getting any good show from the US under license in our country, of course&hellip;).
I decided to go hard or go home (I am home already anyway), and so I use more or less only technologies that I did not know before.</p>

<p>We have a backend in <strong>NodeJS</strong> with tests in <strong>Mocha</strong> and automation with <strong>Grunt</strong>. The frontend is built with a couple of <strong>Backbone</strong> and <strong>React</strong>. Right now I am working on passing the pseudo database that I had before (= a json file loaded by JQuery&hellip; I am very very ashamed right now&hellip;) into a real DB. I use <strong>TingoDB</strong>. It is an alternative to <strong>MongoDB</strong> for a NoSQL database. Basically, instead of having to install some kind of service and secure it, it saves all the stuff in a file. I figured it was a better fit for an app I can just send as a package and people can install easily.</p>

<p>Apart from coding, I got some interviews that mostly went well, but with the wrong companies (Companies that found their new recruits right before my interview, others that actually did not have the money to recruit, or others who are looking for seniors). Being far away is probably not helping either&hellip;</p>

<p>I also got a new dog, hang around on Facebook for the pictures ;)</p>

<p>I would say I spend almost 100% of my time in my house, speaking to &hellip; my family, and maybe one or 2 friends in the week (yes, Thuy is my family). That feels weird, especially when you are usually working much better with others, in teams, etc&hellip;<br/>
But with a lot of breathing, a bit of meditation, and a lot of hard work, I&rsquo;m making things happen so that&rsquo;s cool ;)</p>

<h2>Where I am going</h2>

<p>Unless I get a very good opportunity in here, my goal is still to go back to my friends on the other side of the world. My primary focus is on <strong>Vancouver</strong> and <strong>Toronto</strong> right now. If you know anybody around there, please let me know!</p>

<p>I touched a bit of iOS development today, as a break from that Server Admin development, so I will probably try some stuff with that once the server-admin MVP is out. I am also planning on porting <a href="https://play.google.com/store/apps/details?id=com.qdev.craftmeapass">Craft Me A Pass!</a> on iOS and as a simple JS web app when I get time.</p>

<p>I am still wondering if I will not just take some money that I saved and go to one of these cities to search from there directly&hellip; I just want to finish a few things before I go. This would feel like an &ldquo;All-in&rdquo; and &hellip; I am not a fan of no-backup-plan ideas hehe.</p>

<p>And where I am going is in a blogging world. I did not blog enough recently, which is stupid since it&rsquo;s my main way to get in contact with people I miss but well, I did it anyway. Now I will, I&rsquo;m giving you my word! (And people who&rsquo;ve known me for a while know that it means a lot ;))
Also, I realized I know a bit about technologies that are not necessarily well-documented all around, so I might as well share. So expect a few blog posts on fancy React tricks, maybe how to test node backend, and funny stuff like that!</p>

<p>Anyway, see you in a few guys, and don&rsquo;t hesitate to comment or &hellip; just even get in contact haha</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[I won a NASA Hackathon, languages, and job searching, still]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/04/16/i-won-a-nasa-hackathon/"/>
    
    <updated>2014-04-16T00:50:47+02:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/04/16/i-won-a-nasa-hackathon</id>
    
    <content type="html"><![CDATA[<h2>The NASA Hackathon</h2>

<p>So, this weekend was the &ldquo;NASA SpaceApp hackathon&rdquo;, and we won the first round. But I see you coming with your questions, so let me attempt to explain?.</p>

<ul>
<li><p>What is a hackathon ?<br/>
A Hackathon is a &ldquo;code contest&rdquo;. The idea is that you are given an amount of time (most of the time 1-2 days), and themes/challenges. From that, you make teams with the people you can find, and you have to build something. At the end of the timer, a panel of judge selects the winner/winners.</p></li>
<li><p>What is NASA Spaceapp?<br/>
The NASA is &hellip; NASA, the National Aeronautics and Space Administration, or in easier words : The American government department that manages Space research. They put Mr Armstrong on the moon in 1969, they helped a lot sending the International Space Station in space, they are the one that give you these images of Mars, and are one of the only agency in the world that, when they miscalculate, end up having a robot battery and communication lasting much longer than expected! (It&rsquo;s usually the opposite&hellip; isn&rsquo;t it?)<br/>
SpaceApp is a part of a program to encourage innovation in that domain. It is an incubator, so a center for innovators to build new projects, and it was hosting this hackathon this weekend. This one was organized in 90 cities in the world!</p></li>
<li><p>What was the theme?<br/>
Space of course! If you check the <a href="https://2014.spaceappschallenge.org">SpaceApp</a> website, you can see a list of challenges. One group had to pick one, and make something to complete it. In every location, they added small local challenges too. So we went for one of them.</p></li>
<li><p>What about your team? Your challenge?<br/>
Our team was : Anne, Harry, Matthew and me from the Banana Slugs 2014, Matt Higgins from the Sea Lions (the previous cohort), and Roman, a web developer.<br/>
We chose to work on the <a href="https://2014.spaceappschallenge.org/challenge/alert-alert/">Alert! Alert!</a> challenge. Basically, we had to build a way to monitor some space events from the ground.<br/>
We also went for a local challenge with <a href="https://getpebble.com">Pebble</a>, a smart watch. If we were to be the best implementation of the Pebble app in our challenge, we were to all win a Pebble watch!</p></li>
<li><p>So what did you decide to do?<br/>
Our project is an alert system, on the Pebble and on a site, that warns you when one of the 40 biggest space objects we could find is around you. It tells you which one is, and if visible, gives you a direction to look at.</p></li>
<li><p>How did you do it?<br/>
Well, first, the Pebble has a whole interface in C. None of us knew C. They are pushing a Javascript part of the SDK(Development Kit), which is a language we actually know, but definitely not in this context, getting info about space objects, using them, and making things happen on a watch with that data&hellip;<br/>
In the end, we have a (more or less) clear code, 2 versions on the Pebble store, and a working app. We discovered C, I spent a good amount of time on Sunday having &ldquo;fun&rdquo;(C Coder will understand) with Strings, Static variables, &hellip; Good fun.</p></li>
<li><p>And so&hellip; in the end&hellip; ?<br/>
In the end, we f*cking won! The judges from famous companies around here like Twitter or Pivotal voted for us, and you can see there : <a href="http://spaceappssf.weebly.com/winners.html">SpaceApp SF</a> that we were selected for &ldquo;Best Use of Hardware&rdquo;. <br/>
We won Pebble watches, we have our app, and judges from NASA will actually compare us with other groups in the world.</p></li>
<li><p>And your thoughts?<br/>
I think we really rocked. We had never touched the watch, never coded for hardware, never coded Javascript like that, or played with such strong limitations as those of smart watches&hellip; And yet, we had a fully working app on the given hour, released on the store even, we won, and we did not feel stuck at any time during the whole thing. And all that almost only with DBC grads! For me, it is a HUGE win.<br/>
I have close to no hope about the next step, seeing that people we&rsquo;re competing against teams built augmented reality but at least, we got this done and I&rsquo;m happy about it.</p></li>
</ul>


<h2>Languages</h2>

<p>So, with this hackathon, one of the things I realized was that&hellip; I almost don&rsquo;t care about languages anymore. We did not know C, I still don&rsquo;t know it, but I coded in this language, refactored, and will keep on doing it, after a 2 days stretch.</p>

<p>People tend to think that languages are REALLY different and that if you know one, learning another is going to be a real pain&hellip; Well, guess what, it is not!</p>

<p>If I had to picture it I would say:<br/>
Ok, you are mandated to compile data about a city, as much as you could. You would do it, it would take a lot of time to figure out what data to get, where to get it, how to compile it, etc&hellip;<br/>
Then when you&rsquo;re done, you&rsquo;re asked to do that with the next town. You don&rsquo;t have to learn how to compile it, what data to get is still a bit tricky, and you are having less trouble with where to get it.<br/>
Now they give you a new one to do. You know where to go, you will probably have a list of pieces of data you want to look for, because you got used to it, and things are most likely kind of where they were in the other towns, right?</p>

<p>Well, learning coding languages is pretty much the same.
The first one is painful and you have no clue what you&rsquo;re doing. And the next one may be the furthest &ldquo;city in the country&rdquo;, to take that example again, but you know a bit about what to look for, where to go, what to get. And the more you do it, the more you realize that it&rsquo;s actually pretty easy!</p>

<p>That was probably a bad example but I hope you got it ;)</p>

<p>Now, I do feel comfortable in Java, still, Ruby, Rails, Javascript, Python, and am getting used to some C. How cool is that!!</p>

<h2>Job searching again</h2>

<p>Well, I don&rsquo;t have a job. I find it funny that big company do not really care much about you unless they can see either a huge professional experience, or a very good school degree&hellip;<br/>
And the small companies do value the stuff you build, but then they don&rsquo;t have the resources to hire many foreigners.</p>

<p>In a way, I do understand all of them&hellip; But then, I am exactly the one stat slips through the cracks of that system. And now, I am looking for companies that would actually look at me, but then could also hire me&hellip;</p>

<p>That, people, is hard.</p>

<p>So far, nothing really interesting happened on that&hellip; I hope I can end up getting some info before I have to go back, at least on what I can join, when, and what I would need to do to be sure to be hirable.</p>

<p>I am not afraid of going back, or that I might not get anything. But sometimes, you just want to be told something. You want to be told you&rsquo;re going the right way, or the wrong way.<br/>
You will eventually find out, but if you could find out before&hellip; things would be much easier.</p>

<p>Anyway, back to job searching, while trying to do fun stuff with code&hellip; See you guys next week! (or maybe earlier if I find things to talk about&hellip;)</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[One week later - I'm Back, Job Hunting & back to work]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/04/09/one-week-later-im-back/"/>
    
    <updated>2014-04-09T23:34:29+02:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/04/09/one-week-later-im-back</id>
    
    <content type="html"><![CDATA[<h2>I&rsquo;m back</h2>

<p>Hey everybody, I am back!</p>

<p>I&rsquo;m sorry for not giving news, the end of DBC program was &hellip; strange. You spend 9 weeks averaging on 85 hours a week in Dev Bootcamp, coding, and when it stops and the building is closed (we moved that same weekend), your life feels&hellip; empty.</p>

<p>So on the next day, for the weekend, I slept, ate, and slept again. Then I coded a bit, refactored some old things, cleaned readmes and tests, and that was it. I think I can safely say  that it was at least in the top 5 of my most unproductive weekends ever. But then, maybe it&rsquo;s just the contrast with the 9 others before that&hellip;</p>

<p>After that, on that tuesday evening, Thuy arrived, with her sister and her sister&rsquo;s boyfriend. I could spend hours, or even days describing the next week, but let me try to sum it up :</p>

<p>We walked all around San Francisco, did a lot of touristy things in the city, biked on the golden gate bridge, went to <a href="http://oaklandartmurmur.org/">Oakland Murmur</a>, and a thousand times to the piers. All in all, it was a hard week (13 miles walks everyday&hellip;) but a very fun and interesting one. I discovered the city and feel much better about it now, I spent all of my time with my wonderful fiancee, I showed her everything she wanted to see, and some things that I wanted to show her, showed her DBC and the people&hellip; Perfect!</p>

<p>Plus, I now have a crazy tan, like I spent the week in Hawaii haha.</p>

<h2>Job Hunting</h2>

<p>Now I&rsquo;m back to job hunting. Once you get out, your next target is a corresponding job!</p>

<p>I&rsquo;m looking for a company that would allow me to learn and show the world what I can do, like I keep on saying in that blog. Discovering is my thing, and writing meaningful code is its little brother!</p>

<p>My plan right now is to join as many meetups as I can to be able to show what I can do, to work on interesting personal projects that can help in that goal too, and try and contact the people I can find who can help me with that.</p>

<p>I would rather stay in SF, or in the US, but I moved, and I&rsquo;ll move if need be!</p>

<p>In case you are interested or know somebody who could be, here is</p>

<ul>
<li>my linked in :
<a href="http://www.linkedin.com/in/quentindevauchelle">http://www.linkedin.com/in/quentindevauchelle</a></li>
<li>my github :
<a href="https://github.com/Qt-dev">https://github.com/Qt-dev</a></li>
</ul>


<h2>Back to work</h2>

<p>I now HAVE to code, it&rsquo;s in my blood! ;)</p>

<p>So, I took that need for proof of my skills for a good enough excuse to go back on the projects I had not had time for before.</p>

<p>So I started working on:</p>

<ul>
<li>the Js version of my android app : <a href="https://github.com/Qt-dev/craftmeapass-web">Github</a>,</li>
<li>I refactored and cleaned our gem : <a href="https://github.com/Qt-dev/cool-faker">Github</a> / <a href="http://rubygems.org/gems/cool_faker">Rubygems</a>,</li>
<li>I started working on a scheduler for Thuy and her airport schedule : <a href="https://github.com/Qt-dev/scheduler">Github</a></li>
</ul>


<p>If you have ideas about projects I could join, just send a mail to quentin@devauchelle.eu, I&rsquo;ll be happy to work on them!</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Week 9 - Day 5 - The end...?]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/03/29/week-9-day-5-the-end-dot-dot-dot/"/>
    
    <updated>2014-03-29T21:40:25+01:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/03/29/week-9-day-5-the-end-dot-dot-dot</id>
    
    <content type="html"><![CDATA[<p>So, yesterday, I graduated. I now have my very own dog tags with my name on it. I am &ldquo;officially&rdquo; a web developer. I will try to not spoil it too much for the people still in the program, but I do have to talk about this day.</p>

<p>If I had to sum that day up in one word, I&#8217;ld say : &lsquo;Tears&rsquo;.</p>

<p>The day started with the usual friday group checkins. What came out of that were that other cohorts were excited for everything new (every cohort is getting to the next phase on monday, DBC is moving, a new cohort is coming too&hellip;), and unhappy about us moving out. But then, like we told them again and again, we are not going anywhere.</p>

<p>After that, we presented our projects. A lot of clapping, a lot of laughing, and being impressed by every one of them. Also, for some reason, Rao discovered that I existed that very day, apparently. He asked me what was that necklace that I am wearing&hellip; But then I have been wearing that every single day for 3 years now&hellip; But that&rsquo;s fine, I still love him !</p>

<p>Then, we came back to coding&hellip; psych, we did not write a single line that day. We ate these things DBC had ordered for us (COOKIES!), and then I took a huge nap.</p>

<p>I got waken up when Steven, one of our teachers, was about to speak about a nice life lesson he got some time ago. I won&rsquo;t tell you the whole story but I will just sum it up with :<br/>
The day you start resenting everything about where you are, what you do, what you life looks like&hellip; Take a step back. Cash in on some money you have, and get out. Physically, mentally, it does not matter, just get out. I think this is a great advice that sometimes people just don&rsquo;t follow. I got stuck in France and ended up needing friends and family to pull me out because I had not plan any kind of exit strategy&hellip; Don&rsquo;t be me!</p>

<p>After that, we went to the park, and without telling you much about it, let&rsquo;s just say we had the chance to say what we thought about people. And I just wanted to say, from the bottom of my heart, that I hate you, banana slugs, so much for the amount of tears you made me cry! ;)</p>

<p>Let me give you a quick example of things I heard :</p>

<ul>
<li>&ldquo;Quentin, if I explained how much I like you in a sentence right now&hellip; That would mean I have not spent the 9 last weeks with you and did not know you.&rdquo;</li>
<li>&ldquo;Thanks to you, becoming a better person seems so easy&hellip;&rdquo;</li>
<li>&ldquo;I love your scarf&rdquo;</li>
</ul>


<p>There were plenty of others, these are just the 3 ones that came to my mind right now, you probably get the tone anyway.</p>

<p>After that, we went back, and graduated. We were welcomed with that High-Five tunnel that greeted us the very first day, then they gave us our dog tags,&hellip; and we partied until 2 in the morning!</p>

<p>I spent almost all of my night trying to tell people how much I love them and how grateful I am that I met them. These 9 weeks were such an adventure&hellip;</p>

<h2>The end&hellip; ?</h2>

<p>Now, I am out, but what I feel is that the training ended, now it&rsquo;s time for the big game. I am never leaving these people, I will haunt them forever, at least just to thank them for how good they made me feel.</p>

<p>And if I end up making them happy one day in their lives, I will consider myself happy. And to all the DBC Staff, all the alumnus, all the current students, my cohort and the others, I am talking about all of you. You are SO going to regret making me feel that good ;)</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Week 9 - Day 4 - Presentation, giving thanks, and D-4]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/03/28/week-9-day-4-presentation/"/>
    
    <updated>2014-03-28T08:02:46+01:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/03/28/week-9-day-4-presentation</id>
    
    <content type="html"><![CDATA[<h2>Presentation</h2>

<p>Tomorrow is the big day. I am writing this in advance to make sure I have time to do it before tomorrow ends, because I know that it is going to be crazy.</p>

<p>Tomorrow is my last day as a boot in Dev Bootcamp. After our usual friday group check-ins, our team will present our final project, then talk about the next week and job searching, and spend the rest of the day pretty much partying&hellip;</p>

<p>So, today, to prepare, we worked on the presentation. I was hesitating, wondering if I could speak about refactoring (I did a bit of that&hellip; I had a 5 hours streak on it, with 28 commits in the pull request at the end&hellip;), but I don&rsquo;t think it is as interesting as the other things to talk about. At some points, we have to make choices, right?</p>

<p>I will be talking about the javascript part of that app. Basically, since I worked a lot on the connection between pages in javascript, I will be explaining how I built the whole engine. Also, I will try to push the fact that everything is done with very simple methods, clear and readable (still available on <a href="https://github.com/banana-slugs-2014/GlucoseAmigo">github</a>).</p>

<p>When you work with a team on a very tight schedule (= all the time) you have to have concise code. You will never go back and edit/refactor the part you did not have time to write correctly today, and if you think otherwise, you are wrong!</p>

<h2>Giving thanks</h2>

<p>I always had the feeling that people don&rsquo;t get the praises they deserve.</p>

<p>Everywhere you go, no matter what you do, people will see the bad sides. If they see the good parts, then they will just not give it enough importance to praise as much as they would complain if they were bad&hellip;</p>

<p>When I got accepted for DBC, I thought I needed to work on it, in my own tiny world. After all, one of the idioms I try and follow is &ldquo;Be the change you want to see in the world&rdquo; &ndash; Gandhi.</p>

<p>So, back in France, I ended up finding old teacher that taught me how to do some things that people called useless, just to tell them how useful they were to me. I went to talk to everybody about what they were doing good&hellip;</p>

<p>I like to think that if I am in a very good place, I have the power to have a word that matters to most. If I don&rsquo;t use it, I am doing something wrong.</p>

<p>So today, I went to Steven, one of our teachers, to tell him about how inspiring he is to me. My words were, more or less : &ldquo;Before I came here, I ended up doubting myself, thinking that I was taking the wrong path, that I should not be all that &lsquo;crazy&rsquo; and start getting into the norm. But coming here, I realized a lot of people are like me. And I feel like he tends to be crazy a bit like I could be, and thanks to that, no matter where I go after that, I will forever know that there are people just like me, in a place somewhere, that they are doing great, and inspiring billions of people. So thank you.&rdquo;</p>

<p>I then ended up speaking with Shereef, the creator of Dev Bootcamp, and having more or less the same words. Also, I had a meeting with Sefora, a DBC staff member that works for the mental well being of the boots, and was very grateful that I met her. I am looking forward to having more conversations with all of these awesome people&hellip; I have so much to learn!</p>

<h2>D-4</h2>

<p>Today was the day we talk and meet people. In that same idea, I found out that I may end up introducing Thuy to new people everyday of her stay in here.</p>

<p>Teachers and DBC staff are on the list, alumni too, and then even current boots!</p>

<p>I know that there are some nice places and events that happen usually the first week of the month in SF apparently (I just discovered that), and so I will probably end up in all these things, with all these people.</p>

<p>I can say without much doubt that it will be an awesome week and I can&rsquo;t wait!</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Week 9 - Day 3 - The glucose amigos, personnalities,  and D-5]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/03/27/week-9-day-3-personnalities/"/>
    
    <updated>2014-03-27T07:23:53+01:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/03/27/week-9-day-3-personnalities</id>
    
    <content type="html"><![CDATA[<h2>The Glucose Amigos</h2>

<p>What an awesome name, that our captain found us! And here is the site : <a href="http://glucose-amigo.herokuapp.com">Glucose Amigo</a></p>

<p>So, we pretty much finished the app. This, guys, is what we can do in one week, with 4-5 of us, after 9 weeks of hard work. We came all with different experiences, behaviors, point of views, and in the end&hellip; We build a full app in one week.</p>

<p>I wish I would have more time to spend on the testing (I did most of the Javascript, there are 2 test, one on the login one on the logout&hellip;), but after that week of working with that awesome team, what I want to say is : Thank you DBC, thank you team, and thank you captain!</p>

<p>Working with all these awesome people is incredible!</p>

<p>If you want to know more about the app (and not read the &ldquo;help&rdquo; in the menu), the idea is that we made an app that keeps track of one or multiple diabetics&rsquo;s blood sugar level and weight, gives you a graph and a list of records, sends it per mail to your doctor, and can remind you to measure, and log the measures.</p>

<h2>Personalities</h2>

<p>In these 9 weeks, I saw a lot of different personalities. For example, among the people I paired with, I found 2 different types of people:</p>

<ul>
<li>People who want everything to be done, at the cost of understanding everything, but will not hesitate in going back at it to learn more about what they did not understood the first time</li>
<li>People who take the time to discover and learn everything even if it ends up taking them more than twice the time everybody else takes.</li>
</ul>


<p>I paired with both, and &hellip; strangely enough, no conflict emerged from it! I think I am a bit more of the second, but in the days I was working with somebody from the other group, I would just work his/her way, or use my &ldquo;reputation&rdquo; to try and teach the other person, go over what I did not see fully before, and go deeper.</p>

<p>In the end, I think I got most of what I could get from DBC, and mostly, I got the one lesson everybody should take : You don&rsquo;t know anything. Thinking you do is dangerous, don&rsquo;t do that.</p>

<p>Some people may think that this is just a fancy way to say that when you actually know what you&rsquo;re talking about (For real, I have already been told), but honestly, it is 100% of the truth. The difference between a confident person and and a stressed out one is quite often the fact that the confident already knows he has no idea what he&rsquo;s doing, but knows how to figure things out, learn, and maybe next time not have to spend too much time on it.</p>

<p>Also, we had to work on a personality test for our career week at DBC. My results&hellip; : <a href="http://www.16personalities.com/entj-personality">You are an ENTJ</a>.</p>

<p>If I have to sum it up, I would say I am a confident and convincing leader who need people to survive and who sometimes end up relying too much on emotions. I don&rsquo;t know if it is true, but I like the description, so that&rsquo;s a start!</p>

<h2>D-5</h2>

<p>So, 5 days huh&hellip;</p>

<p>I learn a lot of new things around, about SF, about the city and everything around it, just to make sure I can be the perfect guide for Thuy. I have found cookies places that will blow her mind, and I think I found some great example of SF food that would make her love the place.</p>

<p>In the time I&rsquo;ve been here, I have not had any time to discover anything, but even in that small 10 blocks area that I lived in, I still found restaurants that have nothing to do with what we have in Paris, kinds of food we never ate, and better versions of things we found elsewhere (Of course, I did not find better bread, but that is another topic&hellip;)</p>

<p>I could say I have not seen the sea, Alcatraz, the bridges, or many other things, but the thing that I feel like I want to discover the most is &hellip; SF food and drinks! Maybe that is her influence, who knows&hellip;</p>

<p>Anyway, in the end, I just want to say thank you to SF in a whole. Your food rocks so hard I became addicted and I can&rsquo;t wait to get her hooked on that too ;)</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Week 9 - Day 1,2 - Ajax everything, pressure, D-6 and an end before a new beginning]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/03/26/week-9-day-1/"/>
    
    <updated>2014-03-26T22:25:17+01:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/03/26/week-9-day-1</id>
    
    <content type="html"><![CDATA[<p>First of all, I&rsquo;ll start by saying I am sorry I did not write before. I have been&hellip;overwhelmed by a few things I will try to sum up in this article, and just ended up having no time anyway.</p>

<h2>Ajax Everything</h2>

<p>So, our app is going great! You can see its evolution on : <a href="https://github.com/banana-slugs-2014/GlucoseAmigo">Github</a>. In all that, one of the biggest thing I played with on this app is the javascript. If you look in /app/assets/javascripts, you&rsquo;ll see what I&rsquo;m talking about.</p>

<p>The idea is that we ended up developing everything separately (doctors, diabetics, records, etc&hellip;) and I ended up in charge of connecting it altogether in Javascript. To do so, I play with two types of routes in the app :</p>

<p>1 &ndash; Routes that render JSON :
Basically, I render a JSON object with 3 parameters :</p>

<ul>
<li>ok :  true or false, tells the javascript if the operation succeeded or not</li>
<li>path : The address of the next page</li>
<li>alert : The eventual problems or info messages.</li>
</ul>


<p>2 &ndash; Routes that render partials :
These render a small baby-html page with some javascript code to populate the javascript templates when it loads.</p>

<p>The idea is that every action and button is plugged on an action on the controller that calls a route that render JSON. If it returns ok:true, then I take the path, ask for the partial from it in javascript, and render it in the middle of the page, populating javascript templates on the go. If not, I print the alerts for 5 seconds and don&rsquo;t move.</p>

<p>I had fun doing that and even though it needs a lot of refactoring right now, I hope you can see that and enjoy reading it as much as I did writing it.</p>

<h2>Pressure</h2>

<p>Sometimes, you get stuck in a strange loop. I just &hellip; had that exact thing.</p>

<p>I put a lot of pressure on me, to make sure I can make my way out of the life I had in France. Because of that, I end up sleeping less. But then if I sleep less, I think about that more, and sleep even less&hellip; * infinite loop *.</p>

<p>At some point, it breaks, and so it did. I ended up completely exhausted last thursday/friday, with a lot of things on my mind. I have to impress people to make sure I can move. But then I also know that I fought my way through to Dev Bootcamp, I worked hard IN Dev Bootcamp, I WILL make it happen no matter what. But it was not that clear at that time.</p>

<p>I gave this analogy to the people who ended up listening :<br/>
Picture a black NBA player that comes from a bad neighborhood.
He struggled to get food when he was a kid. He struggled against racism his whole life. He fought the system in school, every step of the way.<br/>
Now, he is fighting to get in the playoff and to be the MVP of every match he plays.</p>

<p>Well, if today, you were to tell him to go back to struggling to get food, he would be disappointed, probably angry, but he made it once and you can be sure he&rsquo;ll make it twice.</p>

<p>This is the kind of idea I have about going back to France. I don&rsquo;t mind struggling to find a better job, to make the world a better place, to make the difference against much more intelligent people. But what I would not like would be to have to go back to struggling for minimum wages with a 2 hours commute every morning every evening, and only 6 hours of seeing my fiance every week. I fought my way through, and I would rather not get back to that.<br/>
But then if I have to&hellip; I will.</p>

<p>The only thing I know now, is that I am a new person, and you can be sure that I will fight as much as I can to get my fiance, my sister, and the people I loved to the comfortable places that they deserve, and the world a better place, one step at a time.</p>

<h2>D-6</h2>

<p>She&rsquo;s coming!!!</p>

<p><strong>She&rsquo;s coming!!!</strong></p>

<p>My fiance, Thuy, the wonderful woman that actually chose to stick with me for 6 years now (I know, people are crazy&hellip;) is coming to San Francisco! I finally have the chance to get her into that world, show her what&rsquo;s happening, introduce her to the wonderful people I met&hellip;</p>

<p>And make her taste the great foods I found!</p>

<p>She still thinks that in the 7 days she get in here, she will end up getting a burger at burger king&hellip; Come on, people from here, let&rsquo;s laugh about it together ;)</p>

<p>She will be coming on next tuesday and I don&rsquo;t know how much I will be blogging at that point, but right now&hellip; It&rsquo;s D-6!</p>

<h2>An end before a new beginning</h2>

<p>Dev Bootcamp is coming to an end!</p>

<p>We are on our way to finish our last projects, we had fun, learned a lot, and met really cool people (looking at you, Chris! Haha). But this is now coming to an end.</p>

<p>However, I don&rsquo;t take it as an end but more like a beginning. I am a new self. I am a new this (got this, fellow developers?). I am a new person that now has the rest of his life to profit from this extraordinary experience.</p>

<p>I see that as the beginning of a new life that I will start, happily, with my fiance, or wife, we&rsquo;ll not stay like that for too long I hope. Not completely unlinked from the old life, but as a continuity, I see the before-graduation period as a preparatory stage for what is coming.</p>

<p>Now, things are different, it is a new life, and I intend to be very good at it!</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Week 8 - Day 4 - Group project, more pressure, and sleep depravation]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/03/21/week-8-day-4-group-project/"/>
    
    <updated>2014-03-21T20:46:54+01:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/03/21/week-8-day-4-group-project</id>
    
    <content type="html"><![CDATA[<h2>Group Project</h2>

<p>The big even of yesterday was: The final projects pitching.</p>

<p>Almost everybody pitched. You had good projects, strange projects, fun projects, good things!</p>

<p>The one I pitched was about Role Playing Games. The idea is that I really enjoy pen and paper role playing games, but I also can&rsquo;t play them most of the time. My friends are all around the world, and I don&rsquo;t spend my time with my character sheets, dice, and/or books in my pocket.</p>

<p>So to counter that, I wanted to make an app that makes the link between players and game masters, and give you these commands that will give you all the infos you have in these books, all the character sheets, and the dice rolling, just by sending a mail with different commands.</p>

<p>In the end, I was not picked as one of the projects we would work on, but then among the 5 projects, 3 were projects that I really want to work on!</p>

<p>So in the end, I am in Armando&rsquo;s team, and we are about to make a great app for diabetics to track their blood sugar stats and format them decently to transmit them to a doctor. I find it awesome and in a way, I am glad I was not picked!</p>

<h2>More pressure</h2>

<p>I put a lot of pressure on myself. Most of the time, I will not seem very stressed out, but inside, I may just be completely freaking out.</p>

<p>The idea is that I overthink everything. Being logical enough, I overthink without putting too much emotions and feeling in these thoughts. I see something, try to find all the outcomes (I will never succeed, but well&hellip;), try to think about the causes and consequences, study everybody&rsquo;s point of view&hellip;</p>

<p>In the end, I like to think that it makes me calm and not stress out much on the outside.</p>

<p>Lately, the fact that I am coming to a situation that had a bad outcome the last time(the same situation I came to when I came back from korea), made me think about a lot of things, basically ways to prevent myself from falling in the same trap again. That just made me sleep less&hellip; which actually made me think more&hellip; And I fell into this strange loop that ended with me being exhausted, and giving too much credit to emotions and feelings.</p>

<h2>Sleep depravation</h2>

<p>The lack of sleep I am talking about is mainly due to a non restful sleep. A sleep where you keep on waking up, thinking about bad things, etc&hellip;</p>

<p>This lack of sleep makes you take bad paths, the wrong paths, basically. In the end, I am now sleep depraved, and even though I worked on that pressure, and talking about it was enough to relieve a lot of pain on that topic, sleeping 6h does not make you really rested, especially if you&rsquo;ve been running on 5s for weeks&hellip;</p>

<p>But then, I am a logical person. I am also a person who does fall deep into these pressure cycles, but overcomes that. I did that before, a lot of time, and approaching things logically just ends up making me overcome whatever emotional challenge I have had so far.</p>

<p>So I work on my sleep, on my well being, and I am now much better than yesterday. Soon, I will be even better, and be sure that at the same time next week, our team will be kicking asses, and I will not be dragging them down!</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Week 8 - Day 3 - Clean Javascript, final project, and leadership]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/03/20/week-8-day-3-clean-javascript/"/>
    
    <updated>2014-03-20T08:06:00+01:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/03/20/week-8-day-3-clean-javascript</id>
    
    <content type="html"><![CDATA[<h2>Clean Javascript</h2>

<p>I will never say that enough, but if you code in Javascript and don&rsquo;t make it object oriented, you&rsquo;re missing something.</p>

<p>Yesterday, I paired with Johnny on a full frontend page. The idea is that we had a rails server with built-in routes, and we had to make the whole Javascript app that did everything with these routes, all in one page</p>

<p>In the end, we built a huge machine, all in Javascript, pure javascript (We did use some JQuery here and there, but the rest was all in javascript). That was fun, we played a lot, and we still finished what was expected of us for the whole day at 3PM.</p>

<p>In the end, we both learned a lot, had a lot of fun, and made a huge thing.</p>

<p>And the Javascript was&hellip; CLEAN! Object oriented, module pattern, fun stuff! No soup, no 100+ lines scripts&hellip;</p>

<h2>Final Project</h2>

<p>Tomorrow is the pitching day. I can feel the pressure, even though I do love it.</p>

<p>The idea is that we pitch an idea to the whole bootcamp. Then, people from our cohort vote for projects, and the teachers select 4 or 5 and we have to work on that until the very day.<br/>
The person who pitched the project will lead his/her 4-5 people group through that.</p>

<p>I am expecting a lot from that. I always loved to lead group (If you asked me when I was a kid I would have said that when I grow up, I want to be &hellip; a boss. The guy who make it so that things actually work, and that the whole team make it happen). Now, tomorrow is my chance to do that WITH code.</p>

<p>Plus, I have that strange feeling that tells me I don&rsquo;t have to show people some code, I have to IMPRESS people. Working on that group project, on one of my ideas, leading a group the right way, and coding my way through that, I think I can make that happen.</p>

<p>I will tell you more about it when that is over but&hellip; I feel like things are going to get crazy pretty fast&hellip; I can&rsquo;t wait!</p>

<h2>Leadership</h2>

<p>Leadership is something I like. It is something I always liked. Apparently, lastly, people like my leadership too, which gives me more opportunity to train that!</p>

<p>In the end, I always worked on that, always loved that, and not because I am a power hungry bearded dude, but because I want things to go well. When I am in a team, I love to be able to guide any part of the project in the right direction, to ensure a great realization. But then, there are things you can&rsquo;t change. Most of the time, you can&rsquo;t change the leader for instance. And if things are not working correctly, I would say it is his/her responsibility! So to fight that, I always wanted to lead, and be able to change whatever needed to be changed, even myself.</p>

<p>Today, I had a fun conversation with David of Phase 1 and Stephen. The topic was : Games and Leadership.</p>

<p>I loved to have feedback on the feeling I give to people around, to hear about the ideas David and Stephen had, and to share everybody&rsquo;s experience.</p>

<p>These people are just &hellip; AWESOME!</p>

<p>I will tell you more about it whenever I can but for now&hellip; It&rsquo;s time to sleep for a good pitching day!</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Week 8 - Day 2 - JQuery, superego, and cookies]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/03/19/week-8-day-2-jquery/"/>
    
    <updated>2014-03-19T17:04:15+01:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/03/19/week-8-day-2-jquery</id>
    
    <content type="html"><![CDATA[<h2>JQuery</h2>

<p>Yesterday, I paired with Ivan. I like the fact that even if he had not been fully recommended for phase 2, he kicks ass in phase 3!</p>

<p>We build a new version of JQuery, just to make sure we understood things, we got in the mind of libraries makers, and we broke the idea of &ldquo;this is magic&rdquo; that everybody has. The idea is to not be a consumer of music, but more of an audiophile, or even a sound engineer if that is what we are looking for (Said by <a href="https://twitter.com/sgharms">Steven</a>).</p>

<p>And so we worked on that, made the whole part of the library we had to, with clean and tricky javascript.</p>

<p>In the end, I had a very good coding day. At 6, we had finished the program, understood what we had to take from it, and had a clean refactored code. All in all, I can say we rocked ;)</p>

<h2>Superego</h2>

<p>Yesterday was also the new day where phase 1 learn about their superego. Just like every time a phase get in one, we get to witness that change in some mentalities, that feeling that make people talk more, share more of their experiences, knowing that things happened the same way for all of us.</p>

<p>In the end, some, mostly outspoken people, reacted with the experience being easy on them. When you don&rsquo;t hesitate in sharing and talking, sharing about your superego should not affect you that much, right?</p>

<p>Some others were more affected and ended up sharing more (Go David!).</p>

<p>Most of them though had already one week before that hard session. So in the end, it was &ldquo;less&rdquo; heavy on them.</p>

<p>But since that made people share a bit more, I love it ^.^</p>

<h2>Cookies</h2>

<p>I have a tremendous amount of cookies in my locker.</p>

<p>Coming here, I started eating a lot of cookies. I went to good bakeries, found ways to get more, etc.. to the point that nowadays, I am called &ldquo;Cookie Monster&rdquo;.</p>

<p>A few days ago, I went and get some at Subway. When it&rsquo;s 10€ for 12 in your country, but 5$ for 12 here&hellip; you don&rsquo;t hesitate much, do you?<br/>
But then I also got some cookies from &ldquo;Batter&rdquo;, a very good bakery down the street apparently.</p>

<p>So in my locker I have close to 30 huge cookies just waiting for me.</p>

<p>Then, a funny thing happened. 2 days ago, I paired with Chris. We finished in a decent amount of time, and while he was &ldquo;expected&rdquo; to get home around 10PM, he actually came home around 7.</p>

<p>So his girlfriend ended up saying:  &ldquo;How come?&#8221;<br/>
And the answer she got was apparently : &#8220;Quentin&rdquo;&hellip;</p>

<p>After that, she just suggested she would bake cookies to thank me&hellip;</p>

<p>So&hellip; I am getting more cookies! Thuy is gonna be so proud ;)</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Week 8 - Day 1 - Making pages fast, group projects, and teaching]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/03/18/week-8-day-1-making-pages-fast/"/>
    
    <updated>2014-03-18T17:04:15+01:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/03/18/week-8-day-1-making-pages-fast</id>
    
    <content type="html"><![CDATA[<h2>Making pages fast</h2>

<p>Yesterday, we had a fun day about optimisation. The idea is that we had pages that were loading in 20 seconds or more, and we had to find ways to fasten them.</p>

<p>What we got from that is, among others :</p>

<ul>
<li>Use SQL requests to order, group, etc&hellip;  It is MUCH faster than getting everything from the database and sorting it in ruby or JS</li>
<li>JS allows you to act as if you loaded everything even if you did not, USE THAT. Play with ajax, load only the titles, and when somebody clicks on a button, you load the rest!</li>
</ul>


<p>At the end, all the pages were loading under 200 ms. Next part is destroying these pages to make useful ones instead haha.</p>

<h2>Group projects</h2>

<p>We just finished the weekend group project with Armando, Hunter, Chermaine, and Matthew. It was really a bread group, a great dynamic. We were very laid back, no stress or anything. We did finish what we wanted and even more, everything works, and we had clear, maintainable, and tested code.</p>

<p>Now with that being said, we have the final group projects coming on Thursday. People have been talking about it fo a bit now, sharing ideas that people are gonna pitch, checking them out&hellip;</p>

<p>I know I have a few ideas on my own, and I am interested in pitching them and then leading a group with that. I will not talk about them now, especially since they&rsquo;re not that clear in my mind even now, but don&rsquo;t worry&hellip; It&rsquo;s coming ;)</p>

<h2>Teaching</h2>

<p>Yesterday, I ate with fiery skippers. I find it really amazing that people are so different from the cohorts we could see so far. They are a huge group of very knowledge hungry people.</p>

<p>During the weekend, I also spent a lot of time with them, trying to push them in the right direction to solve Sudoku, the challenge people complete in the first week.</p>

<p>I also spent a bit of time with phase 2 Golden Bears, trying to share what I know.</p>

<p>And yesterday, I spent an hour with Armando showing him a way to complete some Javascript exercise without feeling lost about being in a language he is not used to.
In the end, I just showed him how to solve the problem in Ruby, a language he feels more comfortable in, and how to translate it to Javascript.</p>

<p>I loved teaching in Korea, and before that. I like to share my knowledge (which, if you follow the famous french saying, means that I have very little knowledge myself). And now I see that even here, I love doing that.</p>

<p>I love trying to explain things to people actually listening, and using what you are showing them.</p>

<p>I think that after DBC, I will try to be a coach. I think I can be a decent help, and have a lot of fun doing it!</p>

<p>Anyway, that is for in 2 weeks, which in DBC time means something like 2 or 3 months ^.^</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Week 7 - Day 5 - A nice day]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/03/15/week-7-day-5-a-nice-day/"/>
    
    <updated>2014-03-15T22:10:25+01:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/03/15/week-7-day-5-a-nice-day</id>
    
    <content type="html"><![CDATA[<p>So, yesterday was a nice day. I wish I had a lot to say about it, but the idea is that I rested, I pair with the awesome Matthew, I ate well, I finished what I wanted, no pressure, nice weather, everything.</p>

<p>It&rsquo;s sad that I don&rsquo;t have much to say about it, but that&rsquo;s cool ^.^</p>

<p>See you guys on monday!</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Week 7 - Day 4 - Todos, group project, and effects of DBC']]></title>
    <link href="http://Qt-dev.github.io/blog/2014/03/14/week-7-day-4-todos/"/>
    
    <updated>2014-03-14T16:52:10+01:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/03/14/week-7-day-4-todos</id>
    
    <content type="html"><![CDATA[<h2>Todos</h2>

<p>So, in DBC, we made Todos. When I say that, I mean, we learned how to make a todo app jn Ruby, with the command line. Then we learned how to make a new one that saves and read things in a file. After that we got in phase 2 and made a simple Sinatra Todo app. Then we made one that used Javascript, and now we&rsquo;re 4 days into phase 3, and we already made 2 todo apps.</p>

<p>I feel like there is a common theme somewhere&hellip; Are DBC teachers trying to tell us something?</p>

<p>I do not tend to use todo apps myself nowadays but I now know how to make it however I want. I also know how to manage my time, or&hellip;  know how to not manage my time actually.</p>

<p>As for code, I know that using that same theme to learn new things help a lot, and I feel like I can learn what I want to learn by simply making a todo with it and comparing with what I know.</p>

<p>And since I intend to learn much more&hellip; I end up with many todos apps eon my todo list&hellip;</p>

<h2>Group Project</h2>

<p>We got a small group project again, in Rails. Things are much easier, Rails does everything, people are confident, and we can now play with these interesting things, at our own pace, without stressing out!</p>

<p>This week we have to make a &ldquo;Stack Overflow&rdquo;-like app. Basically, answer questions, select the best answer, and comment questions or answers. Also, they can vote for a question or an answer, and the site makes the selection after that.</p>

<p>I am not even sure what to say about that, but it is what we&rsquo;re doing.</p>

<p>We&rsquo;re having fun, and have an awesome group again, I guess I&rsquo;ll have something to show on monday, but even if I don&rsquo;t&hellip; No biggie!</p>

<h2>Effects of DBC</h2>

<p>Yesterday, I did something that triggered <a href="http://mknudsen01.tumblr.com">Matthew</a>. Basically, without getting too deep into that, I made him feel like he was left out for a moment, search for a reason why I would do so, and end up on some pretty bad, sad, and mean reasons.</p>

<p>But then, magic happened.</p>

<p>When I came back to work with him, before we started, we had a conversation that kinda went like this :</p>

<p>&ldquo;Before we start, do you mind if we talk for a second?<br/>
&ndash; Yeah sure, no problem, what&rsquo;s up?&rdquo;</p>

<p>And then, he ended up sharing what exactly happened, what he felt, what he saw, and what he feels now. I shared how I felt about it, explained and confirmed what he saw, and apologized. And that was an argument that was solved in less than 2 minutes, without any fight or hard  feeling.</p>

<p>This is what DBC made. DBC made us understanding human beings. DBC made Matthew not freak out about what happened, try to check what was happening, and then reflect. DBC made me listen, put myself in his shoes and be understanding.</p>

<p>I had an experience like that with my fiancee, and it is quite strange to realize that what you have been learning, no matter how true it was in your current environment, is actually true outside of it.</p>

<p>The first time I started listening like we try to do it here, it actually worked flawlessly. I tried again, it worked again. It may not work 100% of the time, but I know that I will keep on doing that for a while!</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Week 7 - Day 3 - Test driven development, the new guys, and my first full project]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/03/13/week-7-day-3-testing-again/"/>
    
    <updated>2014-03-13T17:03:05+01:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/03/13/week-7-day-3-testing-again</id>
    
    <content type="html"><![CDATA[<h2>Test driven development</h2>

<p>After a few days of testing, we started the test driven development on Rails.</p>

<p>The idea of test driven development is to make tests before you type any code. Let me give you a small example :</p>

<ul>
<li>Situation : I want to give a user the possibility to create an account</li>
<li><p>I write tests, from the biggest to the smallest:</p>

<ul>
<li>Test 1 : Fake an user that clicks user creation, then fill in the fields with correct info and click on the create button. The user should be taken back to the first page, and now he can login with these infos. (Integration tests)</li>
<li>Test 2 : Fake a request on the creation page, it should be defined and give a form.(controller test)</li>
<li>Test 3 : Fake a request on the route it takes after you click on the &ldquo;Create&rdquo; button. It should add a new User to the Database (Controller test)</li>
<li>Test 4 : The DB should not accept info that is not correct, so you test if it adds something when you try and push random invalid info to the DB (Model Unit Test)</li>
</ul>
</li>
<li><p>Now I have that behavior, that I specified more and more, while writing the tests. Now, I can make the tests pass one by one. I start with Test 4, make these limits, then 3, 2, and finally 1.</p></li>
</ul>


<p>W00t? You have code that does exactly what you want, and that does not break! If you want to add code later, you just have to run the tests once this is finished, and make everything pass according to plan.</p>

<p>It tends to take a bit longer, but then you have a &ldquo;perfect code!&rdquo;. So do that!</p>

<h2>The new guys</h2>

<p>I spent a bit of time with the new cohort. They are awesome!</p>

<p>It is amazing to see that the tribe spirit is actually very different, once again. We had the &ldquo;University students&rdquo; Sea Lions, the &ldquo;Overachieving Kids&rdquo; Banana slugs, the &ldquo;Shy kids&rdquo; Golden bears, and now I think we have the &ldquo;Against-all-odds team&rdquo; fiery skippers.</p>

<p>Many of them don&rsquo;t come from computer science backgrounds, many are not the usual start-up 20-something american bearded dudes. But then, I am really impressed with the effort, and especially the team spirit they have. If one knows, one shares. Pairing is optional today? I heard : You can make bigger groups.</p>

<p>That is something I really resonate to, I just love it. They ask questions, try to know, show, learn, share, every verb I love ;)</p>

<p>I think I&rsquo;m gonna hang around a lot even after graduation, because I think these skippers are going to impress me big time!</p>

<p>And Golden bears are good too, but I just think that individuality and shyness makes it harder. I am expecting good things to come out of the final group projects of the Bears, but I feel like they will struggle more than the skippers.</p>

<h2>My first full project</h2>

<p>So, I finished my project. You can see it live on : <a href="http://movie-shootings-in-sf.herokuapp.com">Heroku</a>, and the code on <a href="https://github.com/Qt-dev/shootings">Github</a>.
You can also check some of my tests on <a href="http://movie-shootings-in-sf.herokuapp.com/jasmine">Jasmine</a>.</p>

<p>It shows you a list of movies that have been shot in San Francisco. You try typing a movie title, and it autocompletes the movie title. It then geocodes every location where it has been shot, from the address that I am given by <a href="http://sfdata.org">Sfdata</a>, and pins them on the map.</p>

<p>Then, I make small popups info windows for when you click on the pin, with the director, location, name, year, and a link to IMDB to find the movie.</p>

<p>It is not that impressive, but I f*cking did it! I took 2 days (Plus 2 slacking with only one commit&hellip; oops), and I learned about things I did not know about :</p>

<ul>
<li>Flask</li>
<li>Jasmine + Sinon</li>
<li>Backbone</li>
<li>Google Maps API</li>
<li>Google Geocoding</li>
</ul>


<p>And now I feel good about it!</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA['Week 7 - Day 2 - Testing, A video , and naps]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/03/12/week-7-day-2-testing/"/>
    
    <updated>2014-03-12T08:36:51+01:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/03/12/week-7-day-2-testing</id>
    
    <content type="html"><![CDATA[<h2>Testing</h2>

<p>Yesterday we tested. We tested Rails for the first time, and it was not that hard. Many things are built-in, and the presence of gems like : <a href="https://github.com/thoughtbot/shoulda-matchers">shoulda-matchers</a> ended up making that day even easier than expected.</p>

<p>The idea behind testing your code is that you don&rsquo;t want it to break later. Now that you are working on that 100 lines project, you don&rsquo;t feel the need to do so, but what about when it hits 10000 lines and the 10001 actually breaks something in the middle? And what if solving that bug actually creates new ones?</p>

<p>So, to prevent that&hellip; We test. We test that an user can create an account, that it is correctly saved. We test that an user can login, that our password verification does not send unencrypted passwords, that the posts we make are not duplicates, etc&hellip;</p>

<p>All that, in 3 big groups :</p>

<ul>
<li>Integration tests : Complicated to do (Use <a href="https://github.com/jnicklas/capybara">Capybara</a> for Ruby web frameworks like Sinatra or Rails), and very long to execute. The idea is that you make a program do exactly what an user would do, to make sure every step works</li>
<li>Controller tests : This is a bit &hellip; fuzzy. These are considered as integration tests, or unit tests, depending on the piece of code you&rsquo;re testing, but of specific actions of the &ldquo;controller&rdquo; in your app. For example, when a user sends data to /users/new it should create a new user. They are faster than integration test, but still not the fastest</li>
<li>Model (Unit) tests : The idea here is to test the basic data you have. You have one single piece of data, a User, a Post, a Category, and you want to test that its data is the one you want. You want to test that a User can&rsquo;t have an email without an @ for example.</li>
</ul>


<p>This, we did it in Ruby, with <a href="http://rspec.info">Rspec</a>, <a href="https://github.com/jnicklas/capybara">Capybara</a>, <a href="https://github.com/thoughtbot/shoulda-matchers">shoulda-matchers</a>, and some others. I then did that in Javascript with <a href="https://github.com/pivotal/jasmine">Jasmine</a> and <a href="sinonjs.org/">Sinon</a>, for a small part of the evening.  All in all, it was a nice day, and now nothing breaks anymore ;)</p>

<h2>A video</h2>

<p>A tradition here in Dev Bootcamp says that people who are graduating from phase 2 need to prepare a video for the newcomers of the next monday. The video shows a bit about the bootcamp, the spirit, and the people that you can meet there&hellip; So without further introduction, ours :</p>

<iframe width="560" height="315" src="http://Qt-dev.github.io//www.youtube.com/embed/AabGP9yvJ7o" frameborder="0" allowfullscreen></iframe>


<h2>Naps</h2>

<p>Nowadays, I am a bit tired. I had no idea that we had to change the clocks on sunday, and discovered that after a very short night&hellip; Unfortunately, I was busy so I ended up doing a lot of things and not sleeping enough.</p>

<p>I am working on that, but since Monday, I am napping every afternoon now!<br/>
I hope I can make that be less of a habit soon&hellip; So I&rsquo;ll go to sleep now ;)</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Week 7 - Phase 3, projects, and another first day in DBC]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/03/11/week-7-rails/"/>
    
    <updated>2014-03-11T17:26:44+01:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/03/11/week-7-rails</id>
    
    <content type="html"><![CDATA[<h2>Phase 3</h2>

<p>So, first, sorry for not giving any news for friday. If I had to sum friday up, it would probably go like : &ldquo;Partayyyyyyyyyyy&rdquo;.<br/>
Phase 3 was graduating and showing us projects they worked on. Phase 1 and 2 were moving on to the next phase, so everybody just &hellip; had fun&hellip; and a lot of alcohol. If I can find the links to the projects I&rsquo;ll let you know, but in short we had :</p>

<ul>
<li>A social app for street performers to share their videos and people to tip them,</li>
<li>An app that tracks your bad (but legal) substance abuse (coffee, alcohol, cigarette)</li>
<li>An app that helps you keep track of all the online courses you can take and all the ones you take.</li>
<li>An app that helps independent music teacher track everything about their business</li>
</ul>


<p>Yesterday we started phase 3 and we started working on Rails&hellip;  Basically, if I had to say anything about it, I would say : Take everything we did so far, and now stop doing it because everything is generated automatically in rails!</p>

<p>We&rsquo;ll have fun, and play with a few things for 8 days, then group projects. That sounds awesome and I can&rsquo;t wait ;)</p>

<h2>Projects</h2>

<p>So, group projects are approaching&hellip; I have ideas, and my #1 would be to join Chermaine and work on the project we thought about together. But then, I also want to pitch a lot of ideas so I guess I&rsquo;ll try and share the ideas and see how it goes! Not right now, but I will, I promise!</p>

<p>Then, on the weekend, I learned 4 things :<br/>
&ndash; How to use Flask (A Python equivalent of Sinatra)
&ndash; How to compress WebAssets (And not have 10000000 js files here and there, even though your code is full of clear small classes for example&hellip;)
&ndash; How to play with Backbone (A Javascript framework to make whole apps on the front-end)
&ndash; How to play with Google Maps (Put a map of the site and pin stuff to it, geocode stuff, etc&hellip;)</p>

<p>And with that, I ended up making an app. It is an app that shows you all the movie shooting locations in San Francisco, by movie. It is not perfect or finished (I expect it to be finished tonight) but so far you can see :<br/>
&ndash; The site : <a href="http://movie-shootings-in-sf.herokuapp.com/">http://movie-shootings-in-sf.herokuapp.com/</a>
&ndash; The code : <a href="https://github.com/Qt-dev/shootings">https://github.com/Qt-dev/shootings</a></p>

<p>Again, I&rsquo;ll tell you when it&rsquo;s over, but you can check it out for now!</p>

<h2>Another first day in DBC</h2>

<p>Yesterday, the new cohort started. It feels so strange to be in the seniors&hellip;</p>

<p>They seem pretty interesting and interested. I think they have a very different dynamic than the Golden bears, and again, very different than the Banana Slugs too. I can&rsquo;t wait until I get to know them and learn more about them!</p>

<p>No worries though, I still love the golden bears, and more than that, I love the banana bears!</p>

<p>Now, time to go back to eating cookies and coding.
See you tomorrow!</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Week 6 - Day 4 - Rest, personal projects, and DBC life]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/03/07/week-6-day-4-rest/"/>
    
    <updated>2014-03-07T17:48:04+01:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/03/07/week-6-day-4-rest</id>
    
    <content type="html"><![CDATA[<h2>Rest</h2>

<p>When I say rest, I don&rsquo;t mean sleeping all day&hellip; Yesterday, we had to finish some challenges that we had been given a few days before, had a couple of lectures, and then I worked on personal projects here and there. This is what I call rest.</p>

<p>In the end, that was a fruitful day, and a happy one too! I spoke with some people I had never met in the bootcamp, got some info on after-DBC, I learned stuff about languages and frameworks I did not know&hellip; AND, I congratulated my mother for her very happy birthday ;)</p>

<h2>Personal projects</h2>

<p>You can check my github for that. I have a few projects I had been dying to work on, and having some time to do so may make me finish a lot of them really fast!</p>

<p>I won&rsquo;t tell you all about them yet, but I can tell you I expect to have a lot of stuff to do and to use them as a way to show the world my progress!</p>

<p>In the end, these are the things that make you look different, and make the people want to hear about you, and why not even hire you!</p>

<h2>DBC Life</h2>

<p>RAO HAS NO BEARD ANYMORE!</p>

<p>Apart from that, DBC life is fun. It was a slow day, fun things, but then the results of the assessments also kicked in, people dealt with that, and that was a big day for everybody.</p>

<p>And in the end, if I had to keep one sentence from yesterday, I would say :
If you have a lesson to get from DBC, it should be &lsquo;You don&rsquo;t know anything, but that&rsquo;s ok&rsquo;.</p>

<p>No matter how much we learn here, when we get out, we&rsquo;re gonna be asked about what we don&rsquo;t. And we are not going to be asked to know stuff, but to show we can learn, and we don&rsquo;t freak out when we don&rsquo;t know.</p>

<p>So the lesson would be : Stop stressing out, and learn how to google ;)</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Week 6 - Day 3 - Oauth, Other languages/Frameworks, and a fun day with Armando]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/03/06/week-6-day-3-oauth/"/>
    
    <updated>2014-03-06T18:23:33+01:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/03/06/week-6-day-3-oauth</id>
    
    <content type="html"><![CDATA[<h2>Oauth</h2>

<p><a href="http://en.wikipedia.org/wiki/OAuth">Oauth</a> is a system used in authentification on the web nowadays.</p>

<p>The idea is that authenticating is easy, with password and username/email/name/whatever-id-you-want. But this is not secure enough. Plus, people get tired of logging on every site they use.</p>

<p>Oauth came out in 2010, when people were trying to remedy to that problem with different theories, <a href="http://en.wikipedia.org/wiki/OpenID">OpenID</a> being one of them.</p>

<p>So in the end, they came up with this way to identify an user on one site, and share that identification on every app authorized by this site and the user.</p>

<p>Let me try to explain the process a bit :</p>

<ul>
<li>The app maker registers on the giver&rsquo;s site (Twitter, Facebook, &hellip;)</li>
<li>The giver&rsquo;s site give the app maker a private <strong>API Token</strong>, a code that can be use to identify that app when it talks with the giver&rsquo;s site.</li>
</ul>


<p>&hellip;Time passes&hellip;</p>

<ul>
<li>An user comes on the site, tries to log in</li>
<li>The app redirects to the giver&rsquo;s site where the user is asked to log in. In the background, the app gives the <strong>API Token</strong> on the way, as a proof that the user is coming from there.</li>
<li>The user authorizes his account to be linked/identified on this app. The giver&rsquo;s saves that decision.</li>
<li>The giver&rsquo;s site sends back a <strong>User Token</strong> to the app.</li>
</ul>


<p>Now, the app has an <strong>API Token</strong> and a <strong>User Token</strong>.
Using these 2, the app can ask the giver&rsquo;s site for info (last tweets? send tweet?), and while this is true, the user is authenticated on the site.</p>

<p>In the end, the user only has to login once, and nobody has the user password or anything. And anytime somebody&rsquo;s info is asked for, the giver&rsquo;s site verifies that the asking app has the rights.</p>

<p>This, ladies and gentlemen, is what we played with yesterday ;)
This : <a href="http://blooming-reaches-2179.herokuapp.com">Tweet from Heroku</a> is an example ;)</p>

<h2>Other languages / Frameworks</h2>

<p>The world of development is full of a lot (really&hellip; a tremendous amount) of languages and frameworks. People don&rsquo;t use them the same way, in the same places, but I can tell you that to do one thing, you have multiple tools in development.</p>

<p>In DBC, we learn about Ruby, Javascript, HTML, and CSS, mostly. We cover a few framework for each of those too. But in the end, we are not here to learn languages.</p>

<p>No good developer knows one language by heart.<br/>
&hellip; Let me rephrase and split that that:</p>

<ul>
<li>A good developer does not know fully a language, knowing that is what makes him really good.</li>
<li>A good developer learns new languages/frameworks all the time. One does not &ldquo;know one&rdquo;, but learns many.</li>
</ul>


<p>I try to work on that and get the second part up and running, and that is really fun. Also, using tools made by and for other people is really eyes opening. I love it.</p>

<p>I had ideas about that yesterday and I&rsquo;m thinking I&rsquo;ll learn a bit more about the languages I already approached but did not use that much as soon as I have 5 minutes (probably this weekend).</p>

<h2>A fun day with Armando</h2>

<p>Yesterday, we paired with Armando again.<br/>
I was looking forward to it. He has been down for a bit, with a lack of self confidence and some doubts about his skills, and I was looking forward to doing my best to work on helping him with that.</p>

<p>Well, you know what? He f*cking rocks! We had fun the whole day, finished most of the challenges, and the best part :<br/>
Teachers did not try and assess him. And if they don&rsquo;t, that means that THEY don&rsquo;t doubt him. And one thing that I know :<br/>
If the person that&rsquo;s making it hard on you, teaching you, and taught hundreds before, has no doubt about you&hellip; that probably means you should stop doubting and assume you do (not really fully) know what you&rsquo;re doing.</p>
]]></content>
    
  </entry>
  
</feed>