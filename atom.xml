<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Qt's Home]]></title>
  <link href="http://Qt-dev.github.io/atom.xml" rel="self"/>
  <link href="http://Qt-dev.github.io/"/>
  <updated>2014-02-14T20:58:02-08:00</updated>
  <id>http://Qt-dev.github.io/</id>
  <author>
    <name><![CDATA[Quentin Devauchelle]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    
    <title type="html"><![CDATA[Making a new faker gem]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/02/14/making-a-new-faker/"/>
    
    <updated>2014-02-14T20:36:16-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/02/14/making-a-new-faker</id>
    
    <content type="html"><![CDATA[<p>Let&rsquo;s me sum some stuff up first before I start :</p>

<ul>
<li>Gem : A Gem is a &ldquo;library&rdquo;, a pack of code, in the programmatic language we call Ruby, that enables us to use functions not built in the languages without having to rewrite the code. When one feels he has enough code to share, he can wrap it up in a &ldquo;Gem&rdquo; that will be easily installable and usable by the other Ruby programmers.</li>
<li>Faker : Faker is a gem that basically gives you random data. Let&rsquo;s say you want to make a huge database and want to test the load for when you have more than 1000 users. Instead of writing either 1000 times the same name or use 1000 names you write one by one, Faker will generate a random one for each of these entries. Pretty useful.</li>
</ul>


<p>But then, Faker generates what it has been built for. Generating team names, or even slogans, are not what it has been made for. So as a 2 days project with my fellow boots of Phase 1 DevBootcamp we created one that made the things we want. You can check the code here : <a href="https://github.com/Qt-dev/cool-faker">Github</a>, and more info on how to download the gem on : <a href="https://rubygems.org/gems/cool_faker">Rubygem</a>.</p>

<p>Basically, we used <a href="http://bundler.io/v1.5/rubygems.html">bundle</a> to make the gem architecture, the files we needed. Then, we took a look at how Faker was built and decided to go around that same way, with our data stocked in a yaml file, and using the <a href="http://ruby-doc.org/stdlib-2.1.0/libdoc/yaml/rdoc/YAML.html">yaml</a> module to load it and get the data we wanted in ruby.</p>

<p>And we end up with a gem that has 4 different functions :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">CoolFaker</span><span class="p">:</span><span class="ss">:Character</span><span class="o">.</span><span class="n">name</span>
</span></code></pre></td></tr></table></div></figure>


<p>generates a random Character name from a famous movie, or tv show. The titles include The Lord of the Ring, Superman, Starwars, friends, or futurama.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">CoolFaker</span><span class="p">:</span><span class="ss">:Character</span><span class="o">.</span><span class="n">name_from</span><span class="p">(</span><span class="n">movie_or_tv_show</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>generates a random name from the movie or tv show that you called.
Your options are :</p>

<ul>
<li>friends</li>
<li>entourage</li>
<li>sex_and_the_city</li>
<li>batman</li>
<li>startrek</li>
<li>superman</li>
<li>star_wars</li>
<li>the_lord_of_the_rings</li>
<li>napolean_dynamite</li>
<li>snow_white</li>
<li>back_to_the_future</li>
<li>the_wizard_of_oz</li>
<li>toy_story</li>
<li>the_simpsons</li>
<li>futurama</li>
<li>monty_python</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">CoolFaker</span><span class="p">:</span><span class="ss">:Team</span><span class="o">.</span><span class="n">slogan</span>
</span></code></pre></td></tr></table></div></figure>


<p>generates a random slogan from a 587 quotes database</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">CoolFaker</span><span class="p">:</span><span class="ss">:Team</span><span class="o">.</span><span class="n">name</span>
</span></code></pre></td></tr></table></div></figure>


<p>generates a team name from a list of adjectives and a list of animal names. Expect some funny names, gender-confused pandas is a good one ;)</p>

<p>With all that, we ended up making the gem with a simple</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="n">build</span> <span class="n">cool_faker</span><span class="o">.</span><span class="n">gemspec</span>
</span></code></pre></td></tr></table></div></figure>


<p>And then send it to rubygems.org, and here we go.</p>

<p>All in all, we ended up shipping a gem without knowing about gem building/shipping, building dozens of tests without knowing about rspec&hellip; a good 2 days of intense learning, a lot of fun, and we end up with an usable tool. I&rsquo;m pretty happy about it!</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Week 3 - Day 4 - Group project and good news]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/02/14/week-3-day-4-group-projects/"/>
    
    <updated>2014-02-14T09:41:20-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/02/14/week-3-day-4-group-projects</id>
    
    <content type="html"><![CDATA[<h2>Group Project</h2>

<p>Yesterday we started a new group project. This time, it&rsquo;s a 2 days stretch. You can follow how it&rsquo;s going on <a href="https://github.com/Qt-dev/cool-faker">Github</a>.</p>

<p>The idea is that we are building an open-source project. More specifically, we are building a Ruby Gem (A code library, a set of tools for people who use ruby) that will generate random people names, team names, and useful info like that from a database of funny and famous words/names/quotes. The idea is that there is a gem called &ldquo;Faker&rdquo;, and we are building the cool version of this one, with Armando, Jamie, and Nicholas.</p>

<p>So far, it&rsquo;s doing good! I got my voice back so I can participate much more in whiteboarding and all that, we planned everything decently and managed to get an MVP (Minimum Viable Product, the smallest thing you could build on your idea) in half the time. We&rsquo;re pushing for more options and some kind of implementation to show nice usage of that gem.</p>

<p>It&rsquo;s exciting to be working on some tool that may very well be used by others all around the world. Plus, learning how to make gems is a very interesting thing. I think that when I have time later, I&rsquo;ll try to make some gems just for the sake of helping around. Open-source is awesome!</p>

<h2>Good news</h2>

<p>Among the good news :</p>

<ul>
<li><p>I may see my fiancee before I come back. This is by far the best news I could ever had heard. I miss her, and knowing that I may see her sooner than I expected is just the best thing that could have happened.</p></li>
<li><p>I had a beer with Jonathan and got more info about after Dev Bootcamp. That was such a relief. Coming here as a frenchman, I just had no idea how the job market was, and how things were supposed to happen after that. I kinda get ideas from here and there, but finally being able to have some feedback from a guy who has the same experience, and comes from the same place, is really a relief. Now I just have to continue giving my best &lsquo;til the end of these 9 weeks.</p></li>
<li><p>I&rsquo;m going to Phase 2! I got my assessment and it went ok. I overthought part of it so I wouldn&rsquo;t say I did perfectly, but with the goal being : Assess whether I know Phase 1 material or not, I did ok for that. That is perfect! So now it&rsquo;s time to learn even more!</p></li>
</ul>


<p>Anyway, going back to the project&hellip; See you tomorrow!</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Week 3 - Day 3 - EE Cooldown, ActiveRecord and My first solo day]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/02/13/week-3-day-3-ee-cooldown/"/>
    
    <updated>2014-02-13T08:41:13-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/02/13/week-3-day-3-ee-cooldown</id>
    
    <content type="html"><![CDATA[<h2>Engineering Empathy Cooldown</h2>

<p>Two days ago was our last Engineering Empathy session of Phase 1. Like the other cohort told us : &ldquo;You thought the first session was heavy? Wait &lsquo;til you see session 3&rdquo;.</p>

<p>First week was &ldquo;The superego&rdquo;, and the exercise that we got was &ldquo;Share what your inner voice tells you&rdquo;. This week was &ldquo;Dive deeper in what you let people know about you&rdquo;&hellip; And so we sat in circle to tell people stuff, while starting every sentence with &ldquo;If you really knew me&rdquo;. Now let me tell you guys&hellip; There were tears, hugs, revelations, but no shocked reaction, no judgement, nothing like that. And everything told in this room stays in this room.</p>

<p>Diving deeper than the usual in what you tell people is an exercise that does make us grow, but that also hits you hard at the moment you do it. And listening to all of the others&#8217; is not even easier. I think I can safely say that I will keep that day in my mind for a very very long time.</p>

<h2>ActiveRecord</h2>

<p>ActiveRecord is the design pattern I told you about yesterday. In Rails, the most well known web framework for Ruby, this design pattern is implemented in its own. What it does, in short, is mapping a database with an object. Columns of the database become attributes of the objects, you can create objects and save them to the db, or get objects from an entry in the db. Quite easy and practical!</p>

<p>Yesterday, we worked on that for the whole day. The morning was the introduction, and the afternoon the application. I&rsquo;ll say that it was a pretty good day, I learned a lot, and ActiveRecord is cool&hellip; Wait&hellip; Better than that : ActiveRecord is coolER than SQL!</p>

<h2>My first solo day</h2>

<p>Wednesdays are optional solo days. That means that every other day, we have to pair or group with more people, but on wednesdays, we choose our pairs/groups. I did not solo until then, but I thought that to save my voice I&#8217;ld try and do so yesterday.</p>

<p>In the end, I did finish the exercises, which was my goal. I had to go to other people soloing a couple of times, to get my mind off of the problems that were blocking me, and to help me figure out solutions sometimes, but I did it and I am pretty happy about it.</p>

<p>The beginning was hard and I just &hellip; felt like I did not know where I was going. But I got on it after I expressed my incomprehension a first time, and then I just worked, with a decent speed.</p>

<p>I don&rsquo;t know if I&rsquo;ll do that again, probably not next week, but probably another time. It was a good day but I prefer picking my pairs in the people I do well with (Looking at you Irene!).</p>

<p>Anyway, today is assessment and group project&hellip; time to have fun !</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Week 3 - Day 2 - More SQL, Testing, Cookies and Syrup]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/02/12/week-3-day-2-more-sql/"/>
    
    <updated>2014-02-12T08:39:34-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/02/12/week-3-day-2-more-sql</id>
    
    <content type="html"><![CDATA[<h2>More SQL</h2>

<p>Yesterday was another day when we used SQL, apparently the last (Yay!). We implemented our own version of <a href="http://en.wikipedia.org/wiki/Active_record_pattern">ActiveRecord</a>, a tool used in Rails that we will, apparently, use all the time and that will be the one talking with the base. But to use your tools correctly you first have to learn how they were built&hellip; And so that is what we did.</p>

<p>I paired with Erin for this day and it was really great. We had a good dynamic and we ended up finishing everything without any real problem going on. All in all, it was a great day for Quentin in DBC!</p>

<h2>Testing</h2>

<p>Shadi is back! So testing is back too ;)<br/>
He explained how to make our own version of Rspec, the testing suite for Ruby, and then handed us a series of tests for the exercises we had for the day. Things are getting complicated pretty fast, but I love it !</p>

<p>Testing is getting trickier but soon enough we&rsquo;ll get into some deep Rspec testing and for the newcomers : TESTING IS IMPORTANT! TEST ALL THE TIME!</p>

<h2>Cookies and Syrup</h2>

<p>So, I came here thinking americans ate junk food and only junk food. Such a disappointment to be in a house, in a program, and in a city where it is absolutely not the case!<br/>
I ended up being on some kind of sugar withdrawal in a few days, that is absolutely not the thing I would have suspected.</p>

<p>So, to compensate that, I buy cookies! And then, once or twice a day, take my usual bite. But then, I am now seen as some sort of cookie monster for eating a lot more than any other around&hellip; So strange.</p>

<p>As for the syrup, small but funny story : Ivan bought syrup, I took some (The throat is not 100% ok yet), then I got incredibly sleepy, and slept. The bad part is that it was 9AM and I was fighting sleep in the middle of a very interesting lecture on Testing.<br/>
The conclusion I got from that is : Read the fucking manual. Don&rsquo;t take syrup without reading all about it.</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Week 3 - Day 1 - SQL, Games, and Assessments]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/02/11/week-3-day-1-sql/"/>
    
    <updated>2014-02-11T08:49:38-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/02/11/week-3-day-1-sql</id>
    
    <content type="html"><![CDATA[<h2>SQL</h2>

<p>In the world of development, we could say that you have plenty of choices when picking your tools. Among these tools are hundreds, if not thousands, of languages. Some are pretty specifically used, even though they may not have been made for, some are pretty &ldquo;fast&rdquo; while others are &ldquo;not&rdquo;&hellip; But all in all, we can say that a hammer is a hammer. No matter the brand or the specs, the hammer will fulfill his role and that&rsquo;s it.</p>

<p>Anyway, yesterday we used SQL for the second time in phase 1. It is a language used to talk to a specific type of database (Any derivation of SQL), which may very well be one of the most common database type in the world, and that has been the case for more than 20 years. The language used to do so has been around for almost the same time too&hellip;<br/>
I paired with Tim, a very nice and tall guy, and we ended up doing as much as we could for the day. We learned tons, we played a bit, and it was fun. All in all, a good day, even if we spent the day on SQL&hellip;</p>

<h2>Games</h2>

<p>So, Web Development, and maybe even particularly in Dev Bootcamp, is a world of hard work combined with games. My opinion is that we party, we play, we develop games even, to cope with the rest of the hard day. A lot of brain-twisting challenges and very not fulfilling days spent on solving that bugs that would have taken 2 minutes to solve if you had seen that semi-colon earlier will do that to you and may ask for harder entertainment.</p>

<p>In DBC, we play. There are games all around, the Giant Djenga falls a couple of times a day, we did a Hack-a-thon this weekend (A coding contest where teams build stuff and compare at the end of the day. All with beer, pizzas, and a lot of laughter), and all in all, people are playful.</p>

<p>Yesterday we played Magic The Gathering with a couple of boots. I did not win but I loved the game. A long game, hard, where you have to think before you do stuff. It had been a long time and now I just regret I did not bring my cards myself ;)</p>

<h2>Assessments</h2>

<p>DBC is not about grading students. It is not the style of the house. But they do have to test us to make sure we can understand the next phase. So, to do that they assess us at the end of every phase.</p>

<p>This week is the end of the first Phase. Teachers will get with us for a short amount of time on Thursday and will review some of our code at this point. At this moment, no more help, just some control of your knowledge. At the end of that, we can be given one of 3 different options :</p>

<ul>
<li>Your level is high enough, welcome to Phase 2</li>
<li>You may want to spend 3 more weeks on Phase 1, just to make sure you get it all</li>
<li>Are you really sure you are learning anything? If not, DBC may not be the best thing for you&hellip;</li>
</ul>


<p>Now, let&rsquo;s hope for mine being the first one! I&rsquo;ll do my best anyway.<br/>
Small info for the people in the next cohorts : We chose our assessments. The output may be the same but you may not get the same.</p>

<p>Anyway, lecture is about to start again, let&rsquo;s go. Thank you for reading and see you tomorrow!</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Week 2 I Am Still Alive]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/02/09/week-2-i-am-still-alive/"/>
    
    <updated>2014-02-09T00:00:00-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/02/09/week-2-i-am-still-alive</id>
    
    <content type="html"><![CDATA[<p>Apparently, getting sick is a trend among DBC cohorts. When you get here, expect to get sick. Bad weather this week, and me being very stupid with the weak points I know I have just made me get sicker than I do usually.<br/>
So, I ended up feverish, sleeping more or less the whole day&hellip; for 2 days, in DBC, waking up 5 minutes at a time, just enough to get some work done so that I don&rsquo;t feel too far behind, and then go back to sleep. Then I woke up on friday but had no more voice&hellip;<br/>
All in all, a good week of fun times.</p>

<p>In other news, we went through some SQL introduction. We will be using Postgres mostly. Now I just have to figure out if my experience with MySQL will be a good or a bad thing.
Different implementations of SQL can save you some time to get into the syntax, but then the small differences are what can just be the tricky things that make you get in so many bugs. Only time will tell.</p>

<p>Friday was the first group project, and we did a Tournament Manager. Again, I couldn&rsquo;t speak and was a bit dizzy so I ended up not being able to give my 100% and I hate that&hellip; Yesterday was the first DBC-Alumni hackathon and I was still not close enough to awake-ish to be able to participate. Damn throat&hellip;</p>

<p>Anyway, sorry to my pairs this week for having my mind pretty far off the planet, sorry to my friends who I may make sick, to those who took time to help me get better when they clearly had better things to do, and to the people who may be reading this blog and had no food for thoughts for 4 days.</p>

<p>But don&rsquo;t worry, I&rsquo;m back, I&rsquo;m good now, and hungry for knowledge, experience, and opportunities to show the world what I&rsquo;m made of!</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Week 2 - Day 2 - Oop, Friends & Brothers, Battleship & Sudoku]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/02/05/week-2---day-2---oop-friends-brothers-battleship-sudoku/"/>
    
    <updated>2014-02-05T08:51:00-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/02/05/week-2&#8212;day-2&#8212;oop-friends-brothers-battleship-sudoku</id>
    
    <content type="html"><![CDATA[<h2>OOP</h2>

<p>Development is a wide topic to learn. New ways to do everything a developer need to do appear everyday. But then, the practices, the basis behind all of these new tools is slow and moves at a steady pace.<br/>
You can take it as :<br/>
&ndash; The tools are waves.<br/>
Thousands land on your shores everyday. None is exactly the same as another, every one of them is different, and to a surfer, a fisherman, or anybody who could make us of them, every one of them could be a treasure or a pain.<br/>
&ndash; The practices are ties.<br/>
They also come, but at a very slow pace. They too are very different, and affect anybody much more than waves, but because of that slow pace, we tend to focus less on that.</p>

<p>Well, today was the second day of introduction to Object Oriented Programming. One could probably spend hours writing about such a notion, but I will stick to a one sentence explanation.</p>

<p><a href="http://en.wikipedia.org/wiki/Object-oriented_programming">Object Oriented Programming</a> is a way to work in development by modeling blocks of code in what people call an &ldquo;Object&rdquo;. Wikipedia, among others, explains that much more easily than I do, I encourage you to get there to check what it is about. ;)<br/>
Plus, I don&rsquo;t have much interesting things to say about it so&hellip; I won&rsquo;t say much!</p>

<h2>Friends &amp; Brothers</h2>

<p>Yesterday, I paired with Jamie, a nice american-name, american-accent girl who does not look like her profile picture and who does NOT like country music (Hehe&hellip; Sorry for the private joke). In all honesty, it went well, and if it had been another person, I may have spent a bad time. The challenges were about things that I could not say I master, but an introduction is an introduction. We talked a lot, learned to know each other.<br/>
I find that extremely important when you spend most of the time with some people and you have to challenge, and spend most of your time in total freakout mode.</p>

<p>That being said, another part of the day was a bit harder. Dev Bootcamp makes you meet people that have been selected after a particular selection. Only 10% of the people make it apparently. Of course, we are selected because we have a specific set of skills, a particular mindset, and Karim and all the others in charge of admission see things in us that make them think we can make it.</p>

<p>Then, we get grouped with others with the same characteristics, and for 9 weeks, you work with them, play with them, more or less live with them, 100% of the time. During these 9 weeks, you are challenged everyday, stressed out to a point where most would break, and most DO break. Your challenge, just like the others, is to learn what took years or even decade to master to many. As <a href="https://github.com/amgando">Sherif</a> said, that is insane. We are insane for trying that, but then we have been selected because we are, and only that combined insanity of so many people can help us make it at the end.</p>

<p>In our cohort, we even took it so far as to get a house for 9 of us. If spending most of our times of struggle was not enough, we now spend 100% of our time together.</p>

<p>I may sound overdramatic with that explanation, but my point is that your only way to win at this is brotherhood( + sisterhood, however you say that). We are one, and must stay one. All of us must succeed at the end, and if one of us breaks, we all need to do our best to &ldquo;repair&rdquo; him asap to get on the next step.</p>

<p>Yesterday, Stephen had a bad time. Pressure got the best of him for a part of the afternoon. It was not the challenges, not something that happened yesterday, but something that grew in his head that ended up getting to him.<br/>
But what happened after that is the illustration of that idea that I am trying to give you : We gathered, and make it so that it never happens again. Stephen is part of us, the entity that we have become. We can&rsquo;t succeed without him, and will not let him behind. In the end most of us went to sleep at 12AM, after long talks, hugs, and mental-screwdriving.</p>

<p>To whoever want to join the bootcamp with any other idea that the one I am describing in here : You shall not pass. This is teamwork, and without that, none of you will pass. That is a fact, well known by those who succeeded as well as those who did not.<br/>
You will NEED brothers and sisters.</p>

<h2>Battleship &amp; Sudoku</h2>

<p>I already took too much of your time so I will try and be fast on this one but : Yesterday somebody pointed me in a new direction for sudoku solving. It is called <a href="http://en.wikipedia.org/wiki/Dancing_Links">Dancing Links</a>. I won&rsquo;t explain in details, especially since I don&rsquo;t think I have a good enough grasp on this, but my goal here is to try and solve the 170 puzzles I solved in 8.5 seconds, but in less than a second this time. I&rsquo;ll tell you more when I can.</p>

<p>And about Battleship : A few of us finished the challenge that said we had to make a battleship game in Ruby. We thought we could share that knowledge, so we got an idea and we are organizing a Battleship contest. We will build a core game, and a way for people to develop their players behaviors. We will be around the whole way and help those who could not finish it at first. Then after that we will just compete&hellip; But then again, we don&rsquo;t have the rules yet so&hellip; See you tomorrow!</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Week 2 - Day 1 - A new partner, Experience vs Mastery, Sudoku solving]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/02/04/day-6---an-new-partner-experience-vs-mastery-sudoku-solving/"/>
    
    <updated>2014-02-04T08:59:00-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/02/04/day-6&#8212;an-new-partner-experience-vs-mastery-sudoku-solving</id>
    
    <content type="html"><![CDATA[<h2>A new partner</h2>

<p>Sometimes, you meet people and you feel that it is just right. Yesterday I was to pair with Irene. There are not a lot of people I did not work with, but Irene was one of them. I was looking forward to pair with her, her experience with web dev, and the examples of work she had accomplished  is just impressing to me (Like this for instance : <a href="http://www.ireneyiu.com">Iren
So, we paired and it was a very fulfilling pairing session, in terms of partnership mainly. e&rsquo;s Site</a>)). Plus, so far I only heard nice things about her! In the end, I just loved my day, but you&rsquo;ll see more about that in the next paragraphs. Plus, she knows a bit of french (Every time she tries some french words I realize she knows even more than I thought, very impressive).  Some would say that I should not have been intimated, or even go as far as saying things about great minds thinking alike&hellip; But I don&rsquo;t think so.</p>

<h2>Experience vs Mastery</h2>

<p>For me, people make experience when working the right way, learning, experimenting, on one particular topic. There is no limit to how far you could go in such a topic, and broadening your learning will always take you to strange places, more skills, more experience, and for me, more fun!</p>

<p>Now, I do have some skills. I won&rsquo;t brag about it, but I don&rsquo;t see any reason to have some false modesty. I have, indeed, been playing with computers for 27 good years so far. I have been developing, at a slow pace for 2 years now. My job has also been to spot and maybe fix bugs in the program my company was making for the lat 2 years.<br/>
But all that does not make me a genius. The only thing it gets me is experience. No mastery, no great mind, nothing like that.<br/>
Irene has been doing some web development for a while, and that also does not make her a genius. She is, however, much more experienced than I am in web development, and web design. If you take Stephen, he is much more experienced in video games, and Armando in asian cuisine!<br/>
In the end, people have experience, and every experience is different. There is no shame in having none in one topic, and lack of experience should just push you to want to learn more.</p>

<p>In the end, I was too impressed by Irene, and I should not have, but we also both had that feeling that people tend to put us on pedestals because of some of our experience, sometimes. She was apparently just as intimidated, and in a way I think that helped us connect much more easily. All in all&hellip; Good times and a awesome pairing session, Sacrebleu!</p>

<h2>Sudoku!</h2>

<p>So, I made code that solves sudokus. Hunter had been working on an algorithm thought by <a href="http://en.wikipedia.org/wiki/Peter_Norvig">Peter Norvig</a>, former director of search quality at Google. As with the experience I was talking about in the 2nd paragraph, Hunter has much more than me in math and algorithm thinking and design.</p>

<p>The idea is that :<br/>
&ndash; You first fill in every cell that has only one possible value.<br/>
&ndash; You then take all the boxes, rows, and columns, and try to find if any possible values can take only one location in one of these groups, and then set it to this cell.<br/>
&ndash; If you did not find anything, just guess one number, taking all the cells with the smallest number of possible values, and fix them one by one, before calling the first step again. If it did not work, you get back on this part, restore the board, and fix the next one.</p>

<p>I could spend hours talking about that, but in the end&hellip; I solve 170 puzzles, among which 95 &ldquo;hards&rdquo;, and the 11 harvests, all that in 8.5 seconds.</p>

<p>If you want any more info, don&rsquo;t hesitate to ask. I think I&rsquo;ll be showing how I did to my cohort very soon anyway.</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Day 5 - Week review, Sudoku day!]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/02/01/day-5---week-review-sudoku-day/"/>
    
    <updated>2014-02-01T12:18:00-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/02/01/day-5&#8212;week-review-sudoku-day</id>
    
    <content type="html"><![CDATA[<h2>Week review</h2>

<p>Ok so, it was the last day of the week, everybody is pretty messed up thanks to the huge amount of content, to the Engineer Empathy, etc&hellip;</p>

<p>Yesterday, we started with a review session with Sea Lions, the cohort prior to us who&rsquo;s on the bootcamp with us. During that session, what came out was :</p>

<ul>
<li>Sea lions are happy to be around us</li>
<li>Week 1 of Phase 2 was awesome</li>
<li>Week 1 of Phase 1 was awesome, even though it was a bit overwhelming</li>
<li>Engineer Empathy affected every one of us, big time</li>
</ul>


<p>I could explain more right now but I think I&rsquo;ll just do a quick recap during the weekend if I can.</p>

<h2>Sudoku day!</h2>

<p>So, today was the last day of this first week of DBC. One of the &ldquo;initiation rituals&rdquo; of that first week seems to be that first friday theme : Sudoku. The idea is that we worked hard all week on challenges here and there, and on this friday they gave us the &ldquo;Ultimate challenge of the week&rdquo;. For this challenge, you have 2 assignments :</p>

<ul>
<li>In the morning, you have to write code that reads a sudoku data line, then builds a grid and solves it without guessing.</li>
<li>For the rest of the day&hellip; Implement guessing!</li>
</ul>


<p>I was to pair with Nic, a guy who chose to redo phase 0 to make sur he got all the knowledge he could get from it. But then, Nic already completed that challenge on the last cohort. So the rules we went for were :</p>

<ol>
<li>We don&rsquo;t check any of the code he did before</li>
<li>His thoughts may very well just end up being guided by what he already did, so I found the suggestions, he would just comment, agree, debate, etc&hellip;</li>
</ol>


<p>Let me tell you guys : That went well! We ended up implementing an object-oriented piece of code that actually ran faster (50%) than the one he had last year!</p>

<p>If you want more info on that :</p>

<p>We created a cell object that had the value for that cell, and all the info about its position as its attributes. This way, a simple <a href="http://www.ruby-doc.org/core-2.1.0/Array.html-i-select"></a> call and we got all the cells in this array, in this row, or in this column.</p>

<h2>Geek talk : My take on people&rsquo;s solutions</h2>

<p>People actually implemented the same algorithm over and over again. To sum it up I&#8217;ld say :</p>

<ul>
<li>Select a cell</li>
<li>Get the values of the non-empty cells in the same row, column, and box</li>
<li>Subtract the values you found from an array of the possible values (1 to 9)</li>
<li>If there is only one remaining possible value, assign it to that space</li>
<li>Do it again until all the spaces are taken</li>
</ul>


<p>That was common for every one of us that I saw. But then the huge difference was : The data structure. You had to make a choice there that would make the code change big time, but let me explain that :<br/>
This data structure can be put in one of 3 different groups.</p>

<ol>
<li>Nested array. You make arrays in an array, and so you get a 2D array</li>
<li>Something hybrid from 1 and 3</li>
<li>Cells as an object that you put in an array</li>
</ol>


<p>Obviously, the 1 is the easiest way to go to put and get the data, right? And the last one may just end up being the most complicated one (What do I need my object to know? How do I create it? And how do I call the attributes of that object? Do I calculate them on the go? &hellip;).</p>

<p>Now, the interesting part is that, for this problem, the easiest the data structure, the hardest the rest of your code will be. Because when you have a nested array, how do you call a block? How about a column? How do you check if all the blank spaces have been filled? Do you do some kind of nested loop to go through your nested arrays?</p>

<p>But then if you chose the 3, this <a href="http://www.ruby-doc.org/core-2.1.0/Array.html-i-select"></a> method just ends up selecting whatever you need in one line.</p>

<p>In the end, since the rest of the code was basically the same, the main difference was there.</p>

<p>If you check the code of people in the cohort, most of the people chose something around 2. Some were pushing in the direction of 3, some in the direction of 1, but mostly doing 2.</p>

<p>One did go through with 0 (Way to go Armando and Chermaine!), and one did actually do something that could be a &ldquo;0&rdquo; in my list : A simple array. You calculate the row,column and box from the index every time you need one of them.</p>

<p>Anyway, that was what I found and I would be happy to share more if you have any more question!</p>

<p>I&rsquo;ll just end this post with this very profound quote :
&ldquo;Today was a good day&rdquo;</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Day 4 - Games! and Solutions!]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/01/31/day-4---games-and-solutions/"/>
    
    <updated>2014-01-31T07:37:06-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/01/31/day-4&#8212;games-and-solutions</id>
    
    <content type="html"><![CDATA[<h2>Games</h2>

<p>Yesterday was a day when we had to start and implement games. We went from a simple piglatin creator to a boggle board solver.<br/>
For this day, I had to pair with Eric. Eric is nice, and fun. But then I just navigated, pointed the pair to a place where the waters were much too deep, and we ended up just trying to figure some things that we&rsquo;re supposed to care about in a few weeks out. That was not pretty, we learned a lot but ended up not finishing the exercises when others did / we had to get to the next one.</p>

<p>No biggie though, we ended up just climbing back and finishing the exercises, or at least most of them, in due time.<br/>
I do feel sorry for pushing the pair into places we should not have been, and so maybe take time off or learning some valuable info that we should have at that point, but I hope I made it up by being extra precise and helpful if I could for the next part&hellip; I&rsquo;ll have to see that with Eric I guess! Feedback, here we are.</p>

<h2>Solutions</h2>

<p>It was the day I got a few solutions.</p>

<p>First solution : We solved that f**king problem, Rao is really awesome!<br/>
Check the other blog posts if you want to know what I&rsquo;m talking about!</p>

<p>Other solutons : The exercises were not all very hard, they just needed to be taken the exact right way, or you&#8217;ld just get lost in deep non-understandable stuff that take too much time. We code from 8AM to 11PM, and have 9 books to read&hellip; All that by the end of the week. Let&rsquo;s just not take that path.</p>

<p>Anyway, I said I navigated, pushed the pair to a wrong place that just got us stuck. While doing that, I like to take small times off that coding, review what the others are doing, and try to help others. In my mind, finding the solution for somebody&rsquo;s challenges just makes me trigger some kind of chain events that take me to the point when I can solve mine.<br/>
So that&rsquo;s what I did. That did not really helped me work things out on the problems we were having, not at the end at least, but that helped me figure out exercises in advance by helping people that were on 2 while I was on 1.</p>

<p>And THAT helped a lot. In the end, when we got back to our exercise, we just have to recapitulate, check the things I told the others about, and if we agreed on that : Implement. Thanks to that, exercises that could have taken hours to solve just took a few minutes and nothing else!</p>

<p>Anyway, today is Sudoku day. Apparently we have to make a sudoku board creator, and a sudoku game solver&hellip; That&rsquo;s gonna be fun! See you after that!</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Be careful with Ruby's assignment methods]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/01/31/be-careful-with-rubys-assignment-methods/"/>
    
    <updated>2014-01-31T00:59:00-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/01/31/be-careful-with-rubys-assignment-methods</id>
    
    <content type="html"><![CDATA[<h2>The context</h2>

<p>So, I am in Dev Bootcamp. Yesterday, while trying to implement a customized class, I tried to make ruby respond to :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">myClass</span><span class="o">[</span><span class="n">index</span><span class="o">]=</span><span class="s2">&quot;new_value&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>My buddy and I were trying to get used to Test-Driven Development (<a href="http://fr.wikipedia.org/wiki/Test_Driven_Development">If you want more info&hellip; Thanks Wikipedia!</a>). So I had a very simple test method that tested if 2 things were equal.<br/>
I was testing that this code would return true, just to make sure the whole code of my method was executed.</p>

<p>Come this test, we found out that it wanted a method called &ldquo;[]=&rdquo;, so we did. Our method looked something like :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">[]=</span> <span class="n">index</span><span class="p">,</span><span class="n">new_value</span>
</span><span class='line'>  <span class="c1">#Do some stuff</span>
</span><span class='line'>  <span class="kp">true</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>The problem</h2>

<p>So, we got this method, this test, so far so good. Now, we launch the test to check if the result to that first expression is true and&hellip; No. The test said that this method just ended up returning the value that we were passing it (In this case &ldquo;new_value&rdquo;).</p>

<p>Maybe that method was not doing what it should, so we used the Debugger gem (<a href="http://rubydoc.info/gems/debugger/1.6.5/frames">Docs</a>). With that we just checked step by step what it would be doing.<br/>
&ndash;  First : It is calling the method. The debugger throws us right there in the middle of the method.<br/>
&ndash;  Second : It is actually doing what we want. The data is changed, and it goes through the last line that returns true.<br/>
&ndash;  Third : It does not care about that because on the very next step, the trace you have of this method and what it returns already became &ldquo;new_value&rdquo;</p>

<p>We then asked more experienced boots, and came up with a test where we&#8217;ld be calling the method like this :<br/>
<code>ruby myClass.[]=(index,"new_value")</code>
Conclusion of this test : SUCCESS!<br/>
This calls the method without any problem, and that is done exactly how we want.</p>

<p>So at that point are conclusions were :<br/>
&ndash; The method is called<br/>
&ndash; The method does what it should, even the return<br/>
&ndash; Its behavior changes when we call it with ruby&rsquo;s &ldquo;shortcut&rdquo;, or syntaxic sugar (<a href="http://rubylearning.com/satishtalim/ruby_syntactic_sugar.html">More info</a>) and we end up having the return value disappearing, and the second argument becoming that return value.</p>

<h2>Assignments methods</h2>

<p>Let&rsquo;s pause on that particular problem for a second to talk about assignment methods.</p>

<p>Assignment methods can be used to assign a value to a particular item, like the name says. But in Ruby, everything is object. So assignment methods are actually methods, simple ones defined just like an initialize. What differenciate them mostly is :<br/>
&ndash; An assignment method can has any number of spaces before its = when it is called.<br/>
&ndash; When you call it with the &ldquo;shortcut&rdquo;, the behavior will be neglected and replaced.</p>

<p>Now, the important thing&hellip; Let me rephrase that : The <blink>IMPORTANT</blink> thing is how ruby selects what is and what is not an assigment method.</p>

<p>The answer is : It takes the last character of the name of the method, and checks if it is an equal.<br/>
If it is, your method will be considered an assignment method.</p>

<p>If we take our problem, the method can clearly be detected as an assignment method. That means that it can be called with spaces between the brackets and the = sign, and even more because ruby has a special shortcut for the methods with such a name (The one we used).<br/>
That also means that the behavior will be transformed.</p>

<p>Well, do you want to guess what behavior is the principal one concerned by that statement? You&rsquo;re right, it&rsquo;s the return. The rubydoc tells us that using an assignment method, so the shortcut we are talking about, will always return the argument.</p>

<p>So, our code did work. It did do what we wanted it to do. But unless we wanted to redefine primitive ruby behavior by diving in Ruby&rsquo;s source, there is no way we can make an assignment method return anything else than the thing on the right.</p>

<p>So, guys, be REALLY careful when you call your method with an =. That may help you in some parts, but it may also leave you and your friends, coworkers, teachers craving for answers ;)</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Day 3 - Data structures/types, testing, and a brain-teaser]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/01/30/day-3---data-structurestypes-testing-and-a-brain-teaser/"/>
    
    <updated>2014-01-30T08:13:00-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/01/30/day-3&#8212;data-structurestypes-testing-and-a-brain-teaser</id>
    
    <content type="html"><![CDATA[<h2>Data Structures/types</h2>

<p>Yesterday was the optionnal solo day, the day when we choose if we pair or not and work on some challenges. The code of the day was about Data Structures. I wont go as far as to try and explain all of that in detail in this blogpost but the idea is that you have all these data types in languages.<br/>
For example, a String is a chain of characters. It has a length, characters at specified index, and methods to compare Strings together, to change some character, and all the other operations you would want to do on such an object.<br/>
Once you get that far, it is what you call Abstract Data Structure. Then you implement it into a Data type, or a Data structure, according to if this ADT is a chain of separable elements, or an element in itself.</p>

<p>So, in short, we spent most of the day working to understand that 100%<br/>
And if you are curious about if I chose to work alone, I did not. I chose to work with the &ldquo;Brother from another mother&rdquo;, Armando.</p>

<h2>Testing</h2>

<p>In our lunch talks, Shadi introduced us to Test-driven development. The idea is that when you have an idea about what you want to do, and no matter how strong the feeling that you can code that is, you will just write tests to verify all that first.<br/>
Your algorithm will not work (Duh&hellip; You did not write any code yet), but you then just launch your script, and jump from error to error, deciphering and correcting them on the way, one by one, never thinking about the big picture. Then when you finish that, you check if the code does exactly what you want. If not, you write more specific tests.</p>

<p>Contrary to popular beliefs, people are really bad at multitasking, and so doing that allows you to complete simple tasks one by one, without multitasking, and empowering your debugging skills on the way.</p>

<p>So, Test driven development, I love you. (Not as much as my fiance of course, but we&rsquo;re getting close)</p>

<h2>A brain teaser</h2>

<p>So, we worked on data structures, while using test-driven-development. While doing that we ended up redefining a method whose syntax is recognized and transformed by ruby&rsquo;s Syntaxic sugar :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">[]=</span> <span class="p">(</span><span class="n">index</span><span class="p">,</span> <span class="n">data</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>which transforms into :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">thing</span><span class="o">[</span><span class="mi">3</span><span class="o">]</span> <span class="o">=</span> <span class="mi">4</span>
</span></code></pre></td></tr></table></div></figure>


<p>So far so good.<br/>
Now, the problem we find is that in Ruby, even if you make that method return something, the second expression, the after-SS one, is returning 4.<br/>
I will tell you more when I realize what happens and why, but let&rsquo;s say other cohorts did not know, coaches did not know, Sherif did not know, and we have to know&hellip; So let&rsquo;s hunt for that!</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Day 2 - Cries, laughters, and code]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/01/29/day-2---cries-laughters-and-code/"/>
    
    <updated>2014-01-29T08:00:00-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/01/29/day-2&#8212;cries-laughters-and-code</id>
    
    <content type="html"><![CDATA[<h2>Cries</h2>

<p>So today we started Engineer Empathy courses. The idea of this course seems to be that the better you are with yourself and the better your ability to work with others, the better engineer you will become.<br/>
Now, just like everything else in this program, EE is freakingly intense.<br/>
Yesterday we had a session about the Superego and how to recognize attacks from it and defend.
That does not sound much but&hellip; I just ended up almost in tears thinking about strange attacks against myself. Sometimes we just don&rsquo;t really think about the things we put ourselves through, but then when these come back, that&rsquo;s when you have a bad time. Well, let me tell you that people who are crazy enough to join Dev Bootcamp have a lot of</p>

<p>Now if that was not intense enough, I had decided to run a bit too far 2 days ago and so now I just look like a 3rd age dude having a hard time walking all around. That brings some tears too haha.</p>

<h2>Laughter</h2>

<p>Today they gave us a pairing buddy for the whole day. Mine was &hellip; Matthew!<br/>
I spent most of the day enjoying what I was doing, at least for the fact that I was doing it with somebody I appreciate and really have fun with. We joked all around, and even though some may say that it is quite counterproductive, we finished the challenges right at the same time as others, and I got the feeling we learnt exactly enough!</p>

<h2>Code</h2>

<p>So, today we spent the morning reviewing the code some used to complete the challenges of yesterday. We ended up comparing hashes + #each with no data + if (The if waterfall seems to be faster&hellip;), and all that with or without recursion. In the end, we can say that in this small exercise, recursion was a waste of time, and not maintainable, hashes + #each keeps the code organized so maintainable, but then the If waterfall was just horrible to watch but a bit more efficient&hellip; The world of code is a strange place, guys&hellip;</p>

<p>In the afternoon we worked on sorting algorithm. After a bit of time going crazy over explanations not explaining much and hurting our brains and souls, Rao, a coach with a nice and funny meow-like name gave us some more options and we found out how to do all that. We implemented the merge sorting algorithm and that did not take us much time from here. The funny surprise though was that at the end, we cleared the 3 170k words files in around 1.5 seconds each&hellip; While every other algorithm just took at least 10 minutes. Some even calculated that theirs could last for a day just sorting one of the files. Algorithms are crazy and are to be known!</p>

<p>Now, time to go back and code guys, see ya!</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[So it begins...]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/01/28/so-it-begins/"/>
    
    <updated>2014-01-28T07:53:00-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/01/28/so-it-begins</id>
    
    <content type="html"><![CDATA[<p>I won&rsquo;t go as far as to tell everything since the last post. Challenges went by, I continued pairing with Armando, working at my strange company that just ended up closing, and then the closer I got to my 8000 miles travel, the busier I got&hellip;</p>

<p>Plus, I just ended up taking all the time I could get to see my fiance.
And let me tell you guys : That was worth it, and a very good idea !</p>

<p>Then, 3 days ago I arrived in SF. I just had time to discover simple things here and there, get an account at the bank, a mobile line, and all the things you need for a simple life nowadays.</p>

<p>Now, up to the main topic :</p>

<h2>The program started</h2>

<p>So, yesterday, we were expected at Dev Bootcamp, just at the entrance of Chinatown, for 9AM. We met the last remaining people of the cohort that we had not met before, and waited there, anxiously waiting.
At 9AM sharp, shouts and claps started right behind that little door we had not passed yet&hellip;</p>

<p>They opened the doors, and things went wild.
I won&rsquo;t go as far as to explain everything in details, but for this first post in a while I&rsquo;ll just sum it up as :</p>

<ul>
<li>People are awesome. Teachers, Coaches, other students, other cohorts, everybody!</li>
<li>We should be expecting 60-80 hours weeks, and even there we probably won&rsquo;t get over everything anyway.</li>
<li>Sherif, one of our teachers, is really eloquent&hellip; You can hear pure knowledge come out of his mouth&hellip; That&rsquo;s insane</li>
<li>Sherif told us repeatedly : We are insane for thinking it is doable. But the common insanity is what bounds us and may end up making it possible.</li>
<li>We are guinea pigs. The program we will be living will be a bit different than the others, but then I&rsquo;ll explain that later.</li>
</ul>


<p>All in all, I can say that we are joining a program that shows us how to work and let us do the job and find about what to do and how, assess our learning,&hellip;
We are basically the ones making it possible. Teachers guide us, but that is all.</p>

<p>Now, time to head up to DBC again, cheers!</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[(unknown post type)]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/01/10/unknown-post-type/"/>
    
    <updated>2014-01-10T12:50:35-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/01/10/unknown-post-type</id>
    
    <content type="html"><![CDATA[<p>missing body</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Welcome to Dev Bootcamp]]></title>
    <link href="http://Qt-dev.github.io/blog/2013/12/13/welcome-to-dev-bootcamp/"/>
    
    <updated>2013-12-13T07:01:57-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2013/12/13/welcome-to-dev-bootcamp</id>
    
    <content type="html"><![CDATA[<p>I created this blog as a part of the Dev Bootcamp, mostly. But what is it? How does it work?<br/>
Time to give you guys a bit more info, at least about what I know so far&hellip;<!-- more --></p>

<h2>What is it?</h2>

<p>My words will probably be much more wrong that these :&nbsp;<a href="http://devbootcamp.com/learn-more/"><a href="http://devbootcamp.com/learn-more/">http://devbootcamp.com/learn-more/</a></a>&nbsp;.<br/>
But to put it simply :&nbsp;<br/>
Dev Bootcamp is an intensive program that aims to teach you how to become a good developper in 9 weeks (Plus 12 weeks, less intensive, to train beforehand, and a few more afterwhile).<br/>
!You don&rsquo;t need to have mad coding skills to enter, any experience. What you need is genuine interest, and being able to show that you can learn.</p>

<h2>Can I join then, and how?</h2>

<p>Well, as I was saying, it is not a program for hardcore coders, it is one for genuinely interested people who can learn.<br/>
So if you think this description would fit you : Apply!<br/>
The selection is in 3 steps.<br/>
1 : You answer the questions they have in an online application.<br/>
2 : You make a 5 minutes video that tells the viewer a bit more about you, and teaches something you know to that same person.<br/>
3 : If your video and application are selected, you get an interview with one of the Bootcamp&rsquo;s recruiters.<br/>
Now, remember, what they want to see is : Are you genuinely interested? Are you able to learn? And how interesting are you?<br/>
If you can show them that you fit the description, then you will just have to choose a place and date and here you go!</p>

<h2>So how does it work once you&rsquo;re in?</h2>

<p>Well, you got in, now you have to pay to book your spot. Cohorts (= Promotions) are small, and they intend to make it stay this way. So the fastest you can pay the first deposit, the better the chances to have the spot you&#8217;ld want, and so the better it is for everybody<br/>
Now, the bootcamp in itself will start 12 weeks before the &ldquo;Starting day&rdquo; you booked. Before that, Try to check out everything they put in the list for new recruits. There are tutorials, books, many things. Not doing them all will not make you fail, but it will most likely make it a bit harder than if you had.<br/>
Also, try to get in contact with people from your group. Dev Bootcamp will teach you how to be a developper, and so how to work with other developpers. There will be a lot of group projects, pair-programming (you&rsquo;ll know about that soon enough hehe), and so the fastest you get together and start organizing, the better it will be for you.<br/>
You will also, most likely, need to find a place near the bootcamp, and plan a lot of stuff for when it all starts, so don&rsquo;t hesitate to plan in advance (and all together, which will make you save a lot of money on your new place and stuff like that). You will most likely not get a solid plan for everything 9 months in advance, but looking around does not hurt.<br/>
Soon enough, you&rsquo;ll be at the D-12 weeks milestone : Phase 0 starts</p>

<h2>Dev Bootcamp &ndash; Phase 0</h2>

<p>As I mentionned in an earlier post, Dev Bootcamp is not about making you able to code stuff, or giving you a coding job, but about making you a developper.<br/>
To follow that idea, the first &ldquo;Lesson&rdquo; you get in the first day of the first week of phase 0 is about Developper&rsquo;s Empathy. The idea is that you have feelings, and are encouraged to have even more and stronger ones, but you should be able to manage them.<u>Wherever you code, you will have to work in team and more importantly work WITH this team.</u><br/>
One could ask &ldquo;What if I want to code an app alone?&#8221;<br/>
This could be thought as being in no team, but the idea is that you still have a team. This team is a group that contains the present you, the past you, and the future you. Past you built some code, and now present you is trying to adapt and refactor that code to add new features, while thinking and modeling it so that future you don&rsquo;t look at the code and die of an instant brain disease.<br/>
So, with that in mind, Phase 0 starts with a few code challenges per week, increasingly hard of course, to do with other people from your group. Add a weekly meeting with instructors to make sure you&rsquo;re doing ok, with the code AND with the others, and you will have around 15 hours per week of DBC-ing.<br/>
I would tell you more about all that, but that&rsquo;s where I am right now so I&rsquo;ll stop here for now. After all, the post name is &#8220;Welcome to Dev Bootcamp&rdquo;, not &ldquo;Everything about Dev Bootcamp&rdquo;. <br/>
Don&rsquo;t hesitate if you have any questions, and I hope I&rsquo;ll have helped you in some way with this post!<br/>
See you sooon for more on the bootcamp!</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[It is time again!]]></title>
    <link href="http://Qt-dev.github.io/blog/2013/12/12/it-is-time-again/"/>
    
    <updated>2013-12-12T07:28:06-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2013/12/12/it-is-time-again</id>
    
    <content type="html"><![CDATA[<p>Back from a huge week full of family, friends, love, travels, &#8230; and a freaking load of coding. It&#8217;s time to blog again.<br /><br /></p>


<p>Articles about the bootcamp are coming, I just did not have time to finish one yet.<br />So in the meantime, let me tell you more about my week, my planning, and a few other things&#8230; <!-- more --></p>


<h2>My schedule</h2>


<p>For a few weeks, I have been following a specific schedule.</p>


<p>4AM : Let&#8217;s do some coding. I have always wanted to adapt my sleeping schedule to an&#8230; earlier start-early end one. <br />Since DevBootcamp started and is asking us to pair as much as possible with others from the cohort&#8230; most of whom are in the US, 6 to 9 hours away from here, I had a choice between waking up earlier or getting to sleep later to pair with them. So I chose earlier, and &#8230; much earlier than I could have.<br />So every morning I pair with Armando, and go through DBC challenges. There may have been a difference in term of experience with coding on the very first time, but that went away very quickly. Plus, as I said earlier, DBC is not about coding, but about becoming a developper. When you don&#8217;t learn some code tricks, you learn how to explain what you did to other developpers, you learn how to reflect on your own code, how to handle your coding station, etc&#8230; <u>No time spent on these challenges is a waste.</u></p>


<p>6.30 AM : I eat, take a shower, the usual stuff for most of us I guess.</p>


<p>At 7AM, I either do some more pair-programming with another cohort member, or take a small nap.</p>


<p>8AM to 9.30AM : Commute. Yes, I live far, and it does suck.</p>


<p>9.30AM - 6PM : Work. I still work from Monday to Friday. One month to go and I&#8217;ll be free of that&#8230;</p>


<p>6-8.30PM : Commute. Some would say &#8220;What? 1 more hour on the way back?&#8221;, and to those I would answer &#8220;Welcome to the french suburbs&#8221;.</p>


<p>8.30PM : Eating. Food is important kids!</p>


<p>9PM : Back to either some more programming with the early birds of my cohort in the states (or those available in the morning), or to a small TV show, movie, or any other entertainment before going to sleep. The idea is that you probably can&#8217;t keep the distance with no entertainment at all.</p>


<p>Then sleep, and go at it again. On weekends, I replace the &#8220;Work&#8221; with spending time with my girlfriend and/or family, but the schedule does not move that much.</p>


<h2>One of the busiest weeks of my life</h2>


<p>Now, The first and biggest concern I had when I thought about having a blog has always been : Will I be able to maintain it, write stuff, regularly?</p>


<p>Well, let me tell you that : If I could think about what to write last week, and write it now, the answer is and will always be : <strong>YES</strong></p>


<p>Last week I was in Holidays. What a beautiful perk of working in France, right? But then on last week, instead of work, I found some more time and energy-needing occupations.</p>


<p>I told you I just got engaged 2 weeks ago&#8230; Well, I had the engagement party last week. So you can cross both saturdays for preparation and the party with everything that goes with it. <br />Then you can add one evening and the next day to going with my siblings and cousins to go meet our grandparents we got in kind of an argument (families&#8230;) some long years ago.<br /> After that, we had a small plan to go meet some friend in Berlin and take a few days off with the fiancee on the way. That&#8217;s 3 days + 1 for preparation of that trip.<br /> Now, one more day after the engagement party to clean up and cool off, and from 9 days off (From saturday to the monday 2 weeks later), I am left with&#8230; 1 day available for the challenges of the week, and the other matters like solving issues with the bank, with other banks, preparing stuff for the bootcamp etc.<br />Oh and of course : I did keep the 4AM to &#8230; late evenings schedule up (except one day, but I blame the hotel and the fact that we didn&#8221;t have wifi in our room)</p>


<p>All in all, let&#8217;s say it was a pretty busy week outside of DBC. Well, you wanna know the funny part? My opinion could be a bit &#8230; tricked by my own week but, I think DBC challenges for this week were huge compared to the others. There was a huge load of really small challenges. Not hard all in all, but definitely long.</p>


<h2>Thank you</h2>


<p><iframe frameborder="0" height="315" src="http://Qt-dev.github.io//www.youtube.com/embed/MMn-c17y-Zs" width="420"></iframe></p>


<p>2 things to say before I go back to Dev Bootcamp-ing :</p>


<p>First : I love to say thanks for everything I am thankful for. If one day I get accepted in Dev Bootcamp because you taught me some strange things about a dead numeral system, I will hunt you down just to be able to thank you (Very specific but that did happen, thank you again Mr Khun&#8230; Who will most likely never read this). I never celebrated Thanksgiving, but I just can&#8217;t wait. <br />And one of the first things I think when I come out of such a week is : Thank god for the people around me that make it happy for me to do that without becoming crazy, or just simply exhausted to the point of no return (no idea if I can say that, but that sounded good in my mind, and guess what&#8230; Aye ame frensh, Aye donte spik vary wale ^.^).<br />So now, thank you again, dear family, friends, and of course special thanks to the fiancee that would go way out of her way to help me get stuff done. I just&#8230; love you ^.^</p>


<p>Second thing : I think blog posts are more fun with music, so everytime I&#8217;ll write one of these big walls of texts, I&#8217;ll try to add some that sets the mood. Some good music that you don&#8217;t necessarily know (or won&#8217;t necessarily like). This week I chose a Japanese from an artist that worked on some old manga I watched when I was younger. That track just&#8230; fits here. Peaceful, and thankful.</p>


<p><br />Thank you for reading that and see you tomorrow for a post about the bootcamp</p>


<p>Quentin</p>

]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Ruby tips : NullPointerExceptions are fun !]]></title>
    <link href="http://Qt-dev.github.io/blog/2013/11/29/ruby-tips-nullpointerexceptions-are-fun-/"/>
    
    <updated>2013-11-29T05:50:00-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2013/11/29/ruby-tips-nullpointerexceptions-are-fun-</id>
    
    <content type="html"><![CDATA[<p>So, DBC prep is well on (expect a bigger post about that some time soon of course), and this week, we got a challenge about refactoring a couple of classes and some calls to these classes about a Drawer and Silverware we&#8217;ld clean and put in it. And our goal here is to refactor and correct the errors we could find.<br/>
After talking with some boots from the cohort (DBC language, read &ldquo;colleagues&rdquo;), I found that people were getting stuck on the exact same part of this challenge, so I figured some may like having some explanation on what&rsquo;s up here. <!-- more --></p>

<h2>The code</h2>

<p>I won&rsquo;t bother you with the whole exercise, let&rsquo;s just get sum the code up as :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Drawer</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span>
</span><span class='line'>    <span class="vi">@contents</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">remove_item</span><span class="p">(</span><span class="n">item</span> <span class="o">=</span> <span class="n">contents</span><span class="o">.</span><span class="n">pop</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@contents</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="n">item</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Silverware</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">type</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@type</span> <span class="o">=</span> <span class="n">type</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">eat</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;Yum yum I eat with </span><span class="si">#{</span><span class="vi">@type</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">our_drawer</span> <span class="o">=</span> <span class="no">Drawer</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="nb">fork</span> <span class="o">=</span> <span class="n">our_drawer</span><span class="o">.</span><span class="n">remove_item</span><span class="p">(</span><span class="nb">fork</span><span class="p">)</span>
</span><span class='line'><span class="nb">fork</span><span class="o">.</span><span class="n">eat</span>
</span></code></pre></td></tr></table></div></figure>


<p>Try and paste that if you want, the error is :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">drawer</span><span class="o">.</span><span class="n">rb</span><span class="p">:</span><span class="mi">23</span><span class="ss">:in</span> <span class="sb">`&lt;main&gt;&#39;: undefined method `</span><span class="n">eat</span><span class="s1">&#39; for nil:NilClass (NoMethodError)```</span>
</span><span class='line'><span class="s1">##Detailling the Problem</span>
</span><span class='line'><span class="s1">Let&#39;</span><span class="n">s</span> <span class="n">translate</span> <span class="n">that</span> <span class="n">error</span> <span class="k">then</span><span class="o">.</span>
</span><span class='line'>
</span><span class='line'> <span class="o">-</span>
</span></code></pre></td></tr></table></div></figure>


<p>drawer.rb:23:in `<main>&lsquo;:&#8220;`</p>

<p>The problem lays in the <em>&ldquo;Main&rdquo;</em> (we&rsquo;ll see about that later in the DBC cursus most likely), on like 23 of the drawer.rb file. so in our</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rubyfork</span><span class="o">.</span><span class="n">eat</span><span class="sb">```</span>
</span><span class='line'><span class="sb">  </span>
</span><span class='line'>
</span><span class='line'><span class="sb"> - </span>
</span></code></pre></td></tr></table></div></figure>


<p>undefined method `eat&#8217; for nil:NilClass (NoMethodError)&#8220;`</p>

<p>So, there is no method called <em>eat</em> for the object <em>nil</em>, from the class <em>NilClass</em>. So far so good.<br/>
That is what java devs would call a &ldquo;<em>null pointer exception</em>&rdquo;.
It is an error where, basically, something is null and your code wants to work with it but it can&rsquo;t. The &ldquo;null&rdquo; I am talking about is the &ldquo;nil&rdquo; object we got here, and the only methods it has are described <a href="http://www.ruby-doc.org/core-2.0.0/NilClass.html" title="NilClass Ruby Doc">&ndash;> here &lt;&ndash;</a><br/>
Now, what is that <em>nil</em> and what is it doing on line 23? And why do we care if it has a <em>#eat</em> method?</p>

<h2>Finding out what&rsquo;s up</h2>

<p>What do is the object that can be <em>nil</em> on line 23? Well, simple : fork.
No other option there, there&rsquo;s only one object on that line, <em>fork</em> is nil. <br/>
So we go a bit up and check out how we defined it, something must have been wrong there.
Definition is on line 22, right above. Since it&rsquo;s the only place where we set a value to fork, that must be where we set it to nil. <br/>
By deduction, on that line, the thing that is <em>nil</em> is <em>our_drawer.remove_item(fork)</em> then.
So, we examine every part of this:</p>

<ul>
<li><em>our_drawer</em> does not put much of a problem. We used it above (not in the example but in the exercise we did), and it would raise an error if we were calling <em>#remove_item</em> from it anyway.</li>
<li><em>#remove_item</em> may not do exactly what we want. It uses <em>#delete</em> with <em>fork</em> as an argument. Now, if you check <a href="http://ruby-doc.org/core-2.0.0/Array.html#method-i-delete" title="array#delete on the Ruby Doc">>here&lt;</a>, this method returns the item if it found and deleted it in the array&hellip; or it returns <em>nil</em> if it is not in the array we call the method from&hellip; So THAT is where we get that nil from, the only <em>return</em> is here, we get a <em>nil</em> from that method. Now, let&rsquo;s check the next thing in the expression just in case.</li>
<li><em>fork</em> is passed as an argument. But then, is <em>fork</em> defined before that? The answer is : NO. That is definitely a problem!</li>
</ul>


<p>Well, that was quite helpful, we now have identified 2 problems that happen in our case. I&rsquo;ll use numbers for further use (&hellip; or just because i&rsquo;m just tired of dots in my lists :p) :</p>

<ol>
<li><em>#remove_item</em> returns <em>nil</em> if it did not find the stuff in the array, that&rsquo;s where our <em>nil</em> comes from.</li>
<li>we pass an argument that has never been created before to <em>#remove_item</em> (if you change the code to print <em>item</em> inside the method you&rsquo;ll see that item is <em>nil</em>, the argument we gave the method was <em>nil</em>). So, there&rsquo;s no way it can find it in an array unless we add the <em>nil</em> object at one point, specifically (but we did not.</li>
</ol>


<p>Right, so now, we just need to solve that!</p>

<h2>A solution</h2>

<p>Nope, not giving you one right now haha. There is not one correct answer anyway, so as long as you correct 1 and 2.Send me a mail or a message on facebook, G+, anything, if you want and I&rsquo;ll show you what I did, but I thought that could be more interesting for people to be able to correct it yourself, but with a clearer understanding of what&rsquo;s happening.</p>

<p>Anyway, once you solve that, no more &ldquo;NullPointerException&rdquo;, no more &ldquo;NoMethodError&rdquo;, the code works.
I know I went into a lot of details and that must be long to read, but I hope you can get a clearer view of what that error was and how it could be cleared with that.</p>

<p>Don&rsquo;t hesitate to tell me if it stll is a bit confusing !</p>

<p>Cheers~</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Because I'm happy~ ]]></title>
    <link href="http://Qt-dev.github.io/blog/2013/11/26/because-im-happy/"/>
    
    <updated>2013-11-26T06:18:00-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2013/11/26/because-im-happy</id>
    
    <content type="html"><![CDATA[<p>So&hellip; here is my first step into the blogging world. (&lt;&ndash; I must have rewritten that sentence a thousand times over the years&hellip; I like to think  of it as the thing that prevented me from blogging so far  ) )<br/>
So here comes my first post, with an introduction, and info about why I am happy, and of course about Dev Bootcamp<br/>
(Warning : Long post ahead&hellip; but don&rsquo;t worry, I&rsquo;ve put videos to help you cope with the long text)<!-- more --></p>

<p>I&rsquo;ve always been the kind of guy who speaks a lot, I&rsquo;ve also been said that I would make a good blogger thanks to that, but that is my very first post in my very first blog.<br/>
As such, I feel obliged to start with :</p>

<h2>A small introduction about me</h2>

<p>So, hi! My name is Quentin and I am a 27 years old french dude who has&hellip; done stuff, here and there.  <br/>
So far, in my life, I can say that:</p>

<ul>
<li>I travelled to 2 different continents (3 in 2 months, take that frequent flyer program!).</li>
<li>As a job, I counted stock, sold clothes to climb the K2, built skateboards, taught kids what France was like.</li>
<li>I studied &hellip; Scientific stuff, then economics, then English/Spanish and their applications (in Law, Economics, Culture), and then Korean, most of them only for one year or two but still&hellip;</li>
<li>I built some webpages (old-school style, back in the days), created a geeky Roleplaying Club in high school, created and managed a podcast about Korea (<a href="http://www.mirae.fr">www.mirae.fr</a> &hellip; all in french), and more recently made an app (<a href="https://play.google.com/store/apps/details?id=com.qdev.craftmeapass&amp;amp;hl=fr">Craft me a pass!</a> on Android)</li>
</ul>


<p>Right now, I&rsquo;m working as a Technical Support Manager (Think <a href="http://en.wikipedia.org/wiki/The_IT_Crowd">The IT Crowd</a>&rsquo;s Roy with a french accent) in a company that works for Digital Cinemas all over the world.<br/>
I also played hundreds of games because I just&hellip; love challenges. And when I feel like I don&rsquo;t have enough of it, I just manage to create a group, a guild, a clan, anything, and then deal with the other challenges that come with it.<br/>
All in all, I like building and managing projects, people, &hellip; anything. One other thing I like is humor. I joke a lot, and like to laugh. Always have and always will  )<br/>
Also, a small trait that seems to surprise most of the people : I give the truth. All of it. <br/>
I once told my fiancee how getting with her does not make others less charming, it just makes her the one I chose and I like to stick to my choices. Long story short, it didn&rsquo;t go very well. But she&rsquo;s my fiancee now so I think can safely say that it ended up OK.<br/>
I also told the listeners of my podcast that I was sorry I made a joke about Korean people&hellip; But if they were that &ldquo;stuck-up&rdquo; they could just stop listening right now since I&#8217;ld make more about any group of people, being in it or not. I never meant any harm in it, and those who don&rsquo;t understand 2nd degree probably don&rsquo;t like what I&rsquo;m saying anyway so&hellip; Why keep on listening then?</p>

<p>But then I tell the people what I like and don&rsquo;t like about them (Not like a douche, telling the truth does not necessarily mean being hurtful). If I don&rsquo;t want to go to your party, I&rsquo;ll explain, I will not be suddenly sick, my grandmother won&rsquo;t die every other weekend, nope, I will bluntly tell you what my reasons are and then we can talk about it if you want.<br/>
Finally (that &ldquo;short&rdquo; introduction may be one of the biggest thing I ever wrote already&hellip;), I will say that I live to help. I don&rsquo;t have anything to compensate (that I know of&hellip;) I am not a bad person that wants redemption or something, I just think that I am very glad to have a roof over my head, a decent body, a decent mind (decent genes all in all, thanks mom and dad), I grew up with my loving parents, I have an awesome house, I also got some skills (nothing fancy or rare, just stuff I know how to do) and I don&rsquo;t care about having that if I can&rsquo;t make that useful for those who would have less of any of that.<br/>
This kind of stuff is what I live for, my goal in life, and I don&rsquo;t intend to change it at any time.<br/>
Now, that may sound like bragging, trying to look good in some way but first, I honestly don&rsquo;t care what you think about that, I&rsquo;m happy with myself, just trying to inform, and second remember what I wrote just a little above :  *  I give the truth. All of it.  *</p>

<h2>Why I am happy~</h2>

<p>Many reasons about it. This title is mostly because of this :</p>

<iframe frameborder="0" height="315" src="http://Qt-dev.github.io//www.youtube.com/embed/y6Sxv-sUYtM" width="560)</iframe>


<p></p>

<p>That songs definitely sets the mood to happy doesn&rsquo;t it?  <br/>
Now, the biggest reason why I am happy, the one that is just amplified by this song is :  <br/>
<strong>She said YES!</strong><br/>
I have been together with my girlfriend, Thuy Nguyen, the girl in my profile picture&hellip; pretty much everywhere (I rarely take pictures without her, and I tend to find pictures very bad when she is not in them anyway) for &hellip; 5 years 9 months and 7 days right now. 2 weeks ago, on the 8th, I took her to the Op&eacute;ra Garnier in Paris, a wonderful place where we first got together. She had no idea why I was taking her there and she honestly thought I was just showing her some new restaurant.  <br/>
Then, I stopped, faced her, and it went like this :  <br/>
&ndash; Do you know how long we&rsquo;ve been together?<br/>
&ndash; Well&hellip; (of course she did not, who counts apart from on the anniversaries?)<br/>
&ndash; 5 years, 8 months, 2 weeks and 4 days. And in that time, we did not have much time for ourselves right? All our anniversaries, your birthday, valentine&rsquo;s day, everything is in the same 2 weeks window&hellip; So I thought, maybe we could get a day to ourselves, right in the middle of nowhere in the calendar, when we could take the day off, every year, and celebrate&hellip; us.  <br/>
&ndash; (Lot of confusion right now, and hunger, she thought I was bringing her to a restaurant, remember?) Well&hellip; sure?&hellip;<br/>
&ndash; And this day, we could celebrate the day when I (get on one knee) asked you : Would you marry me?</p>

<p>No she did not cry, and the first answer I got was &ldquo;What the hell are you doing on the ground, get up already&rdquo;, but she did say yes. And she hugged me more in the next hour than she did in most of our relationship. We don&rsquo;t have a date yet, and are not planning the wedding, but let me tell you that :  <br/>
&ndash; <em>No matter what happens, I am marrying that girl, and the fact that I can work the rest of my life making her happy while she kind of agreed to let me do so is enough to put a smile on my face for years.  <br/>
&ndash; The smile may fade, but that will most likely be because I laugh too much and will just end up having my face hurt when I smile  )</em><br/>
Now, personal stuff set aside, let&rsquo;s get to what many may be reading me right now :  <br/>
<strong>Dev Bootcamp &ndash; Go Banana Slugs!</strong><br/>
Now, with that set aside, I also got accepted a few month ago into the (<a href="http://devbootcamp.com/">http://devbootcamp.com/</a>)Dev Bootcamp</a> in San Francisco. I am in the cohort of Jan 27th-Mar 26th called Banan Slugs.</p>

<p>Before I joined, I searched for former alumni (I also searched for the word alumnus/alumni), because&hellip; let&rsquo;s face it&hellip; It&rsquo;s too good to be true  )<br/>
I then filled the application, made a video to go with it. The rule was : In 5 minutes, teach something to the viewers, and tell us more about you&hellip; Here you go if you want to see how it went :</p>

<iframe frameborder="0" height="315" src="http://Qt-dev.github.io//www.youtube.com/embed/lDTy1peyC5o" width="560)</iframe>


<p>
(Kudos for the best camera(wo)man in the world, I&rsquo;m marrying her! hehe)</p>

<p>Now the idea about joining the Bootcamp, as opposed to what people seem to think, is that they do not teach you stuff about computers in general. They don&rsquo;t just teach you one language. They also don&rsquo;t make it so you can fit in that small case that will allow you to land a job at Twitter or Google.<br/>
<strong><em>What Dev Bootcamp teaches you is not how to develop programs, but how to be a good developper.</em></strong> <br/>
They take Ruby and Rails (if you don&rsquo;t know about it, just wait,I&rsquo;ll post more about it later) as an example to teach you how to organize your code, your project, how to program with others, how to lead and be led, how to manage your time, your energy, the way employers see you, how to apply for a new job, etc&hellip;<br/>
They teach you how to adapt to new people, new challenges, new hypothesis everyday.<br/>
And that, guys&hellip; let me rewrite that : And <strong>THAT </strong>guys is what being a good developper is about.</p>

<p>Think about it this way : What do you think the first developers are doing now (the ones still working, of course). Did they stick to the main language they used? Does that mean that now that we have tablets, phones, etc, we need to train new guys because the developers for the former platforms can&rsquo;t switch?  <br/>
No. Good developers adapt. They changed teams. They changed the languages they used, the machines, the &ldquo;targets&rdquo; (80&rsquo;s computers users are not the same as nowadays&#8217;), they changed everything. And the best at adapting are now the ones doing the best .<br/>
Dev Bootcamp aims at teaching you exactly that. They select those that seems to fit the mold of the untrained soul they have, and then they teach you how to grow from that, in the best direction possible, and then end up becoming a good or even a great developer.</p>

<p>That is what I signed up for.</p>

<p>Now, I will tell you more about the prep work that already started, about the organization, and all that, but this post is long enough already so I&rsquo;ll stop here for now.</p>

<p>I hope you did not feel like you were wasting your time too much, and I hope you&rsquo;ll enjoy the next ones too.</p>

<p>See ya very soon~</p>
]]></content>
    
  </entry>
  
</feed>