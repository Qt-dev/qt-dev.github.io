<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Qt's Home]]></title>
  <link href="http://Qt-dev.github.io/atom.xml" rel="self"/>
  <link href="http://Qt-dev.github.io/"/>
  <updated>2014-03-07T08:59:31-08:00</updated>
  <id>http://Qt-dev.github.io/</id>
  <author>
    <name><![CDATA[Quentin Devauchelle]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    
    <title type="html"><![CDATA[Week 6 - Day 4 - Rest, personal projects, and DBC life]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/03/07/week-6-day-4-rest/"/>
    
    <updated>2014-03-07T08:48:04-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/03/07/week-6-day-4-rest</id>
    
    <content type="html"><![CDATA[<h2>Rest</h2>

<p>When I say rest, I don&rsquo;t mean sleeping all day&hellip; Yesterday, we had to finish some challenges that we had been given a few days before, had a couple of lectures, and then I worked on personal projects here and there. This is what I call rest.</p>

<p>In the end, that was a fruitful day, and a happy one too! I spoke with some people I had never met in the bootcamp, got some info on after-DBC, I learned stuff about languages and frameworks I did not know&hellip; AND, I congratulated my mother for her very happy birthday ;)</p>

<h2>Personal projects</h2>

<p>You can check my github for that. I have a few projects I had been dying to work on, and having some time to do so may make me finish a lot of them really fast!</p>

<p>I won&rsquo;t tell you all about them yet, but I can tell you I expect to have a lot of stuff to do and to use them as a way to show the world my progress!</p>

<p>In the end, these are the things that make you look different, and make the people want to hear about you, and why not even hire you!</p>

<h2>DBC Life</h2>

<p>RAO HAS NO BEARD ANYMORE!</p>

<p>Apart from that, DBC life is fun. It was a slow day, fun things, but then the results of the assessments also kicked in, people dealt with that, and that was a big day for everybody.</p>

<p>And in the end, if I had to keep one sentence from yesterday, I would say :
If you have a lesson to get from DBC, it should be &lsquo;You don&rsquo;t know anything, but that&rsquo;s ok&rsquo;.</p>

<p>No matter how much we learn here, when we get out, we&rsquo;re gonna be asked about what we don&rsquo;t. And we are not going to be asked to know stuff, but to show we can learn, and we don&rsquo;t freak out when we don&rsquo;t know.</p>

<p>So the lesson would be : Stop stressing out, and learn how to google ;)</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Week 6 - Day 3 - Oauth, Other languages/Frameworks, and a fun day with Armando]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/03/06/week-6-day-3-oauth/"/>
    
    <updated>2014-03-06T09:23:33-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/03/06/week-6-day-3-oauth</id>
    
    <content type="html"><![CDATA[<h2>Oauth</h2>

<p><a href="http://en.wikipedia.org/wiki/OAuth">Oauth</a> is a system used in authentification on the web nowadays.</p>

<p>The idea is that authenticating is easy, with password and username/email/name/whatever-id-you-want. But this is not secure enough. Plus, people get tired of logging on every site they use.</p>

<p>Oauth came out in 2010, when people were trying to remedy to that problem with different theories, <a href="http://en.wikipedia.org/wiki/OpenID">OpenID</a> being one of them.</p>

<p>So in the end, they came up with this way to identify an user on one site, and share that identification on every app authorized by this site and the user.</p>

<p>Let me try to explain the process a bit :</p>

<ul>
<li>The app maker registers on the giver&rsquo;s site (Twitter, Facebook, &hellip;)</li>
<li>The giver&rsquo;s site give the app maker a private <strong>API Token</strong>, a code that can be use to identify that app when it talks with the giver&rsquo;s site.</li>
</ul>


<p>&hellip;Time passes&hellip;</p>

<ul>
<li>An user comes on the site, tries to log in</li>
<li>The app redirects to the giver&rsquo;s site where the user is asked to log in. In the background, the app gives the <strong>API Token</strong> on the way, as a proof that the user is coming from there.</li>
<li>The user authorizes his account to be linked/identified on this app. The giver&rsquo;s saves that decision.</li>
<li>The giver&rsquo;s site sends back a <strong>User Token</strong> to the app.</li>
</ul>


<p>Now, the app has an <strong>API Token</strong> and a <strong>User Token</strong>.
Using these 2, the app can ask the giver&rsquo;s site for info (last tweets? send tweet?), and while this is true, the user is authenticated on the site.</p>

<p>In the end, the user only has to login once, and nobody has the user password or anything. And anytime somebody&rsquo;s info is asked for, the giver&rsquo;s site verifies that the asking app has the rights.</p>

<p>This, ladies and gentlemen, is what we played with yesterday ;)
This : <a href="http://blooming-reaches-2179.herokuapp.com">Tweet from Heroku</a> is an example ;)</p>

<h2>Other languages / Frameworks</h2>

<p>The world of development is full of a lot (really&hellip; a tremendous amount) of languages and frameworks. People don&rsquo;t use them the same way, in the same places, but I can tell you that to do one thing, you have multiple tools in development.</p>

<p>In DBC, we learn about Ruby, Javascript, HTML, and CSS, mostly. We cover a few framework for each of those too. But in the end, we are not here to learn languages.</p>

<p>No good developer knows one language by heart.<br/>
&hellip; Let me rephrase and split that that:</p>

<ul>
<li>A good developer does not know fully a language, knowing that is what makes him really good.</li>
<li>A good developer learns new languages/frameworks all the time. One does not &ldquo;know one&rdquo;, but learns many.</li>
</ul>


<p>I try to work on that and get the second part up and running, and that is really fun. Also, using tools made by and for other people is really eyes opening. I love it.</p>

<p>I had ideas about that yesterday and I&rsquo;m thinking I&rsquo;ll learn a bit more about the languages I already approached but did not use that much as soon as I have 5 minutes (probably this weekend).</p>

<h2>A fun day with Armando</h2>

<p>Yesterday, we paired with Armando again.<br/>
I was looking forward to it. He has been down for a bit, with a lack of self confidence and some doubts about his skills, and I was looking forward to doing my best to work on helping him with that.</p>

<p>Well, you know what? He f*cking rocks! We had fun the whole day, finished most of the challenges, and the best part :<br/>
Teachers did not try and assess him. And if they don&rsquo;t, that means that THEY don&rsquo;t doubt him. And one thing that I know :<br/>
If the person that&rsquo;s making it hard on you, teaching you, and taught hundreds before, has no doubt about you&hellip; that probably means you should stop doubting and assume you do (not really fully) know what you&rsquo;re doing.</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Week 6 - Day 2 - Observer design pattern, EE aftermath, and looking for a job]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/03/05/week-6-day-2-observer-design-pattern/"/>
    
    <updated>2014-03-05T09:22:11-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/03/05/week-6-day-2-observer-design-pattern</id>
    
    <content type="html"><![CDATA[<h2>Observer Design Pattern</h2>

<p><a href="http://en.wikipedia.org/wiki/Software_design_pattern">Design patterns</a> are a very important thing in Development. The idea is that experienced developers came up with the idea that no matter the language, the experience, the software they were building, they always ended up on the exact same problems. And then they came up with a &ldquo;simple solution&rdquo; for that, simpler than the problem at least.</p>

<p>So, they came up with design patterns they could use next time they would encounter that same problem. Many of them are useful mainly in statically typed languages like Java or C, but most of them are actually useful, for your own logic development, and for the time you might have to end up using these languages.</p>

<p>Also, since it is a pretty complicated notion, it does show people (like recruiters&hellip;) that you actually know what you are talking about, which is not a bad thing right?</p>

<p>Yesterday, I did a lightning talk about the <a href="http://en.wikipedia.org/wiki/Observer_pattern">Observer Pattern</a>. The idea is that it is a solution to the problem :</p>

<ul>
<li>I have objects that must be aware of changed of a particular object</li>
</ul>


<p>The solution is pretty simple. You actually give all the info to the observed (called observable) object.</p>

<ul>
<li>The observer gets an &ldquo;update&rdquo; method that will be triggered by the observable with the info it sent.</li>
<li>The observable gets a &ldquo;notify&rdquo; method that triggers the update method of the observers</li>
<li>The observable has a list of observers and relative methods (add/remove/number of them)</li>
</ul>


<p>And that is it. According to the language you&rsquo;ll use, you will have modules to do so (<a href="http://ruby-doc.org/stdlib-1.9.3/libdoc/observer/rdoc/Observable.html">Observable in Ruby</a>), Interfaces (like some implementations in Java), but the idea will always be the same.</p>

<p>Now go on and play with it !</p>

<h2>Engineering Empathy Aftermath</h2>

<p>We still have Engineering Empathy in phase 2. Yesterday was the last session, about what triggers us and how to respond accordingly.</p>

<p>I did use that without even knowing about what I was doing. The idea is that when something triggers you, you stop, breathe, think about what&rsquo;s happening, then select the best response and respond. I tend to do that myself, mostly because I am overthinking everything.</p>

<p>Now, yesterday was also 3rd EE session for the phase 1, the Golden Bears. It is a really strong and heavy session, even though it is also a very liberating one. I felt like I wanted to be there for the people and so I spent my evening with anybody I could find, and that was nice.</p>

<p>They are affected, but they seem ok&hellip; You may find it strange, but just like a big brother about his younger siblings, I feel relieved to see they are doing fine&hellip;</p>

<h2>Looking for a job</h2>

<p>Things are going well at DBC, but yesterday I had a bit of time and ended up thinking about jobs. After all, that is one of the endpoint of this program, a reason why I came here.</p>

<p>I know that before I came here, hired was the only site I tried to join, and I just not being accepted. But now, things have changed. I have good proofs of what I can do, I have more mastery, people that can vouch for me&hellip;</p>

<p>I am thinking about that way in advance, but I feel like I want and have to. Being a foreigner, these things may be trickier, so I need to be better, and faster.</p>

<p>So now, time to work on side project to show my worth, and then use that!</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Week 6 - Day 1 - More OOJS, APIs, and changes]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/03/04/week-6-day-1-more-oojs/"/>
    
    <updated>2014-03-04T09:07:05-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/03/04/week-6-day-1-more-oojs</id>
    
    <content type="html"><![CDATA[<h2>More OOJS</h2>

<p>Yesterday, I paires with Harry. We have a great dynamic going on and we ended up building a good MVC system on Javascript for one of the challenges we had.</p>

<p>People don&rsquo;t necessary get it so by the end of the week I&rsquo;ll try to send some code that I came up with for private projects, as an example.</p>

<p>As for the rest, we had a lot of fun and played with that a bit, to the point that we ended up falling short on a problem that apparently many people have. It feels good to not feel like you&rsquo;re outside of that whole development world ;)</p>

<p>The problem we had was : We made a Controller class, and just to Namespace and separate concerns, all the AJAX calls were used from the Ajax Controller, a class of its own.</p>

<p>Now the problem we hit is :</p>

<ul>
<li>Who calls the Ajax controller? &ndash;> The controller</li>
<li>What does the Ajax controller in case of a successful request?  &ndash;> The controller</li>
</ul>


<p>That is a problem, how do you link two objects when you can not create both at the exact same time?<br/>
And so our solution was to pass one as the argument to the other (The Ajax Controller knows about the controller), and then add the Ajax Controller to the controller</p>

<p><strong>In demonstration : </strong></p>

<pre><code class="js">
var AjaxController = function(controller){
    this.controller = controller;
}
// Do stuff with the ajax Controller

var Controller = function(){}
// Do stuff with the Controller

$(document).ready(function(){
    var controller = new Controller();
    var ajaxController = new AjaxController({ 
        controller: controller // First link
    })
    controller.ajaxController = ajaxController; // Link back
})
</code></pre>


<p>In the end, that looks very hack-ish. But then it is actually a question that people have nowadays : How do you do that? And like every good programming problem : There is no right or wrong answer ;)</p>

<p>I&rsquo;ll stick with that for now.</p>

<h2>APIs</h2>

<p><a href="http://en.wikipedia.org/wiki/Application_programming_interface">APIs</a> are interfaces for your program to be able to play with some web apps around. The idea is that instead of posting status via Facebook, you build an app that can do that for you somewhere else. The link between that App and Facebook is that API.</p>

<p>Your app will send a message to Facebook saying (write_status) and that will write the status.</p>

<p>Yesterday we started playing with Twitter and that was fun, and today we play on more&hellip; So expect some nice links in the near future ;)</p>

<h2>Changes</h2>

<p>I feel like DBC changes people. Not necessarily in the best way, but that does change people anyway.</p>

<p>I feel changed, I AM changed. But then, you will be able to see that the next time you meet me ;)</p>

<p>I am more confident, deal with my problems a more logical way, I empathize more with my peers&hellip; All in all, I like to think I took the good in that program. I may also have taken the bad, but then I don&rsquo;t know about that yet&hellip; Only time will tell!</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Week 5 - Day 5 - Awesome project, MVC Javascript, and cohort tribe spirit]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/03/01/week-5-day-5-awesome-project/"/>
    
    <updated>2014-03-01T12:01:41-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/03/01/week-5-day-5-awesome-project</id>
    
    <content type="html"><![CDATA[<h2>Awesome project</h2>

<p>Yesterday we had our second group project of phase 2. The idea of this one is : create a new version of <a href="https://surveymonkey.com">SurveyMonkey</a>. This time, we could choose our groups. Just like &hellip; most of the time. I checked around, saw Armando, he nodded, and we&rsquo;re in the same group!
We grouped with Henry, a new guy who repeated our phase, that I had not had the chance of talking with so far, Chermaine, who I had yet to pair with (really sorry >.&lt;), even though we&rsquo;re in the same accountability group (A group of 3 students of the same cohort that have to take care of each other), and Chris Woodrich, who is really an awesome dude, even though we end up messing with each other all the time.</p>

<p>Armando came with the awesome team name : The Ultimate Amazing Super Best Friends!</p>

<p>You can check how our project is going on : <a href="https://github.com/chriswoodrich/TUASBF/">https://github.com/chriswoodrich/TUASBF/</a></p>

<p>We have an awesome dynamic, we&rsquo;re all very happy to work with each other, and the project is really going well. I can&rsquo;t wait til we present it on monday!</p>

<h2>MVC Javascript</h2>

<p>I won&rsquo;t talk for hours about that, I&rsquo;ve been talking about it for days so you&rsquo;re probably tired about it already, but Javascript is to be used with an object oriented programming style. You can do it, and if you don&rsquo;t you will end up having a lot of troubles.</p>

<p>Now, we work on small JS projects here and there and even though I had some trouble finding where some part of my code would go (View or Controller for the listeners etc&hellip;). Now I do know and I really like it.</p>

<p>I could spend hours explaining how to do stuff, but instead, I&rsquo;ll just say : I do it, I like it, I can explain it if you want, and I&rsquo;ll try to release some code where I do that on my <a href="https://github.com/Qt-dev">Github</a> whenever I can.</p>

<h2>Cohort tribe spirit</h2>

<p>A few things that Sherif (The guru that taught us in phase 1 haha) told us :</p>

<ul>
<li>&ldquo;If you think that you can become developers in 9 weeks, you are insane. All of you. But then, that is that common insanity that will take you there. It is that shared insanity that will make you actually succeed in that.&rdquo;</li>
<li>&ldquo;You are a tribe. You are seen as such, you have a tribe spirit that is the way people and feel your whole group. Every cohort has a different spirit, and gives a different feeling&rdquo;</li>
</ul>


<p>These ideas will not be surprising to anybody who knows the guy. Now, we had a few nice talk about this.</p>

<p>Nowadays, we have 3 cohorts in DBC. The Sea Lions, in phase 3, the Banana Slugs (US!) in phase 2, and Golden Bears in phase 1.
And apparently, even just these 3 have a VERY different spirit.</p>

<p>Sea Lions are apparently like university students. Their first instinct is more to work alone, even though they don&rsquo;t have any problem in forming groups in need be.</p>

<p>The Banana Slugs are seen as overachieving kids. We are the kind of kids that say things like &ldquo;Oh look dad, a mountain! Look at me I&rsquo;ll go climb the thing faster that anybody else!&rdquo;. We crave on challenges that we can work on together and just be as awesome as one could be! Haha</p>

<p>The Golden Bears are much more &ldquo;shy&rdquo;. Compared to us and our 2 hours of questions and ideas exchanges that we had to timebox everyday, the echo I get from some of them I talked to and from their instructors is that they are very silent and studious.</p>

<p>At the end, none of us is right or wrong, but seeing that big of a difference in such a short amount of time is really interesting.</p>

<p>But then, the idea is that the presence of all of these people is what is actually helping us get to the end. We work 15 hours a day, something I would NEVER have thought would happen before coming here. We support each other, help each other, and at the end I think that Sherif was actually right, that common insanity that makes us stay that late, that makes us work our asses off without even realizing that, is what takes us where we are.</p>

<p>We learned Javascript/Object Oriented JS in one week, Everything we could about Sinatra, MVC WebApp frameworks, and all that in one week&hellip; That happens only in such conditions and I am really grateful about that!</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Week 5 - Day 4 - Small and repetitive code, DB Constraints, and connecting]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/02/28/week-5-day-4-small-and-repetitive-projects/"/>
    
    <updated>2014-02-28T09:48:47-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/02/28/week-5-day-4-small-and-repetitive-projects</id>
    
    <content type="html"><![CDATA[<h2>Small and repetitive code</h2>

<p>Yesterday, I worked on portfolio projects. They are projects to check if you know about what we&rsquo;ve been using, for yourself or for the teachers. They are small, easy, and fun&hellip; And everything is relative, like Einstein said.</p>

<p>One of the project was hard, but not because of the complicated content, but because of the amount of repetitive code we had to do.</p>

<p>Don&rsquo;t get the bad idea though, the challenge was cool, but it was about making a big bunch of code that we have been making for 2 weeks now. I did it late, and because of that I just ended up having to re do again, instead of doing it in the middle of my learning.</p>

<p>Anyway, the thing I got from that challenge is : Code is repetitive! That&rsquo;s why people take and make shortcuts. Sometimes, you have to make the same thing again, a few times, and that sucks. Copy pasting and all that works, but in this particular context, it did not&hellip;</p>

<h2>DB Constraints</h2>

<p>I did a lightning talk about DB Constraints. The idea is that the apps that we build with Ruby On Rails, Sinatra, Nodejs, or all these things, use tools that allow you to not have to deal with database languages and small tasks by yourself.</p>

<p>But then, people tend to forget that in the end, we ARE working with databases. And what if one day your app falls apart? What if you want to change some portion of your code, among which is the DB reader thingy?</p>

<p>If you don&rsquo;t put any constraints on your database, then you have a problem because now people can use empty username, 1230912301921309 characters numbers, etc&hellip;</p>

<p>So to prevent that, put constraints!
When I say constraints, you can limit your 4 things (or 5) :</p>

<ul>
<li>:limit : Works for binary, numbers, strings, and texts, and set the max number of characters</li>
<li>:null : Allows (Or not allow, if you give it false) this column to have a null entry in it</li>
<li>:default : Give a default value to that field when none is entered</li>
<li>:precision / :scale : Specifies the number of digits you can give, and the number of digits after the decimal</li>
</ul>


<p>See? That was not hard!</p>

<p>Now, go ahead and go read : <a href="http://apidock.com/rails/ActiveRecord/ConnectionAdapters/SchemaStatements/add_column">this</a>.</p>

<h2>Connecting</h2>

<p>One thing we do here is connecting. We spend all of our time together, we are now a huge family where everybody has to know and live with everybody.</p>

<p>Yesterday, Irene and I &ldquo;cashed in&rdquo; my free meal from Sherif, our big first phase teacher that we don&rsquo;t see much because we&rsquo;re in phase 2 now, because we finished our sudoku solver that solves 170 sudokus in less than a minutes (8.5 seconds whaddup!).<br/>
That was really fun, we ate a lot, and learnt a lot&hellip; again. Incredible, when he is &ldquo;off duty&rdquo;, we learn a lot from him!</p>

<p>He told us a lot about how he had trouble connecting with the new cohort and I feel bad for them.</p>

<p>Today, I went/am going to eat with Strand, and that is awesome. He&rsquo;s a 2nd phase teacher and I feel like I&rsquo;m connecting with everybody and I love it ^.^</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Week 5 - Day 3 - Ajax, MVC and congratulations]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/02/27/week-5-day-3-ajax/"/>
    
    <updated>2014-02-27T11:34:30-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/02/27/week-5-day-3-ajax</id>
    
    <content type="html"><![CDATA[<h2>Ajax</h2>

<p>What is Ajax?</p>

<p>Well&hellip; It is not a <a href="http://en.wikipedia.org/wiki/Ajax_(cleaning_product">cleaning product</a>), or a <a href="http://en.wikipedia.org/wiki/AFC_Ajax">football team</a>. Ajax, or more A.J.A.X. stands for Asynchronous Javascript And XML. <a href="http://en.wikipedia.org/wiki/Ajax_(programming">Wikipedia</a>)</p>

<p>Javascript is a very well known scripting language used widely on the internet nowadays (I would say on webpages, but the use is even wider than that). <a href="http://en.wikipedia.org/wiki/XML">XML</a> is a markup language that looks a lot like HTML (One could even say like two brothers &ndash;<em>hint</em>&ndash; with the same parents &ndash;<em>hint</em>&ndash;&hellip;). Basically, it is supposed to be a way to stock data between tags that look like : &lt; stuff >This is stuff&lt; /stuff >.</p>

<p>In short, what AJAX is is a link between the Javascipt (= the language that makes stuff display dynamically in your page) interact with stuff, using XML (at first, now that part changed), and then giving you info back, without disrupting the lifecycle of your page viewing.</p>

<p>When you get on Facebook and get to the bottom of the page, you know how it loads the rest? AJAX. Javascript sends a request, get data, adds it in your browser. You don&rsquo;t reload, JS does this refreshing for you, and replaces what needs to be replaced.</p>

<p>If you&rsquo;re looking for more examples : You load Buzzfeed, and only the first image loads first: AJAX. You read twitter and it shows you a new tweet on top when one appears: AJAX. You register on any site that is less than 10 years old and it just shows a &ldquo;You have been registered&rdquo;: AJAX.</p>

<p>Let&rsquo;s just say it is used everywhere nowadays, more of less, to enable the &ldquo;one-page&rdquo; web-browsing habits you got used to.</p>

<p>And that is what we did yesterday. The idea, in more technical terms, is that your javascript (or JQuery) sends the same request that you were sending from a link, or a button (<a href="http://en.wikipedia.org/wiki/Representational_state_transfer#Vocabulary_re-use_vs._its_arbitrary_extension:_HTTP_and_SOAP">POST, GET, etc&hellip; RESTful routes</a>), and treat that data. It can redirect if need be, or just print that new alert, tweet, post, or even just do nothing even though the server got all the info you sent (Bad practice guys&hellip; stop doing that, please)</p>

<p>We did it with simple exercises but that was part of the things that I did not know about. Now I do, and I love it. Expect some nice projects with that when I get some time!</p>

<h2>MVC</h2>

<p><a href="http://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller">MVC</a> stands for Model-View-Controller (And yes, today is acronyms day in Quentin&rsquo;s world).</p>

<p>It is part of the &ldquo;Software design patterns&rdquo;. If you don&rsquo;t know about design patterns and you are a developer, please be ashamed of yourself.</p>

<p><a href="http://en.wikipedia.org/wiki/Design_pattern_(computer_science">Design patterns</a>) are a funny and important topic. The idea is that at some point, people realized that no matter the language, the scope of the problems, the kind of apps, etc&hellip; The problems developers were facing could very often fit in one of a very few number of cases. And once they had a solution for a problem, they could actually re use that same solution for every one of the problems they had later that had similar traits with the one they just solved.</p>

<p>So from that, they built &ldquo;patterns&rdquo;, saying : When you have Problem 1, it can be solved with Solution 1. The problem is not necessarily clearly defined and may very well be more widely defined than what they thought about, just like the solution is very often quite hard to understand, maybe even more than the problem itself. Yet, Problem 1 will always be solved by Solution 1. You can make something up, but in the end you&rsquo;ll just redefine Solution 1.</p>

<p>Think about it this way : Some people one day invented wheel (Great example). We changed the kind of wheels we used, the materials we used, and we even made stuff that remotely look like wheels but are not really, will never roll and all that.<br/>
But in the end, where you need something that can help things turn, an object that supports other things and enable it to move, you make a wheel. If you try to make it another way, it&rsquo;ll not really fit until you make a wheel. Maybe one day somebody will find a great counterargument for the wheel. Yet, that solution seems to be pretty useful, we&rsquo;ve been using it for millenias after all.</p>

<p>Design patterns are like wheels of your program. You use them, and you don&rsquo;t have to search for what is the best solution to support your object and make it move easily, you don&rsquo;t reinvent the wheel every time you want to do that (Yes, I used that example for that &lsquo;pun&rsquo;).</p>

<p>If you develop, you should learn about and start using them. You will be asked about them, they will be an insight on your proficiency, and using them will save you a great lot of time.</p>

<p>Among these Design Patterns, MVC is an architectural decision where you decide that instead of putting everything together, you&rsquo;re gonna split things up :<br/>
&ndash; <strong>Models</strong> : They are your object. They know their states, and they can change/add/return theses states. A tree has branch, but a tree does not cut itself. It can just &hellip; be, and have characteristics.<br/>
&ndash; <strong>Views</strong> : What you are going to show that user. Are you going to print stuff to the console? Print in the page? Play that in Gifs? It only knows about itself, and you tell the &lsquo;view&rsquo; to &lsquo;Show the menu&rsquo;, or &lsquo;Give the answer&rsquo; and give it an answer to show.
&ndash; <strong>Controllers</strong> : The core. It has Models and views, and makes things happen between them. It is where you logic should be.</p>

<p>If I have time I&rsquo;ll get you some example of that made by a new boot. She really defined it the way it should, and if you need an example, that will be it ^.^</p>

<h2>Congratulations</h2>

<p>I can&rsquo;t be speaking only about coding. The header says &ldquo;A frenchman discovering the world&rdquo;, not &ldquo;A coder coding code&rdquo;.</p>

<p>So today, I&rsquo;ll just say that yesterday, I got my first congratulations for the work I have accomplished. And that is a big deal for me.</p>

<p>For those who don&rsquo;t know me, I am in DevBootcamp not to graduate&hellip; But to ACE it. I am here to show the world that I CAN do it.
That is what I came for. That is what I work my ass for and I will keep on doing that.</p>

<p>I want to be the proof for everybody I can that, no matter what you&rsquo;re told (I was told when I was a kid that I may just not live up to 20, I was told that I needed a diploma, I was told a lot of things), no matter what happens, what people think of you, you can be what you want to.</p>

<p>I have always believed that one could be what he wanted to be if he poured his heart into it (Too much disney, some may say), even though some times and/or places may have been pressuring hard on that belief, but now I want to be the living proof that this is true.</p>

<p>And if you feel like this is far from the truth&hellip;</p>

<p>Watch me.</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Week 5 - Day 2 - OOJS again and namespacing, helpers, and lack of sleep]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/02/26/week-5-day-2-oojs-again/"/>
    
    <updated>2014-02-26T09:25:50-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/02/26/week-5-day-2-oojs-again</id>
    
    <content type="html"><![CDATA[<h2>OOJS again and Namespacing</h2>

<p>Yesterday I told you about Object Oriented Javascript. Today I have to tell you again :</p>

<p>If you make some software in Javascript and DON&rsquo;T use that, you are a BAD person and should feel BAD.</p>

<p>Javascript is powerful, and the community using it gives you some really good tools that enable you to make almost anything in JS today, but coding, like what I did before, in a whole file with random stuff around is NOT the way to go. One could try and go <a href="http://en.wikipedia.org/wiki/Procedural_programming">Procedural</a>, but then, even if procedural programming is actually a thing, it makes code that is a bit more messy, less maintainable, and less readable for the people working with you.</p>

<p>JS gives you classes, attributes, methods, instances, packs of methods and way to call them, inheritance, and everything you would need to make &ldquo;real&rdquo; software. If you don&rsquo;t use it, then you&rsquo;re not doing it right.</p>

<p>The way to actually name everything to identify and sort them the way you understand it is called namespacing. That IS a thing, and should happen in all of the code you write. That is what I have spent the last articles talking about. That is the way to go when working on big project, even alone, and now you have to do that. You&rsquo;ve been warned. Twice.</p>

<h2>Helpers</h2>

<p>In Dev Bootcamp phase 2 we have thing thing we call lightning talks. In the afternoon, we register at least once a week to talk for 4 minutes about one particular topic. We start the week not knowing about the topic, but then we learn about it, and have 4 minutes to share about it.</p>

<p>Yesterday, I had one about helpers. Helpers are all of these &ldquo;packs&rdquo; of methods that you can use in other parts of your apps. That is the name that has been given to these packs in MVC app frameworks like <a href="http://nodejs.org">Node.js</a>, <a href="http://www.sinatrarb.com">Sinatra</a> and <a href="http://rubyonrails.org">Rails</a> are good examples.</p>

<p>The idea is that you have a separation between your code that shows stuff to the user, the one that does things, and the one that stocks and pulls out data. Helpers are packages that allow one of two things :<br/>
&ndash; Be able to encapsulate a pack of code you use at multiple times in one simple method you would call instead (<a href="http://en.wikipedia.org/wiki/Don't_repeat_yourself">GET DRY !</a>, and use namespacing like I&rsquo;ve been telling you ! )<br/>
&ndash; Be able to use simple code in the things that are supposed to only be able to print stuff to the user (ex : Show a logout button when the user is logged in. You just print something &ldquo;If logged_in == true&rdquo;)</p>

<p>In Sinatra or Rails you can actually even build a whole module to plug in helpers, I did that, that was fun&hellip; Until I realized that people did it before and that I did not need to reinvent the wheel.</p>

<h2>Lack of sleep</h2>

<p>Last week, I went to sleep at 1AM or more every day. After a week of doing that and waking up between 7 and 8 I can tell you : Don&rsquo;t do that.</p>

<p>I have been feeling a bit tired (what a surprise&hellip;) and ended up not being myself, like every time I am tired. When I am like that, I tend to be less patient, and to get things done silently.</p>

<p>Now, DBC is about pair programming&hellip; And so I ended up trying to make things work that were just remotely connected to our project, without sharing much about where I was and what I was doing, and in the end did not get stuff to work. At some point, I had lost :<br/>
&ndash; My focus<br/>
&ndash; My buddy&rsquo;s focus<br/>
&ndash; My time<br/>
&ndash; My energy and happiness (I&rsquo;m grumpy when I don&rsquo;t make things work&hellip;)</p>

<p>We ended up finishing the project and doing it a way I can teach people too, so that&rsquo;s cool, but it took us so much time, I wasted so much time, and I felt so bad for my pair, that most of my day was actually really tiring.</p>

<p>Now, I slept more, and I am learning from my mistakes. today is another day!</p>

<p>(Plus, we had great talks with Armando, and Armando rocks haha. Oh and Armando got a new challenger, Christine is pretty awesome too :p)
(Though, to be fair, Janet, Roy, Nic, and many others rock too haha&hellip;)</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Week 5 - Day 1 - OOJS, JQuery, and hugs]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/02/25/week-5-day-1-oojs/"/>
    
    <updated>2014-02-25T09:04:14-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/02/25/week-5-day-1-oojs</id>
    
    <content type="html"><![CDATA[<h2>OOJS</h2>

<p>Ok, dev things. You probably heard about Javascript. If you want to hear more about it you can check <a href="http://en.wikipedia.org/wiki/JavaScript">-Wikipedia-</a>. Object oriented programming is a way to model your code in objects that interact with others. Again, <a href="http://en.wikipedia.org/wiki/JavaScript">Wikipedia</a> has all the infos.</p>

<p>Yesterday, we had 2 parts in the day. First part was coding Javascript a bad way. Second part was the right way. The right way is apparently OO, Object Oriented. This allows you to actually make your code &ldquo;look&rdquo; like a developer&rsquo;s code. I did some JS before and it was cool, fine, and interesting. But what I was doing was the first thing : Random lines of code altogether, not in objects, functions, anything.</p>

<p>Say I wanted a button to hide another button, I made that code in a small script, not organized, in a random file.</p>

<p>That is NOT the way to do it. It works when you want simple things, but then what if you start having a lot of lines, like you do most of the time? Well what happens is a big mess of a code that nobody knows about because in human langage none of that is understandable. When you make a complicated code to make your page glow, somebody has to read the whole thing to know what it does. If you encapsulate it in a function called &ldquo;Blink&rdquo;, people will know exactly what it is the moment they see it!</p>

<p>And then what if that blink was a function of the object &ldquo;PageManager&rdquo;? Well, then you have very understandable code, manageable, maintainable, and definitely object oriented.</p>

<p>Building JS code without Object-Oriented Programming is like trying to build houses without any plan. Yes, sometimes the house does not fall apart. But the house is not maintainable, you have no idea about what&rsquo;s up with it, and if you do that, you&rsquo;re a bad person and you should feel bad about yourself ;)</p>

<h2>JQuery</h2>

<p><a href="http://jquery.com/">JQuery</a> is an open source library. People thought Javascript lacked function and could use simplification of some others, and so they built that tool with special functions, in Javascript, that give you that extension, that package of code people would use.</p>

<p>That simplifies web a lot. But then&hellip; That is a very risky path to take. People tend to think that because it is easy, they don&rsquo;t really have to code it any other way that like a very long &hellip; bunch of code that does stuff with the page. No object orientation, no namespacing (Naming the things you just build, objects and functions), and in the end&hellip; No readability.</p>

<p>If you do that, well, just like this sentence in my first part : You are a bad person and you should feel bad about yourself!</p>

<p>Coding is not about making something work right now, coding is about building things, and when you build you plan, and organize everything. It works for Houses, Cars, Planes, and definitely for programming.</p>

<p>A bunch of code, be it JQuery, Javascript, Ruby, C, any langage whatsoever, should be organized.</p>

<p>So yesterday we learned that. In the morning we randomly JQuery-ed pages around the web, and on the afternoon we started encapsulated everything and naming what we did.</p>

<h2>Hugs</h2>

<p>I will not complain, not again. But what I did yesterday was talk. I talked about things in my life I did not like, feelings I had that are not out in the open all of the time. Dev Bootcamp tend to do that to people.</p>

<p>But then yeah, sharing with everybody around helps a lot in solidifying thoughts in my mind. In a way, it is my own therapy!</p>

<p>So yeah, yesterday, I talked about my life. I talked about why I don&rsquo;t want to go back to France. Any other country but not France. I talked about what I felt&hellip; And so I got a lot nice feedback from people, plus hugs for the bad parts.</p>

<p>I&rsquo;m happy and grateful I am among all of these people, and I am not looking forward to having to move on, out of DBC ;)</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Week 4 - Day 5 - Pressure, accomplishment, and more work]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/02/22/week-4-day-5-pressure/"/>
    
    <updated>2014-02-22T00:19:23-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/02/22/week-4-day-5-pressure</id>
    
    <content type="html"><![CDATA[<h2>Pressure</h2>

<p>Yesterday was our first group project day of phase 2. The subject was &ldquo;A Flashcards Game&rdquo;.</p>

<p>We had until noon to find a whole plan for a MVP (Minimum Viable Product), that we could complete before 5PM. Then at 5PM we had to present the project. We have the rest of the weekend to work on it and on Monday we&rsquo;ll present the final release.</p>

<p>With that being said, we also got lectures, and lightning talks (short lectures on specific topics made by other students), and so our afternoon basically started at 3.20PM&hellip;<br/>
So with that, plus the 6 people that never really paired altogether, it ended up being a huge mess.</p>

<p>If you know me, you know that if there is one goal that I have in life, one thing that I am confident in, one thing that I like to do, it is : Leading groups.</p>

<p>So today, I took the whiteboard, tried to planned a bit, and we went on. We were 6 so it was a bit of a mess, but once we got the ideas all on paper (or whiteboard&hellip;), the rest was easy.</p>

<p>The problem though, is that nobody handles pressure very well, nobody including me, especially with the exhaustion after this week. I ended up going around trying to fix every problem of the team, and people ended up panicking a bit and falling in easy traps.</p>

<p>In the end, we were literally 10 minutes short when the presentation started (I coded for 10 minutes when people started talking and got it working decently&hellip;)</p>

<p>The after presentation was much easier. I explained everything I knew that could be useful for the rest of the team, then we separated tasks, and went on to finish our first release. Expect a link and more info on Monday when we deliver!</p>

<p>I have to say, though, that going ending up listening to some music I had somewhere on my laptop made me very nostalgic, like if I had not been in France for years, but also helped calming me. I now have a rage, a will to conquer. I will succeed!</p>

<h2>Accomplishment</h2>

<p>A few accomplishments this week :</p>

<ul>
<li>I got to know the new cohort and they are really awesome. I managed to spend a lot of time doing that, while helping my cohort, learning, and finishing many challenges. I count that as a damn good achievement, if not the best I have every felt so far.</li>
<li>We finished that MVP, managed to split everything correctly, and things are going well for monday!</li>
<li>I managed to learn enough to not be categorized in &ldquo;I am good in this skill&rdquo; for anything that we learned so far. I understand what I am doing on every part of every challenge, I learned about everything we use and can use and make everything without frustration. That is something that I will be proud of for a while. Now I do need to keep up with that</li>
<li>Even if I am not a native, struggle with my accent and my language skills sometimes, and I did not lead any team for a while, I can still make myself useful in organizing our groups. It&rsquo;s a relief, because with the knowledge we accumulate in here, sometimes I&rsquo;m afraid I&#8217;ld just forget the things we don&rsquo;t use&hellip;</li>
</ul>


<p>And finally a new one that is not for me :<br/>
My mother, who has been struggling to lose weight for a while, is finally losing enough that I can even start thinking if she did not lose a leg or something. (I have ways to keep track, call me big brother).</p>

<p>That may be nothing to you, but I want to say that : I am proud.</p>

<h2>More work</h2>

<p>The weekend is going to be full of work everywhere. I want to show my sudoku solver to phase 1 guys so that they would do better than me, but I also have to work on the group project, I have portfolio projects, and I have personal projects on the side. 24 hours days suck.</p>

<p>Oh and my first portfolio project is up. It is not full but I&rsquo;ll finish that in the weekend.
You can check it at : <a href="http://quentins-notes.herokuapp.com/notes">Quentin&rsquo;s Notes</a></p>

<p>It is a note-taking app. Not very beautiful, and the code (I&rsquo;ll release that later) is not very glorious, but that&rsquo;s the first one, and it does work ;)</p>

<p>Have a great weekend everybody and see you&hellip; maybe later this weekend actually&hellip; If I find a way to stop time to write.</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Week 4 - Day 4 - Confidence, (Lack of) sleep and links]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/02/20/week-4-day-4-building/"/>
    
    <updated>2014-02-20T08:51:00-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/02/20/week-4-day-4-building</id>
    
    <content type="html"><![CDATA[<h2>Confidence</h2>

<p>Yesterday, we paired with Ivan. He is awesome! And we completed the blog engine with everything that we need. It now works, has tags, user management, perfect!
The only thing is that it is not beautiful, but we got what we wanted from that. You can see that here : <a href="http://evening-beach-8495.herokuapp.com">Our super blog engine~</a></p>

<p>But then I realized it took us more time than the others. I feel very confident and could explain every line of code in all of that, but then what if I just spent too much time on that?</p>

<p>I feel like Phase 2 is hard on confidence. I complete stuff, learn all the time, and then compare myself.</p>

<p>But then, we got code review. At the end of that, I know that my work is fine. My code is clean, upgradable of course, but not needed upgrades, and not with the things we know so far.<br/>
Another thing that actually helped me was : We took 45 minutes with matthew, and we created our own version of <a href="http://bit.ly">bit.ly</a>. I&rsquo;ll share the link when I have it deployed ;)</p>

<p>So in the end, we took more time on the main challenges&hellip; And that gave us the possibility to finish the rest much faster. So in the end, I am still in the race&hellip; We are ALL! But we need to keep on going.</p>

<h2>(Lack of) Sleep</h2>

<p>First phase was cool. We live nearby, we work until late, but then we go back fast, sleep, and come in late in the morning.</p>

<p>Phase 2 is not like that. The fact that I did not feel really confident about the amount of work ended up making me, and a lot of us, go back home later and later everyday. Yesterday, we got back home at 1AM&hellip;</p>

<p>So in the end, bye bye the 8 hours nights for this week&hellip; But then I need to sleep, because DBC is a marathon, not a sprint. And less sleep &ndash;> less effective the next days. So this weekend, I&rsquo;ll sleep. A lot.</p>

<p>It is my plan, and I will stick to that! If not, I&rsquo;ll get hit very hard by my fiancee&hellip; I am scared.</p>

<h2>Links</h2>

<p>Everything is linked. We are all, the things we do are all, the whole world is just a big net. In DBC, and especially in the hard times we are facing sometimes, it just makes us connect more. I feel like everybody around me is now part of my family. Even the new cohort are like little brothers and sisters I just got.<br/>
I love that. I love that new family, every one of them! (Or maybe not Matthew? I haven&rsquo;t decided yet, he&rsquo;s ok as Glenn)</p>

<p>Plus, small things make me think about that big net. Yesterday was a conference by a developer that works for <a href="http://www.zendesk.com">Zendesk</a>. Zendesk being the tool that I used in my work before DBC&hellip;</p>

<p>Things are related, that&rsquo;s it. I don&rsquo;t believe in randomness, I do believe in links too complicated to be understandable, but not in randomness.</p>

<p>Anyway, back to work now, expect some news tomorrow!</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Week 4 - Day 3 - Building, Testing, and deception]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/02/20/week-4-day-3-building/"/>
    
    <updated>2014-02-20T08:51:00-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/02/20/week-4-day-3-building</id>
    
    <content type="html"><![CDATA[<h2>Building</h2>

<p>So, yesterday&rsquo;s challenges were : Build apps. In the morning, we had to finish the Craigslist one that we started the day before, and in the afternoon, we had to make a non-authenticated blog.</p>

<p>The teachers have to change a lot from last phase 2 program. We are different, and our phase 1 was so different than previous cohorts&#8217; than in the end, we don&rsquo;t code like our big brothers and sisters at all. While some of the previous cohorts (Thanks to their program/material ) tended to focus a lot on speed, and quantity, we tend to spend a ton of time on specific challenges, to master them to the end. While some would probably go for the &ldquo;Quantity of knowledge&rdquo;, we are going for &ldquo;Mastery&rdquo;. So in the end, while previous cohorts finished 10 challenges by the end of day 3, we finished only 4 but we did learn just as much and mastered a lot of things that previous people did not know about. An example would be Rspec testing. We literally spent all of yesterday testing&hellip;</p>

<p>Anyway, at the end we finished one app, with Johnny : <a href="http://quentin-johnny-anon-blog.herokuapp.com/">Anonymous Blog</a>. It is not beautiful, not responsive, nothing like that, but the idea was not to make beautiful things, but to make a functional blog system that allows you to have posts that can have tags, and tags that can have many posts, with the corresponding pages.</p>

<p>We are about to finish Craigslist so I&rsquo;ll show you that right after.</p>

<h2>Testing</h2>

<p>We tested! For 2 days!</p>

<p>In the beginning, we just started to assert that things we wanted were equal. If we call &ldquo;5 + 5&rdquo;, we ask for it to be equal. That was phase 1.</p>

<p>Then we started playing with some more tests, witnessing teachers/talking about re making Rspec (The testing suite for testing in ruby. Think about it as a toolbox with a LOT of tools).</p>

<p>Now in Phase 2, we have Rspec, we have other tools, and we need that. The syntax is easy, very close to english. For example :</p>

<pre><code class="ruby">expect(5+5).to be 10</code></pre>


<p>And so the hardest part was : figuring out how ENGLISH it was. Is it &ldquo;.to&rdquo;? Is it &ldquo; to&rdquo;? Do I want to test if &ldquo;5+5 =10&rdquo; is true? or if &ldquo;5+5&rdquo; is 10?</p>

<p>That, guys, is what we spent two days working on. We figured out a lot (and for future reference for students : <a href="http://myronmars.to/n/dev-blog/2012/06/rspecs-new-expectation-syntax">You should not use should! but expect is cool</a> and <a href="http://rubydoc.info/github/thoughtbot/shoulda-matchers/master/frames">Shoulda is your best friend if you&rsquo;re testing Sinatra or Rails&hellip; Anything with ActiveRecord, even if it needs should and not expect</a>), but it did take a lot of time.</p>

<p>Now, I feel like I know much more about things like one a quote from one of my favorite books : “You don&rsquo;t have to test everything to destruction just to see if you made it right.”, Neil Gaiman, <a href="http://www.amazon.com/Good-Omens-Accurate-Prophecies-Nutter/dp/0060853980/ref=sr_1_1?ie=UTF8&amp;qid=1392918350&amp;sr=8-1&amp;keywords=good+omens">Good Omens</a>. Testing is good, but can be time devouring if not done right.</p>

<p>But anyway, let&rsquo;s not talk about that more, there is always much to write and read about that, but there are places and times to do so!</p>

<h2>Deception</h2>

<p>Yesterday I was disappointed by <a href="http://www.interflora.fr/">Interflora</a>. If you don&rsquo;t know that brand, it&rsquo;s a flower selling service that is offered in France. It is a chain, you hear a lot about it, and so I thought I would use it when I needed that kind of service.</p>

<p>Yesterday was my fiancee and I&rsquo;s <strong>6th anniversary</strong>. I can&rsquo;t be with her (Obviously&hellip;), so instead, I planned on making the biggest bouquet I could find delivered at her house when she would be coming home on this day. That was a long time plan, I kept the exact money I needed on my french bank account, I did some research to find how to get flowers delivered, and talked to a lot of people about that to never ever forget.</p>

<p>Then, a few days ago when I got the confirmation that I had the money I needed to do so (last week), I took the biggest chain I could find, for safety, I took the biggest bouquet I could find, and make it delivered at 4PM at her house, right after she comes back home from work.</p>

<p>Yesterday, when she woke up, I did not even send her a text. She was, of course, disappointed, but I was planning on that (and am very bad with time differences sometimes)! She thought I had forgotten that fateful day! But then she would be so happy when she would get back home from a long and hard day and find these flowers!</p>

<p>But then&hellip; No flower was delivered. None. I checked the time, checked in with her to see if she had them, check the site to be sure they were delivered, and the site even told me &ldquo;The flower delivery guy has the order&rdquo;, which eventually turned to &ldquo;Your flowers have been delivered&rdquo;&hellip; But none got to her house. So I had to explain everything, my plan fell apart, and today she called them to check about the order and&hellip; Guess what? &hellip; Apparently the girl on the phone told her the delivery guy never got the order.</p>

<p>So in short : I planned, I payed, went for safety over better shops, and in the end I feel just like an ass that did not do anything for our 6th anniversary, but just a couple of texts saying that I love and miss her.</p>

<p>I am so sorry, Thuy, I am very unhappy about that, and I will never stress that enough: <strong>I WILL NEVER USE INTERFLORA AGAIN IN MY LIFE</strong></p>

<p>Time to go back to coding now, see you tomorrow ;)</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Week 4 - Day 2 - Testing, Helping, and buying]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/02/19/week-4-day-2-testing/"/>
    
    <updated>2014-02-19T09:32:14-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/02/19/week-4-day-2-testing</id>
    
    <content type="html"><![CDATA[<h2>Testing</h2>

<p>Yesterday, we paired with Elliot, a new Banana Slug who is re doing Phase 2. We had 4 challenges&hellip; and ended up not really finishing one. We had a great dynamic, we both learned tons and spent most of the day working on testing with <a href="https://relishapp.com/rspec">Rspec</a> on Sinatra, the tool we&rsquo;re working with at the moment.</p>

<p>The challenge we worked on was making a simplified version of <a href="http://sfbay.craigslist.org/">CraigsList</a>.<br/>
So to do that you need to meet these requirements :</p>

<ul>
<li>The front page creates a list of categories</li>
<li>Each category has many posts</li>
<li>A user can create a post in a category, and/or create a category</li>
<li>A user that created a post gets a key/url that allows him and only him to edit or delete that post</li>
</ul>


<p>For that, we created tests, a lot of them. But then we forgot one of the basic principle : When you finish writing your test, you need to make it pass before working on the next one.</p>

<p>Just for that, we worked and learned a lot but being at the end and having to work on all that from scratch was a mess and we ended up working on other things.</p>

<h2>Helping</h2>

<p>So, I was told I am a patient person. Hell, I was even talk this very morning that I was a Cool person! Also, I already said that I have a bit of experience with the stuff we work with.</p>

<p>From that, I can tell you that I like helping, and spend a lot of my days doing so.</p>

<p>Yesterday, we worked with Elliot, and I actually spent a lot of time trying to solve a lot of problems and explaining what we did to the people who were stuck. People came, people go, came again, and we spent like half of the day working on solving people&rsquo;s bugs. I have no problem with that, and I like to think that I learn much more by doing that than by just coding by myself, but then I also feel bad for Elliot who basically spent half of his day not &hellip; working on solving our problem.</p>

<p>When we thought about stopping with that craigslist challenge, I went around and tried to help the people that I had not seen before. I ended up working on stuff with Golden Bears, and that was fun too (And took less of Elliot&rsquo;s time, so I&rsquo;m even happier about that haha)</p>

<p>In the end, that was a fun day anyway.</p>

<h2>Buying</h2>

<p>I started buying a couple of things. First thing is that I bought socks and underwear. I ended up in Uniqlo this weekend, a brand I really like, and they had sales&hellip; That coupled with the fact that I did not bring enough socks to have at least a 7 days period before I need any laundry made me buy a lot of socks&hellip; and then other stuff on sales haha. Don&rsquo;t worry though, I took advantage of the Dollar being lower than the Euro, and the conversion being a 1 to 1 in everyday&rsquo;s prices.</p>

<p>Another thing I had to buy was a beard trimmer. I was thinking about going to the barbershop (because the US HAS barbershops), but I ended up not having the time, the opportunity, or even the reason since I feel like spending valuable time there would be a waste if I just wanted to trim a bit.<br/>
So instead of that I bought a beard trimmer, and played with it. I spent a lot of time playing with it yesterday. I spent a lot of time playing with it today, and now I love my beard even more.</p>

<p>Now, I also bought other stuff, but then some are surprises so&hellip; brace yourself, news are coming tomorrow too ;)</p>

<p>PS : Today is my fiance and I&rsquo;s 6th anniversary&hellip; I love you Thuy, you make me happy and I will do my best to make that happen for you to&hellip; Everyday of the rest of my life.</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Week 4 - Day 1 - New people, New challenges, Personal Projects]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/02/18/week-4-day-1-new-people/"/>
    
    <updated>2014-02-18T08:50:01-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/02/18/week-4-day-1-new-people</id>
    
    <content type="html"><![CDATA[<h2>New People</h2>

<p>Welcome to the Golden Bears!<br/>
Yesterday was our Phase 2 first day, but also Phase 1&rsquo;s first day. A load of new people arrived in that small place that is DBC&rsquo;s current office, and so, we had to welcome them!</p>

<p>The idea is that we got to get here at 8-8.30AM. Then, we shouted, gave advices, talked, ate,&hellip; All in all, a very good day!<br/>
The new guys look cool, and it was really nice to see them approach the problems we had a different way. People ended up, from what I saw, working a lot on challenges where we did not really work much, and not care much about the ones we spent a lot of time on. That was refreshing, and fun to discover new bugs, new problems. Different approaches, different paths, I can&rsquo;t wait &lsquo;til they get on harder problems and blow my mind with problems I can&rsquo;t solve&hellip; again!</p>

<p>And among the new people, they have another french dude! Plus, they also have a Korean girl who lived in France&hellip; New people to bother with conversations in random languages!</p>

<h2>New Challenges</h2>

<p>We started phase 2. Phase 2 is more about web development. We play with <a href="http://www.sinatrarb.com">Sinatra</a>, and are starting to make stuff that is actually stuff we can share with people who are not developers and they can use it and even get impressed with that with some luck.</p>

<p>On these first challenges we paired with Jose. We had a great dynamic, no complex, and ended up helping each other into not getting stuck much, and completing the challenges. I feel like I learned a lot, and I really enjoyed that day. Even when I would think I was spending too much time on something, I checked around and found out that we were actually going quite fast. That problem was taking a bit more time than the rest of it, but then we went a bit fast on the other things and so in the end, what was confusing was our own change of pace more than the real speed at which we were going at that moment.</p>

<p>Anyway, at the end of the day I learned, I worked, finished what I wanted, and if I had to sum it up&hellip; it was a great day.</p>

<h2>Personal Projects</h2>

<p>Now we can work on stuff that we can show to &ldquo;normal&rdquo; people. But then we&rsquo;re also using some stuff that I already know. I am not nearly good enough at all of these, but I do have some experience on some of these topics, and could just use that and be fine with that. But then I am not here to take the easy path. I am here because I want to learn.</p>

<p>To do so, I figured (= People told me I should&hellip; ) I&#8217;ld start working on some personal projects. I have ideas, things to do, and so why not learn by pushing even further and work on that, independently of the things we work on.</p>

<p>I&rsquo;ll try to work on blog articles to explain what I do, and share as much as I can. First day&rsquo;s work was quite long so I ended up not being able to do much, but expect more once I have more time!</p>

<p>Also, phase 2 is full of &ldquo;Portfolio Projects&rdquo;. We&rsquo;ll have a lot of them, to be delivered on sundays. I&rsquo;ll share every one of them, and try to explain the thought process every time I work on one, so that&rsquo;ll be another thing to look for!</p>

<p>Anyway, time to get back to coding, see you guys tomorrow!</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Week 3 - Day 5 - Party~]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/02/16/week-3-day-5-party/"/>
    
    <updated>2014-02-16T14:37:26-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/02/16/week-3-day-5-party</id>
    
    <content type="html"><![CDATA[<p>&lsquo;twas the day before the end of the phase. People were happy, exhausted, and alcohol and songs mixed up to help the moods enlighten.<br/>
Week 3 Day 5, everybody has had his assignment. The outcome of these assignments is just an advice, then people had time to make their choices. Some of our cohort (2 I think, but we&rsquo;ll get the confirmation on monday) chose to go back to work on the same phase again, not feeling ready for the next one yet yet. Most chose to go on to the next level of difficulty. And That applies for phase 1 as for phase 2.</p>

<p>One thing to know is that there are 2 differences between a phase and the next one.<br/>
The first difference is : The next one is always more difficult that the current one. It starts higher, has a higher rhythm, everything will be harder.<br/>
The second one is : The next phase will get harder much faster that the current. You start higher, and you&rsquo;ll have more work, to do in less time. More projects, and you&rsquo;ll have to learn things faster, and better.<br/>
Behold, fellow students, winter is not coming, Mayhem is.</p>

<p>Now, on the last friday of each phase, everybody knows where they&rsquo;re going, phase 1, phase 2, phase 3. Everybody finished their projects, presented what they wanted, and now they just have to &ldquo;wait&rdquo; for monday. So on this friday, we get beer, pizzas, mics, music on the big screen, and we partayyyyy~</p>

<p>Wait is a big word though, everybody who was in this program will tell you that. New material, new studies and all that are on the next monday so on this weekend, people are stressed out and tend to study as much as they can about the new stuff we&rsquo;ll have to deal with on the next monday.</p>

<p>For me, I spent one day discovering stuff. I went to Target, Whole Foods. I went to the Chinese New year&rsquo;s parade in San Francisco. And now, I am studying a bit about Sinatra and stuff. Things are going well, but I prefer resting before the mayhem. It&rsquo;ll get crazy whatever I do, so I might as well just rest before that ;)</p>

<p>Anyway, see you on tuesday for news about monday&hellip; And the new cohort! And Welcome to the Golden Bears!</p>

<p>(PS : Marching bands are AWESOME! :
<img src="http://i.imgur.com/2Tl0g0Ll.jpg" alt="A nice picture of me in there!" />
)</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Making a new faker gem]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/02/14/making-a-new-faker/"/>
    
    <updated>2014-02-14T20:36:16-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/02/14/making-a-new-faker</id>
    
    <content type="html"><![CDATA[<p>Let&rsquo;s me sum some stuff up first before I start :</p>

<ul>
<li>Gem : A Gem is a &ldquo;library&rdquo;, a pack of code, in the programmatic language we call Ruby, that enables us to use functions not built in the languages without having to rewrite the code. When one feels he has enough code to share, he can wrap it up in a &ldquo;Gem&rdquo; that will be easily installable and usable by the other Ruby programmers.</li>
<li>Faker : Faker is a gem that basically gives you random data. Let&rsquo;s say you want to make a huge database and want to test the load for when you have more than 1000 users. Instead of writing either 1000 times the same name or use 1000 names you write one by one, Faker will generate a random one for each of these entries. Pretty useful.</li>
</ul>


<p>But then, Faker generates what it has been built for. Generating team names, or even slogans, are not what it has been made for. So as a 2 days project with my fellow boots of Phase 1 DevBootcamp we created one that made the things we want. You can check the code here : <a href="https://github.com/Qt-dev/cool-faker">Github</a>, and more info on how to download the gem on : <a href="https://rubygems.org/gems/cool_faker">Rubygem</a>.</p>

<p>Basically, we used <a href="http://bundler.io/v1.5/rubygems.html">bundle</a> to make the gem architecture, the files we needed. Then, we took a look at how Faker was built and decided to go around that same way, with our data stocked in a yaml file, and using the <a href="http://ruby-doc.org/stdlib-2.1.0/libdoc/yaml/rdoc/YAML.html">yaml</a> module to load it and get the data we wanted in ruby.</p>

<p>And we end up with a gem that has 4 different functions :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">CoolFaker</span><span class="p">:</span><span class="ss">:Character</span><span class="o">.</span><span class="n">name</span>
</span></code></pre></td></tr></table></div></figure>


<p>generates a random Character name from a famous movie, or tv show. The titles include The Lord of the Ring, Superman, Starwars, friends, or futurama.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">CoolFaker</span><span class="p">:</span><span class="ss">:Character</span><span class="o">.</span><span class="n">name_from</span><span class="p">(</span><span class="n">movie_or_tv_show</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>generates a random name from the movie or tv show that you called.
Your options are :</p>

<ul>
<li>friends</li>
<li>entourage</li>
<li>sex_and_the_city</li>
<li>batman</li>
<li>startrek</li>
<li>superman</li>
<li>star_wars</li>
<li>the_lord_of_the_rings</li>
<li>napolean_dynamite</li>
<li>snow_white</li>
<li>back_to_the_future</li>
<li>the_wizard_of_oz</li>
<li>toy_story</li>
<li>the_simpsons</li>
<li>futurama</li>
<li>monty_python</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">CoolFaker</span><span class="p">:</span><span class="ss">:Team</span><span class="o">.</span><span class="n">slogan</span>
</span></code></pre></td></tr></table></div></figure>


<p>generates a random slogan from a 587 quotes database</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">CoolFaker</span><span class="p">:</span><span class="ss">:Team</span><span class="o">.</span><span class="n">name</span>
</span></code></pre></td></tr></table></div></figure>


<p>generates a team name from a list of adjectives and a list of animal names. Expect some funny names, gender-confused pandas is a good one ;)</p>

<p>With all that, we ended up making the gem with a simple</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="n">build</span> <span class="n">cool_faker</span><span class="o">.</span><span class="n">gemspec</span>
</span></code></pre></td></tr></table></div></figure>


<p>And then send it to rubygems.org, and here we go.</p>

<p>All in all, we ended up shipping a gem without knowing about gem building/shipping, building dozens of tests without knowing about rspec&hellip; a good 2 days of intense learning, a lot of fun, and we end up with an usable tool. I&rsquo;m pretty happy about it!</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Week 3 - Day 4 - Group project and good news]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/02/14/week-3-day-4-group-projects/"/>
    
    <updated>2014-02-14T09:41:20-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/02/14/week-3-day-4-group-projects</id>
    
    <content type="html"><![CDATA[<h2>Group Project</h2>

<p>Yesterday we started a new group project. This time, it&rsquo;s a 2 days stretch. You can follow how it&rsquo;s going on <a href="https://github.com/Qt-dev/cool-faker">Github</a>.</p>

<p>The idea is that we are building an open-source project. More specifically, we are building a Ruby Gem (A code library, a set of tools for people who use ruby) that will generate random people names, team names, and useful info like that from a database of funny and famous words/names/quotes. The idea is that there is a gem called &ldquo;Faker&rdquo;, and we are building the cool version of this one, with Armando, Jamie, and Nicholas.</p>

<p>So far, it&rsquo;s doing good! I got my voice back so I can participate much more in whiteboarding and all that, we planned everything decently and managed to get an MVP (Minimum Viable Product, the smallest thing you could build on your idea) in half the time. We&rsquo;re pushing for more options and some kind of implementation to show nice usage of that gem.</p>

<p>It&rsquo;s exciting to be working on some tool that may very well be used by others all around the world. Plus, learning how to make gems is a very interesting thing. I think that when I have time later, I&rsquo;ll try to make some gems just for the sake of helping around. Open-source is awesome!</p>

<h2>Good news</h2>

<p>Among the good news :</p>

<ul>
<li><p>I may see my fiancee before I come back. This is by far the best news I could ever had heard. I miss her, and knowing that I may see her sooner than I expected is just the best thing that could have happened.</p></li>
<li><p>I had a beer with Jonathan and got more info about after Dev Bootcamp. That was such a relief. Coming here as a frenchman, I just had no idea how the job market was, and how things were supposed to happen after that. I kinda get ideas from here and there, but finally being able to have some feedback from a guy who has the same experience, and comes from the same place, is really a relief. Now I just have to continue giving my best &lsquo;til the end of these 9 weeks.</p></li>
<li><p>I&rsquo;m going to Phase 2! I got my assessment and it went ok. I overthought part of it so I wouldn&rsquo;t say I did perfectly, but with the goal being : Assess whether I know Phase 1 material or not, I did ok for that. That is perfect! So now it&rsquo;s time to learn even more!</p></li>
</ul>


<p>Anyway, going back to the project&hellip; See you tomorrow!</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Week 3 - Day 3 - EE Cooldown, ActiveRecord and My first solo day]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/02/13/week-3-day-3-ee-cooldown/"/>
    
    <updated>2014-02-13T08:41:13-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/02/13/week-3-day-3-ee-cooldown</id>
    
    <content type="html"><![CDATA[<h2>Engineering Empathy Cooldown</h2>

<p>Two days ago was our last Engineering Empathy session of Phase 1. Like the other cohort told us : &ldquo;You thought the first session was heavy? Wait &lsquo;til you see session 3&rdquo;.</p>

<p>First week was &ldquo;The superego&rdquo;, and the exercise that we got was &ldquo;Share what your inner voice tells you&rdquo;. This week was &ldquo;Dive deeper in what you let people know about you&rdquo;&hellip; And so we sat in circle to tell people stuff, while starting every sentence with &ldquo;If you really knew me&rdquo;. Now let me tell you guys&hellip; There were tears, hugs, revelations, but no shocked reaction, no judgement, nothing like that. And everything told in this room stays in this room.</p>

<p>Diving deeper than the usual in what you tell people is an exercise that does make us grow, but that also hits you hard at the moment you do it. And listening to all of the others&#8217; is not even easier. I think I can safely say that I will keep that day in my mind for a very very long time.</p>

<h2>ActiveRecord</h2>

<p>ActiveRecord is the design pattern I told you about yesterday. In Rails, the most well known web framework for Ruby, this design pattern is implemented in its own. What it does, in short, is mapping a database with an object. Columns of the database become attributes of the objects, you can create objects and save them to the db, or get objects from an entry in the db. Quite easy and practical!</p>

<p>Yesterday, we worked on that for the whole day. The morning was the introduction, and the afternoon the application. I&rsquo;ll say that it was a pretty good day, I learned a lot, and ActiveRecord is cool&hellip; Wait&hellip; Better than that : ActiveRecord is coolER than SQL!</p>

<h2>My first solo day</h2>

<p>Wednesdays are optional solo days. That means that every other day, we have to pair or group with more people, but on wednesdays, we choose our pairs/groups. I did not solo until then, but I thought that to save my voice I&#8217;ld try and do so yesterday.</p>

<p>In the end, I did finish the exercises, which was my goal. I had to go to other people soloing a couple of times, to get my mind off of the problems that were blocking me, and to help me figure out solutions sometimes, but I did it and I am pretty happy about it.</p>

<p>The beginning was hard and I just &hellip; felt like I did not know where I was going. But I got on it after I expressed my incomprehension a first time, and then I just worked, with a decent speed.</p>

<p>I don&rsquo;t know if I&rsquo;ll do that again, probably not next week, but probably another time. It was a good day but I prefer picking my pairs in the people I do well with (Looking at you Irene!).</p>

<p>Anyway, today is assessment and group project&hellip; time to have fun !</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Week 3 - Day 2 - More SQL, Testing, Cookies and Syrup]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/02/12/week-3-day-2-more-sql/"/>
    
    <updated>2014-02-12T08:39:34-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/02/12/week-3-day-2-more-sql</id>
    
    <content type="html"><![CDATA[<h2>More SQL</h2>

<p>Yesterday was another day when we used SQL, apparently the last (Yay!). We implemented our own version of <a href="http://en.wikipedia.org/wiki/Active_record_pattern">ActiveRecord</a>, a tool used in Rails that we will, apparently, use all the time and that will be the one talking with the base. But to use your tools correctly you first have to learn how they were built&hellip; And so that is what we did.</p>

<p>I paired with Erin for this day and it was really great. We had a good dynamic and we ended up finishing everything without any real problem going on. All in all, it was a great day for Quentin in DBC!</p>

<h2>Testing</h2>

<p>Shadi is back! So testing is back too ;)<br/>
He explained how to make our own version of Rspec, the testing suite for Ruby, and then handed us a series of tests for the exercises we had for the day. Things are getting complicated pretty fast, but I love it !</p>

<p>Testing is getting trickier but soon enough we&rsquo;ll get into some deep Rspec testing and for the newcomers : TESTING IS IMPORTANT! TEST ALL THE TIME!</p>

<h2>Cookies and Syrup</h2>

<p>So, I came here thinking americans ate junk food and only junk food. Such a disappointment to be in a house, in a program, and in a city where it is absolutely not the case!<br/>
I ended up being on some kind of sugar withdrawal in a few days, that is absolutely not the thing I would have suspected.</p>

<p>So, to compensate that, I buy cookies! And then, once or twice a day, take my usual bite. But then, I am now seen as some sort of cookie monster for eating a lot more than any other around&hellip; So strange.</p>

<p>As for the syrup, small but funny story : Ivan bought syrup, I took some (The throat is not 100% ok yet), then I got incredibly sleepy, and slept. The bad part is that it was 9AM and I was fighting sleep in the middle of a very interesting lecture on Testing.<br/>
The conclusion I got from that is : Read the fucking manual. Don&rsquo;t take syrup without reading all about it.</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Week 3 - Day 1 - SQL, Games, and Assessments]]></title>
    <link href="http://Qt-dev.github.io/blog/2014/02/11/week-3-day-1-sql/"/>
    
    <updated>2014-02-11T08:49:38-08:00</updated>
    <id>http://Qt-dev.github.io/blog/2014/02/11/week-3-day-1-sql</id>
    
    <content type="html"><![CDATA[<h2>SQL</h2>

<p>In the world of development, we could say that you have plenty of choices when picking your tools. Among these tools are hundreds, if not thousands, of languages. Some are pretty specifically used, even though they may not have been made for, some are pretty &ldquo;fast&rdquo; while others are &ldquo;not&rdquo;&hellip; But all in all, we can say that a hammer is a hammer. No matter the brand or the specs, the hammer will fulfill his role and that&rsquo;s it.</p>

<p>Anyway, yesterday we used SQL for the second time in phase 1. It is a language used to talk to a specific type of database (Any derivation of SQL), which may very well be one of the most common database type in the world, and that has been the case for more than 20 years. The language used to do so has been around for almost the same time too&hellip;<br/>
I paired with Tim, a very nice and tall guy, and we ended up doing as much as we could for the day. We learned tons, we played a bit, and it was fun. All in all, a good day, even if we spent the day on SQL&hellip;</p>

<h2>Games</h2>

<p>So, Web Development, and maybe even particularly in Dev Bootcamp, is a world of hard work combined with games. My opinion is that we party, we play, we develop games even, to cope with the rest of the hard day. A lot of brain-twisting challenges and very not fulfilling days spent on solving that bugs that would have taken 2 minutes to solve if you had seen that semi-colon earlier will do that to you and may ask for harder entertainment.</p>

<p>In DBC, we play. There are games all around, the Giant Djenga falls a couple of times a day, we did a Hack-a-thon this weekend (A coding contest where teams build stuff and compare at the end of the day. All with beer, pizzas, and a lot of laughter), and all in all, people are playful.</p>

<p>Yesterday we played Magic The Gathering with a couple of boots. I did not win but I loved the game. A long game, hard, where you have to think before you do stuff. It had been a long time and now I just regret I did not bring my cards myself ;)</p>

<h2>Assessments</h2>

<p>DBC is not about grading students. It is not the style of the house. But they do have to test us to make sure we can understand the next phase. So, to do that they assess us at the end of every phase.</p>

<p>This week is the end of the first Phase. Teachers will get with us for a short amount of time on Thursday and will review some of our code at this point. At this moment, no more help, just some control of your knowledge. At the end of that, we can be given one of 3 different options :</p>

<ul>
<li>Your level is high enough, welcome to Phase 2</li>
<li>You may want to spend 3 more weeks on Phase 1, just to make sure you get it all</li>
<li>Are you really sure you are learning anything? If not, DBC may not be the best thing for you&hellip;</li>
</ul>


<p>Now, let&rsquo;s hope for mine being the first one! I&rsquo;ll do my best anyway.<br/>
Small info for the people in the next cohorts : We chose our assessments. The output may be the same but you may not get the same.</p>

<p>Anyway, lecture is about to start again, let&rsquo;s go. Thank you for reading and see you tomorrow!</p>
]]></content>
    
  </entry>
  
</feed>